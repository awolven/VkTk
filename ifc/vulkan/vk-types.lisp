;;; this file is automatically generated, do not edit
#||
"Copyright (c) 2015-2017 The Khronos Group Inc.

Permission is hereby granted, free of charge, to any person obtaining a
copy of this software and/or associated documentation files (the
\"Materials\"), to deal in the Materials without restriction, including
without limitation the rights to use, copy, modify, merge, publish,
distribute, sublicense, and/or sell copies of the Materials, and to
permit persons to whom the Materials are furnished to do so, subject to
the following conditions:

The above copyright notice and this permission notice shall be included
in all copies or substantial portions of the Materials.

THE MATERIALS ARE PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
MATERIALS OR THE USE OR OTHER DEALINGS IN THE MATERIALS.

------------------------------------------------------------------------"
||#

;; Changes (into Lisp) Copyright 2019 Andrew Kenneth Wolven
;; <awolven@gmail.com>
;; 
;; Permission is hereby granted, free of charge, to any person obtaining
;; a copy of this software and associated documentation files (the
;; "Software"), to deal in the Software without restriction, including
;; without limitation the rights to use, copy, modify, merge, publish,
;; distribute, sublicense, and/or sell copies of the Software, and to
;; permit persons to whom the Software is furnished to do so, subject to
;; the following conditions:
;; 
;; The above copyright notice and this permission notice shall be
;; included in all copies or substantial portions of the Software.
;; 
;; THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
;; EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
;; MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
;; NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
;; LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
;; OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
;; WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

(cl:in-package #:vulkan)

(cl:defconstant VK_TRUE 1)
(cl:defconstant VK_FALSE 0)

(cl:defparameter *known-extension-names*
  '("VK_KHR_surface"
    "VK_KHR_swapchain"
    "VK_KHR_display"
    "VK_KHR_display_swapchain"
    "VK_KHR_xlib_surface"
    "VK_KHR_xcb_surface"
    "VK_KHR_wayland_surface"
    "VK_KHR_mir_surface"
    "VK_KHR_android_surface"
    "VK_KHR_win32_surface"
    "VK_EXT_debug_report"
    "VK_NV_glsl_shader"
    "VK_NV_extension_1"
    "VK_KHR_sampler_mirror_clamp_to_edge"
    "VK_IMG_filter_cubic"
    "VK_AMD_extension_17"
    "VK_AMD_extension_18"
    "VK_AMD_rasterization_order"
    "VK_AMD_extension_20"
    "VK_AMD_shader_trinary_minmax"
    "VK_AMD_shader_explicit_vertex_parameter"
    "VK_EXT_debug_marker"
    "VK_AMD_extension_24"
    "VK_AMD_extension_25"
    "VK_AMD_gcn_shader"
    "VK_NV_dedicated_allocation"
    "VK_NV_extension_28"
    "VK_NVX_extension_29"
    "VK_NVX_extension_30"
    "VK_NVX_extension_31"
    "VK_AMD_extension_32"
    "VK_AMD_extension_33"
    "VK_AMD_draw_indirect_count"
    "VK_AMD_extension_35"
    "VK_AMD_negative_viewport_height"
    "VK_AMD_gpu_shader_half_float"
    "VK_AMD_shader_ballot"
    "VK_AMD_extension_39"
    "VK_AMD_extension_40"
    "VK_AMD_extension_41"
    "VK_AMD_texture_gather_bias_lod"
    "VK_AMD_extension_43"
    "VK_AMD_extension_44"
    "VK_AMD_extension_45"
    "VK_AMD_extension_46"
    "VK_AMD_extension_47"
    "VK_NVX_extension_48"
    "VK_GOOGLE_extension_49"
    "VK_GOOGLE_extension_50"
    "VK_NVX_extension_51"
    "VK_NVX_extension_52"
    "VK_NV_extension_53"
    "VK_KHX_multiview"
    "VK_IMG_format_pvrtc"
    "VK_NV_external_memory_capabilities"
    "VK_NV_external_memory"
    "VK_NV_external_memory_win32"
    "VK_NV_win32_keyed_mutex"
    "VK_KHR_get_physical_device_properties2"
    "VK_KHX_device_group"
    "VK_EXT_validation_flags"
    "VK_NN_vi_surface"
    "VK_KHR_shader_draw_parameters"
    "VK_EXT_shader_subgroup_ballot"
    "VK_EXT_shader_subgroup_vote"
    "VK_ARM_extension_01"
    "VK_ARM_extension_02"
    "VK_IMG_extension_69"
    "VK_KHR_maintenance1"
    "VK_KHX_device_group_creation"
    "VK_KHX_external_memory_capabilities"
    "VK_KHX_external_memory"
    "VK_KHX_external_memory_win32"
    "VK_KHX_external_memory_fd"
    "VK_KHX_win32_keyed_mutex"
    "VK_KHX_external_semaphore_capabilities"
    "VK_KHX_external_semaphore"
    "VK_KHX_external_semaphore_win32"
    "VK_KHX_external_semaphore_fd"
    "VK_KHR_push_descriptor"
    "VK_KHR_extension_82"
    "VK_KHR_extension_83"
    "VK_KHR_extension_84"
    "VK_KHR_incremental_present"
    "VK_KHR_descriptor_update_template"
    "VK_NVX_device_generated_commands"
    "VK_NV_clip_space_w_scaling"
    "VK_EXT_direct_mode_display"
    "VK_EXT_acquire_xlib_display"
    "VK_EXT_display_surface_counter"
    "VK_EXT_display_control"
    "VK_GOOGLE_display_timing"
    "VK_KHR_extension_94"
    "VK_NV_sample_mask_override_coverage"
    "VK_NV_geometry_shader_passthrough"
    "VK_NV_viewport_array2"
    "VK_NVX_multiview_per_view_attributes"
    "VK_NV_viewport_swizzle"
    "VK_EXT_discard_rectangles"
    "VK_NV_extension_101"
    "VK_NV_extension_102"
    "VK_NV_extension_103"
    "VK_NV_extension_104"
    "VK_EXT_swapchain_colorspace"
    "VK_EXT_hdr_metadata"
    "VK_IMG_extension_107"
    "VK_IMG_extension_108"
    "VK_IMG_extension_109"
    "VK_IMG_extension_110"
    "VK_IMG_extension_111"
    "VK_KHR_shared_presentable_image"
    "VK_KHR_extension_113"
    "VK_KHR_extension_114"
    "VK_KHR_extension_115"
    "VK_KHR_extension_116"
    "VK_KHR_extension_117"
    "VK_KHR_extension_118"
    "VK_KHR_extension_119"
    "VK_KHR_get_surface_capabilities2"
    "VK_KHR_variable_pointers"
    "VK_KHR_extension_122"
    "VK_MVK_ios_surface"
    "VK_MVK_macos_surface"
    "VK_MVK_moltenvk"
    "VK_MESA_extension_126"
    "VK_MESA_extension_127"
    "VK_KHR_extension_128"
    "VK_EXT_extension_129"
    "VK_KHR_extension_130"
    "VK_KHR_extension_131"
    "VK_KHR_extension_132"
    "VK_AMD_extension_133"
    "VK_AMD_extension_134"
    "VK_AMD_extension_135"
    "VK_AMD_extension_136"
    "VK_AMD_extension_137"
    "VK_AMD_extension_138"
    "VK_AMD_extension_139"
    "VK_AMD_extension_140"
    "VK_AMD_extension_141"
    "VK_AMD_extension_142"
    "VK_AMD_extension_143"
    "VK_AMD_extension_144"
    "VK_KHR_relaxed_block_layout"
    "VK_KHR_extension_146"
    "VK_KHR_extension_147"
    "VK_EXT_extension_148"
    "VK_NV_extension_149"
    "VK_NV_extension_150"
    "VK_NV_extension_151"
    "VK_NV_extension_152"
    "VK_NV_extension_153"
    "VK_NV_extension_154"
    "VK_NV_extension_155"
    "VK_NV_extension_156"
    "VK_KHR_extension_157"
    "VK_KHR_extension_158"
    "VK_EXT_extension_159"))

(cffi:defctype VkSampleMask :uint32)

(cffi:defctype VkBool32 :uint32)

(cffi:defctype VkFlags :uint32)

(cffi:defctype VkDeviceSize :uint64)

(cffi:defctype handle :pointer)
(cl:eval-when (:compile-toplevel :load-toplevel :execute)
   (cl:if (cl:= 8 (cffi:foreign-type-size :pointer))
       (cl:progn
          (cffi:defctype size-t :uint64)
          (cffi:defctype non-dispatch-handle :pointer))
       (cl:progn
          (cffi:defctype size-t :uint32)
          (cffi:defctype non-dispatch-handle :uint64))))

(cffi:defctype ANativeWindow :void)

(cffi:defctype MirConnection :void)

(cffi:defctype MirSurface :void)

(cffi:defctype xcb_connection_t :void)

(cffi:defctype Display :void)

(cffi:defctype HINSTANCE (:pointer :void))

(cffi:defctype HWND (:pointer :void))

(cffi:defctype HANDLE (:pointer :void))

(cffi:defctype DWORD :uint32)

(cffi:defctype LPCWSTR (:pointer :void))

(cffi:defctype RROutput :ulong)

(cffi:defctype xcb_window_t :uint32)

(cffi:defctype window :ulong)

(cffi:defctype VisualID :ulong)

(cffi:defctype SECURITY_ATTRIBUTES (:pointer :void))

(cffi:defcstruct wl_display)

(cffi:defcstruct wl_surface)

(cffi:defctype VkInstance HANDLE)

(cffi:defctype VkPhysicalDevice HANDLE)

(cffi:defctype VkDevice HANDLE)

(cffi:defctype VkQueue HANDLE)

(cffi:defctype VkCommandBuffer HANDLE)

(cffi:defctype VkDeviceMemory NON-DISPATCH-HANDLE)

(cffi:defctype VkCommandPool NON-DISPATCH-HANDLE)

(cffi:defctype VkBuffer NON-DISPATCH-HANDLE)

(cffi:defctype VkBufferView NON-DISPATCH-HANDLE)

(cffi:defctype VkImage NON-DISPATCH-HANDLE)

(cffi:defctype VkImageView NON-DISPATCH-HANDLE)

(cffi:defctype VkShaderModule NON-DISPATCH-HANDLE)

(cffi:defctype VkPipeline NON-DISPATCH-HANDLE)

(cffi:defctype VkPipelineLayout NON-DISPATCH-HANDLE)

(cffi:defctype VkSampler NON-DISPATCH-HANDLE)

(cffi:defctype VkDescriptorSet NON-DISPATCH-HANDLE)

(cffi:defctype VkDescriptorSetLayout NON-DISPATCH-HANDLE)

(cffi:defctype VkDescriptorPool NON-DISPATCH-HANDLE)

(cffi:defctype VkFence NON-DISPATCH-HANDLE)

(cffi:defctype VkSemaphore NON-DISPATCH-HANDLE)

(cffi:defctype VkEvent NON-DISPATCH-HANDLE)

(cffi:defctype VkQueryPool NON-DISPATCH-HANDLE)

(cffi:defctype VkFramebuffer NON-DISPATCH-HANDLE)

(cffi:defctype VkRenderPass NON-DISPATCH-HANDLE)

(cffi:defctype VkPipelineCache NON-DISPATCH-HANDLE)

(cffi:defctype VkObjectTableNVX NON-DISPATCH-HANDLE)

(cffi:defctype VkIndirectCommandsLayoutNVX NON-DISPATCH-HANDLE)

(cffi:defctype VkDescriptorUpdateTemplateKHR NON-DISPATCH-HANDLE)

(cffi:defctype VkDisplayKHR NON-DISPATCH-HANDLE)

(cffi:defctype VkDisplayModeKHR NON-DISPATCH-HANDLE)

(cffi:defctype VkSurfaceKHR NON-DISPATCH-HANDLE)

(cffi:defctype VkSwapchainKHR NON-DISPATCH-HANDLE)

(cffi:defctype VkDebugReportCallbackEXT NON-DISPATCH-HANDLE)

(cffi:defctype VkAccessFlagBits :int)
(cl:defconstant VK_ACCESS_INDIRECT_COMMAND_READ_BIT #x1)
(cl:defconstant VK_ACCESS_INDEX_READ_BIT #x2)
(cl:defconstant VK_ACCESS_VERTEX_ATTRIBUTE_READ_BIT #x4)
(cl:defconstant VK_ACCESS_UNIFORM_READ_BIT #x8)
(cl:defconstant VK_ACCESS_INPUT_ATTACHMENT_READ_BIT #x10)
(cl:defconstant VK_ACCESS_SHADER_READ_BIT #x20)
(cl:defconstant VK_ACCESS_SHADER_WRITE_BIT #x40)
(cl:defconstant VK_ACCESS_COLOR_ATTACHMENT_READ_BIT #x80)
(cl:defconstant VK_ACCESS_COLOR_ATTACHMENT_WRITE_BIT #x100)
(cl:defconstant VK_ACCESS_DEPTH_STENCIL_ATTACHMENT_READ_BIT #x200)
(cl:defconstant VK_ACCESS_DEPTH_STENCIL_ATTACHMENT_WRITE_BIT #x400)
(cl:defconstant VK_ACCESS_TRANSFER_READ_BIT #x800)
(cl:defconstant VK_ACCESS_TRANSFER_WRITE_BIT #x1000)
(cl:defconstant VK_ACCESS_HOST_READ_BIT #x2000)
(cl:defconstant VK_ACCESS_HOST_WRITE_BIT #x4000)
(cl:defconstant VK_ACCESS_MEMORY_READ_BIT #x8000)
(cl:defconstant VK_ACCESS_MEMORY_WRITE_BIT #x10000)
(cl:defconstant VK_ACCESS_COMMAND_PROCESS_READ_BIT_NVX #x20000)
(cl:defconstant VK_ACCESS_COMMAND_PROCESS_WRITE_BIT_NVX #x40000)

(cffi:defctype VkAccessFlags :int)

(cffi:defctype VkAndroidSurfaceCreateFlagsKHR :int)

(cffi:defctype VkAttachmentDescriptionFlagBits :int)
(cl:defconstant VK_ATTACHMENT_DESCRIPTION_MAY_ALIAS_BIT #x1)

(cffi:defctype VkAttachmentDescriptionFlags :int)

(cffi:defctype VkBufferCreateFlagBits :int)
(cl:defconstant VK_BUFFER_CREATE_SPARSE_BINDING_BIT #x1)
(cl:defconstant VK_BUFFER_CREATE_SPARSE_RESIDENCY_BIT #x2)
(cl:defconstant VK_BUFFER_CREATE_SPARSE_ALIASED_BIT #x4)

(cffi:defctype VkBufferCreateFlags :int)

(cffi:defctype VkBufferUsageFlagBits :int)
(cl:defconstant VK_BUFFER_USAGE_TRANSFER_SRC_BIT #x1)
(cl:defconstant VK_BUFFER_USAGE_TRANSFER_DST_BIT #x2)
(cl:defconstant VK_BUFFER_USAGE_UNIFORM_TEXEL_BUFFER_BIT #x4)
(cl:defconstant VK_BUFFER_USAGE_STORAGE_TEXEL_BUFFER_BIT #x8)
(cl:defconstant VK_BUFFER_USAGE_UNIFORM_BUFFER_BIT #x10)
(cl:defconstant VK_BUFFER_USAGE_STORAGE_BUFFER_BIT #x20)
(cl:defconstant VK_BUFFER_USAGE_INDEX_BUFFER_BIT #x40)
(cl:defconstant VK_BUFFER_USAGE_VERTEX_BUFFER_BIT #x80)
(cl:defconstant VK_BUFFER_USAGE_INDIRECT_BUFFER_BIT #x100)

(cffi:defctype VkBufferUsageFlags :int)

(cffi:defctype VkBufferViewCreateFlags :int)

(cffi:defctype VkColorComponentFlagBits :int)
(cl:defconstant VK_COLOR_COMPONENT_R_BIT #x1)
(cl:defconstant VK_COLOR_COMPONENT_G_BIT #x2)
(cl:defconstant VK_COLOR_COMPONENT_B_BIT #x4)
(cl:defconstant VK_COLOR_COMPONENT_A_BIT #x8)

(cffi:defctype VkColorComponentFlags :int)

(cffi:defctype VkCommandBufferResetFlagBits :int)
(cl:defconstant VK_COMMAND_BUFFER_RESET_RELEASE_RESOURCES_BIT #x1)

(cffi:defctype VkCommandBufferResetFlags :int)

(cffi:defctype VkCommandBufferUsageFlagBits :int)
(cl:defconstant VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT #x1)
(cl:defconstant VK_COMMAND_BUFFER_USAGE_RENDER_PASS_CONTINUE_BIT #x2)
(cl:defconstant VK_COMMAND_BUFFER_USAGE_SIMULTANEOUS_USE_BIT #x4)

(cffi:defctype VkCommandBufferUsageFlags :int)

(cffi:defctype VkCommandPoolCreateFlagBits :int)
(cl:defconstant VK_COMMAND_POOL_CREATE_TRANSIENT_BIT #x1)
(cl:defconstant VK_COMMAND_POOL_CREATE_RESET_COMMAND_BUFFER_BIT #x2)

(cffi:defctype VkCommandPoolCreateFlags :int)

(cffi:defctype VkCommandPoolResetFlagBits :int)
(cl:defconstant VK_COMMAND_POOL_RESET_RELEASE_RESOURCES_BIT #x1)

(cffi:defctype VkCommandPoolResetFlags :int)

(cffi:defctype VkCommandPoolTrimFlagsKHR :int)

(cffi:defctype VkCompositeAlphaFlagBitsKHR :int)
(cl:defconstant VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR #x1)
(cl:defconstant VK_COMPOSITE_ALPHA_PRE_MULTIPLIED_BIT_KHR #x2)
(cl:defconstant VK_COMPOSITE_ALPHA_POST_MULTIPLIED_BIT_KHR #x4)
(cl:defconstant VK_COMPOSITE_ALPHA_INHERIT_BIT_KHR #x8)

(cffi:defctype VkCompositeAlphaFlagsKHR :int)

(cffi:defctype VkCullModeFlagBits :int)
(cl:defconstant VK_CULL_MODE_NONE #x0)
(cl:defconstant VK_CULL_MODE_FRONT_BIT #x1)
(cl:defconstant VK_CULL_MODE_BACK_BIT #x2)
(cl:defconstant VK_CULL_MODE_FRONT_AND_BACK #x3)

(cffi:defctype VkCullModeFlags :int)

(cffi:defctype VkDebugReportFlagBitsEXT :int)
(cl:defconstant VK_DEBUG_REPORT_INFORMATION_BIT_EXT #x1)
(cl:defconstant VK_DEBUG_REPORT_WARNING_BIT_EXT #x2)
(cl:defconstant VK_DEBUG_REPORT_PERFORMANCE_WARNING_BIT_EXT #x4)
(cl:defconstant VK_DEBUG_REPORT_ERROR_BIT_EXT #x8)
(cl:defconstant VK_DEBUG_REPORT_DEBUG_BIT_EXT #x10)

(cffi:defctype VkDebugReportFlagsEXT :int)

(cffi:defctype VkDependencyFlagBits :int)
(cl:defconstant VK_DEPENDENCY_BY_REGION_BIT #x1)
(cl:defconstant VK_DEPENDENCY_VIEW_LOCAL_BIT_KHX #x2)
(cl:defconstant VK_DEPENDENCY_DEVICE_GROUP_BIT_KHX #x4)

(cffi:defctype VkDependencyFlags :int)

(cffi:defctype VkDescriptorPoolCreateFlagBits :int)
(cl:defconstant VK_DESCRIPTOR_POOL_CREATE_FREE_DESCRIPTOR_SET_BIT #x1)

(cffi:defctype VkDescriptorPoolCreateFlags :int)

(cffi:defctype VkDescriptorPoolResetFlags :int)

(cffi:defctype VkDescriptorSetLayoutCreateFlagBits :int)
(cl:defconstant VK_DESCRIPTOR_SET_LAYOUT_CREATE_PUSH_DESCRIPTOR_BIT_KHR #x1)

(cffi:defctype VkDescriptorSetLayoutCreateFlags :int)

(cffi:defctype VkDescriptorUpdateTemplateCreateFlagsKHR :int)

(cffi:defctype VkDeviceCreateFlags :int)

(cffi:defctype VkDeviceGroupPresentModeFlagBitsKHX :int)
(cl:defconstant VK_DEVICE_GROUP_PRESENT_MODE_LOCAL_BIT_KHX #x1)
(cl:defconstant VK_DEVICE_GROUP_PRESENT_MODE_REMOTE_BIT_KHX #x2)
(cl:defconstant VK_DEVICE_GROUP_PRESENT_MODE_SUM_BIT_KHX #x4)
(cl:defconstant VK_DEVICE_GROUP_PRESENT_MODE_LOCAL_MULTI_DEVICE_BIT_KHX #x8)

(cffi:defctype VkDeviceGroupPresentModeFlagsKHX :int)

(cffi:defctype VkDeviceQueueCreateFlags :int)

(cffi:defctype VkDisplayModeCreateFlagsKHR :int)

(cffi:defctype VkDisplayPlaneAlphaFlagBitsKHR :int)
(cl:defconstant VK_DISPLAY_PLANE_ALPHA_OPAQUE_BIT_KHR #x1)
(cl:defconstant VK_DISPLAY_PLANE_ALPHA_GLOBAL_BIT_KHR #x2)
(cl:defconstant VK_DISPLAY_PLANE_ALPHA_PER_PIXEL_BIT_KHR #x4)
(cl:defconstant VK_DISPLAY_PLANE_ALPHA_PER_PIXEL_PREMULTIPLIED_BIT_KHR #x8)

(cffi:defctype VkDisplayPlaneAlphaFlagsKHR :int)

(cffi:defctype VkDisplaySurfaceCreateFlagsKHR :int)

(cffi:defctype VkEventCreateFlags :int)

(cffi:defctype VkExternalMemoryFeatureFlagBitsKHX :int)
(cl:defconstant VK_EXTERNAL_MEMORY_FEATURE_DEDICATED_ONLY_BIT_KHX #x1)
(cl:defconstant VK_EXTERNAL_MEMORY_FEATURE_EXPORTABLE_BIT_KHX #x2)
(cl:defconstant VK_EXTERNAL_MEMORY_FEATURE_IMPORTABLE_BIT_KHX #x4)

(cffi:defctype VkExternalMemoryFeatureFlagBitsNV :int)
(cl:defconstant VK_EXTERNAL_MEMORY_FEATURE_DEDICATED_ONLY_BIT_NV #x1)
(cl:defconstant VK_EXTERNAL_MEMORY_FEATURE_EXPORTABLE_BIT_NV #x2)
(cl:defconstant VK_EXTERNAL_MEMORY_FEATURE_IMPORTABLE_BIT_NV #x4)

(cffi:defctype VkExternalMemoryFeatureFlagsKHX :int)

(cffi:defctype VkExternalMemoryFeatureFlagsNV :int)

(cffi:defctype VkExternalMemoryHandleTypeFlagBitsKHX :int)
(cl:defconstant VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_FD_BIT_KHX #x1)
(cl:defconstant VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_BIT_KHX #x2)
(cl:defconstant VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT_KHX #x4)
(cl:defconstant VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_TEXTURE_BIT_KHX #x8)
(cl:defconstant VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_TEXTURE_KMT_BIT_KHX #x10)
(cl:defconstant VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D12_HEAP_BIT_KHX #x20)
(cl:defconstant VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D12_RESOURCE_BIT_KHX #x40)

(cffi:defctype VkExternalMemoryHandleTypeFlagBitsNV :int)
(cl:defconstant VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_BIT_NV #x1)
(cl:defconstant VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT_NV #x2)
(cl:defconstant VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_IMAGE_BIT_NV #x4)
(cl:defconstant VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_IMAGE_KMT_BIT_NV #x8)

(cffi:defctype VkExternalMemoryHandleTypeFlagsKHX :int)

(cffi:defctype VkExternalMemoryHandleTypeFlagsNV :int)

(cffi:defctype VkExternalSemaphoreFeatureFlagBitsKHX :int)
(cl:defconstant VK_EXTERNAL_SEMAPHORE_FEATURE_EXPORTABLE_BIT_KHX #x1)
(cl:defconstant VK_EXTERNAL_SEMAPHORE_FEATURE_IMPORTABLE_BIT_KHX #x2)

(cffi:defctype VkExternalSemaphoreFeatureFlagsKHX :int)

(cffi:defctype VkExternalSemaphoreHandleTypeFlagBitsKHX :int)
(cl:defconstant VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_FD_BIT_KHX #x1)
(cl:defconstant VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_WIN32_BIT_KHX #x2)
(cl:defconstant VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT_KHX #x4)
(cl:defconstant VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_D3D12_FENCE_BIT_KHX #x8)
(cl:defconstant VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_FENCE_FD_BIT_KHX #x10)

(cffi:defctype VkExternalSemaphoreHandleTypeFlagsKHX :int)

(cffi:defctype VkFenceCreateFlagBits :int)
(cl:defconstant VK_FENCE_CREATE_SIGNALED_BIT #x1)

(cffi:defctype VkFenceCreateFlags :int)

(cffi:defctype VkFormatFeatureFlagBits :int)
(cl:defconstant VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT #x1)
(cl:defconstant VK_FORMAT_FEATURE_STORAGE_IMAGE_BIT #x2)
(cl:defconstant VK_FORMAT_FEATURE_STORAGE_IMAGE_ATOMIC_BIT #x4)
(cl:defconstant VK_FORMAT_FEATURE_UNIFORM_TEXEL_BUFFER_BIT #x8)
(cl:defconstant VK_FORMAT_FEATURE_STORAGE_TEXEL_BUFFER_BIT #x10)
(cl:defconstant VK_FORMAT_FEATURE_STORAGE_TEXEL_BUFFER_ATOMIC_BIT #x20)
(cl:defconstant VK_FORMAT_FEATURE_VERTEX_BUFFER_BIT #x40)
(cl:defconstant VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BIT #x80)
(cl:defconstant VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BLEND_BIT #x100)
(cl:defconstant VK_FORMAT_FEATURE_DEPTH_STENCIL_ATTACHMENT_BIT #x200)
(cl:defconstant VK_FORMAT_FEATURE_BLIT_SRC_BIT #x400)
(cl:defconstant VK_FORMAT_FEATURE_BLIT_DST_BIT #x800)
(cl:defconstant VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT #x1000)
(cl:defconstant VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_CUBIC_BIT_IMG #x2000)
(cl:defconstant VK_FORMAT_FEATURE_TRANSFER_SRC_BIT_KHR #x4000)
(cl:defconstant VK_FORMAT_FEATURE_TRANSFER_DST_BIT_KHR #x8000)

(cffi:defctype VkFormatFeatureFlags :int)

(cffi:defctype VkFramebufferCreateFlags :int)

(cffi:defctype VkIOSSurfaceCreateFlagsMVK :int)

(cffi:defctype VkImageAspectFlagBits :int)
(cl:defconstant VK_IMAGE_ASPECT_COLOR_BIT #x1)
(cl:defconstant VK_IMAGE_ASPECT_DEPTH_BIT #x2)
(cl:defconstant VK_IMAGE_ASPECT_STENCIL_BIT #x4)
(cl:defconstant VK_IMAGE_ASPECT_METADATA_BIT #x8)

(cffi:defctype VkImageAspectFlags :int)

(cffi:defctype VkImageCreateFlagBits :int)
(cl:defconstant VK_IMAGE_CREATE_SPARSE_BINDING_BIT #x1)
(cl:defconstant VK_IMAGE_CREATE_SPARSE_RESIDENCY_BIT #x2)
(cl:defconstant VK_IMAGE_CREATE_SPARSE_ALIASED_BIT #x4)
(cl:defconstant VK_IMAGE_CREATE_MUTABLE_FORMAT_BIT #x8)
(cl:defconstant VK_IMAGE_CREATE_CUBE_COMPATIBLE_BIT #x10)
(cl:defconstant VK_IMAGE_CREATE_BIND_SFR_BIT_KHX #x40)
(cl:defconstant VK_IMAGE_CREATE_2D_ARRAY_COMPATIBLE_BIT_KHR #x20)

(cffi:defctype VkImageCreateFlags :int)

(cffi:defctype VkImageUsageFlagBits :int)
(cl:defconstant VK_IMAGE_USAGE_TRANSFER_SRC_BIT #x1)
(cl:defconstant VK_IMAGE_USAGE_TRANSFER_DST_BIT #x2)
(cl:defconstant VK_IMAGE_USAGE_SAMPLED_BIT #x4)
(cl:defconstant VK_IMAGE_USAGE_STORAGE_BIT #x8)
(cl:defconstant VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT #x10)
(cl:defconstant VK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT #x20)
(cl:defconstant VK_IMAGE_USAGE_TRANSIENT_ATTACHMENT_BIT #x40)
(cl:defconstant VK_IMAGE_USAGE_INPUT_ATTACHMENT_BIT #x80)

(cffi:defctype VkImageUsageFlags :int)

(cffi:defctype VkImageViewCreateFlags :int)

(cffi:defctype VkIndirectCommandsLayoutUsageFlagBitsNVX :int)
(cl:defconstant VK_INDIRECT_COMMANDS_LAYOUT_USAGE_UNORDERED_SEQUENCES_BIT_NVX #x1)
(cl:defconstant VK_INDIRECT_COMMANDS_LAYOUT_USAGE_SPARSE_SEQUENCES_BIT_NVX #x2)
(cl:defconstant VK_INDIRECT_COMMANDS_LAYOUT_USAGE_EMPTY_EXECUTIONS_BIT_NVX #x4)
(cl:defconstant VK_INDIRECT_COMMANDS_LAYOUT_USAGE_INDEXED_SEQUENCES_BIT_NVX #x8)

(cffi:defctype VkIndirectCommandsLayoutUsageFlagsNVX :int)

(cffi:defctype VkInstanceCreateFlags :int)

(cffi:defctype VkMacOSSurfaceCreateFlagsMVK :int)

(cffi:defctype VkMemoryAllocateFlagBitsKHX :int)
(cl:defconstant VK_MEMORY_ALLOCATE_DEVICE_MASK_BIT_KHX #x1)

(cffi:defctype VkMemoryAllocateFlagsKHX :int)

(cffi:defctype VkMemoryHeapFlagBits :int)
(cl:defconstant VK_MEMORY_HEAP_DEVICE_LOCAL_BIT #x1)
(cl:defconstant VK_MEMORY_HEAP_MULTI_INSTANCE_BIT_KHX #x2)

(cffi:defctype VkMemoryHeapFlags :int)

(cffi:defctype VkMemoryMapFlags :int)

(cffi:defctype VkMemoryPropertyFlagBits :int)
(cl:defconstant VK_MEMORY_PROPERTY_DEVICE_LOCAL_BIT #x1)
(cl:defconstant VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT #x2)
(cl:defconstant VK_MEMORY_PROPERTY_HOST_COHERENT_BIT #x4)
(cl:defconstant VK_MEMORY_PROPERTY_HOST_CACHED_BIT #x8)
(cl:defconstant VK_MEMORY_PROPERTY_LAZILY_ALLOCATED_BIT #x10)

(cffi:defctype VkMemoryPropertyFlags :int)

(cffi:defctype VkMirSurfaceCreateFlagsKHR :int)

(cffi:defctype VkObjectEntryUsageFlagBitsNVX :int)
(cl:defconstant VK_OBJECT_ENTRY_USAGE_GRAPHICS_BIT_NVX #x1)
(cl:defconstant VK_OBJECT_ENTRY_USAGE_COMPUTE_BIT_NVX #x2)

(cffi:defctype VkObjectEntryUsageFlagsNVX :int)

(cffi:defctype VkPeerMemoryFeatureFlagBitsKHX :int)
(cl:defconstant VK_PEER_MEMORY_FEATURE_COPY_SRC_BIT_KHX #x1)
(cl:defconstant VK_PEER_MEMORY_FEATURE_COPY_DST_BIT_KHX #x2)
(cl:defconstant VK_PEER_MEMORY_FEATURE_GENERIC_SRC_BIT_KHX #x4)
(cl:defconstant VK_PEER_MEMORY_FEATURE_GENERIC_DST_BIT_KHX #x8)

(cffi:defctype VkPeerMemoryFeatureFlagsKHX :int)

(cffi:defctype VkPipelineCacheCreateFlags :int)

(cffi:defctype VkPipelineColorBlendStateCreateFlags :int)

(cffi:defctype VkPipelineCreateFlagBits :int)
(cl:defconstant VK_PIPELINE_CREATE_DISABLE_OPTIMIZATION_BIT #x1)
(cl:defconstant VK_PIPELINE_CREATE_ALLOW_DERIVATIVES_BIT #x2)
(cl:defconstant VK_PIPELINE_CREATE_DERIVATIVE_BIT #x4)
(cl:defconstant VK_PIPELINE_CREATE_VIEW_INDEX_FROM_DEVICE_INDEX_BIT_KHX #x8)
(cl:defconstant VK_PIPELINE_CREATE_DISPATCH_BASE_KHX #x10)

(cffi:defctype VkPipelineCreateFlags :int)

(cffi:defctype VkPipelineDepthStencilStateCreateFlags :int)

(cffi:defctype VkPipelineDiscardRectangleStateCreateFlagsEXT :int)

(cffi:defctype VkPipelineDynamicStateCreateFlags :int)

(cffi:defctype VkPipelineInputAssemblyStateCreateFlags :int)

(cffi:defctype VkPipelineLayoutCreateFlags :int)

(cffi:defctype VkPipelineMultisampleStateCreateFlags :int)

(cffi:defctype VkPipelineRasterizationStateCreateFlags :int)

(cffi:defctype VkPipelineShaderStageCreateFlags :int)

(cffi:defctype VkPipelineStageFlagBits :int)
(cl:defconstant VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT #x1)
(cl:defconstant VK_PIPELINE_STAGE_DRAW_INDIRECT_BIT #x2)
(cl:defconstant VK_PIPELINE_STAGE_VERTEX_INPUT_BIT #x4)
(cl:defconstant VK_PIPELINE_STAGE_VERTEX_SHADER_BIT #x8)
(cl:defconstant VK_PIPELINE_STAGE_TESSELLATION_CONTROL_SHADER_BIT #x10)
(cl:defconstant VK_PIPELINE_STAGE_TESSELLATION_EVALUATION_SHADER_BIT #x20)
(cl:defconstant VK_PIPELINE_STAGE_GEOMETRY_SHADER_BIT #x40)
(cl:defconstant VK_PIPELINE_STAGE_FRAGMENT_SHADER_BIT #x80)
(cl:defconstant VK_PIPELINE_STAGE_EARLY_FRAGMENT_TESTS_BIT #x100)
(cl:defconstant VK_PIPELINE_STAGE_LATE_FRAGMENT_TESTS_BIT #x200)
(cl:defconstant VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT #x400)
(cl:defconstant VK_PIPELINE_STAGE_COMPUTE_SHADER_BIT #x800)
(cl:defconstant VK_PIPELINE_STAGE_TRANSFER_BIT #x1000)
(cl:defconstant VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT #x2000)
(cl:defconstant VK_PIPELINE_STAGE_HOST_BIT #x4000)
(cl:defconstant VK_PIPELINE_STAGE_ALL_GRAPHICS_BIT #x8000)
(cl:defconstant VK_PIPELINE_STAGE_ALL_COMMANDS_BIT #x10000)
(cl:defconstant VK_PIPELINE_STAGE_COMMAND_PROCESS_BIT_NVX #x20000)

(cffi:defctype VkPipelineStageFlags :int)

(cffi:defctype VkPipelineTessellationStateCreateFlags :int)

(cffi:defctype VkPipelineVertexInputStateCreateFlags :int)

(cffi:defctype VkPipelineViewportStateCreateFlags :int)

(cffi:defctype VkPipelineViewportSwizzleStateCreateFlagsNV :int)

(cffi:defctype VkQueryControlFlagBits :int)
(cl:defconstant VK_QUERY_CONTROL_PRECISE_BIT #x1)

(cffi:defctype VkQueryControlFlags :int)

(cffi:defctype VkQueryPipelineStatisticFlagBits :int)
(cl:defconstant VK_QUERY_PIPELINE_STATISTIC_INPUT_ASSEMBLY_VERTICES_BIT #x1)
(cl:defconstant VK_QUERY_PIPELINE_STATISTIC_INPUT_ASSEMBLY_PRIMITIVES_BIT #x2)
(cl:defconstant VK_QUERY_PIPELINE_STATISTIC_VERTEX_SHADER_INVOCATIONS_BIT #x4)
(cl:defconstant VK_QUERY_PIPELINE_STATISTIC_GEOMETRY_SHADER_INVOCATIONS_BIT #x8)
(cl:defconstant VK_QUERY_PIPELINE_STATISTIC_GEOMETRY_SHADER_PRIMITIVES_BIT #x10)
(cl:defconstant VK_QUERY_PIPELINE_STATISTIC_CLIPPING_INVOCATIONS_BIT #x20)
(cl:defconstant VK_QUERY_PIPELINE_STATISTIC_CLIPPING_PRIMITIVES_BIT #x40)
(cl:defconstant VK_QUERY_PIPELINE_STATISTIC_FRAGMENT_SHADER_INVOCATIONS_BIT #x80)
(cl:defconstant VK_QUERY_PIPELINE_STATISTIC_TESSELLATION_CONTROL_SHADER_PATCHES_BIT #x100)
(cl:defconstant VK_QUERY_PIPELINE_STATISTIC_TESSELLATION_EVALUATION_SHADER_INVOCATIONS_BIT #x200)
(cl:defconstant VK_QUERY_PIPELINE_STATISTIC_COMPUTE_SHADER_INVOCATIONS_BIT #x400)

(cffi:defctype VkQueryPipelineStatisticFlags :int)

(cffi:defctype VkQueryPoolCreateFlags :int)

(cffi:defctype VkQueryResultFlagBits :int)
(cl:defconstant VK_QUERY_RESULT_64_BIT #x1)
(cl:defconstant VK_QUERY_RESULT_WAIT_BIT #x2)
(cl:defconstant VK_QUERY_RESULT_WITH_AVAILABILITY_BIT #x4)
(cl:defconstant VK_QUERY_RESULT_PARTIAL_BIT #x8)

(cffi:defctype VkQueryResultFlags :int)

(cffi:defctype VkQueueFlagBits :int)
(cl:defconstant VK_QUEUE_GRAPHICS_BIT #x1)
(cl:defconstant VK_QUEUE_COMPUTE_BIT #x2)
(cl:defconstant VK_QUEUE_TRANSFER_BIT #x4)
(cl:defconstant VK_QUEUE_SPARSE_BINDING_BIT #x8)

(cffi:defctype VkQueueFlags :int)

(cffi:defctype VkRenderPassCreateFlags :int)

(cffi:defctype VkSampleCountFlagBits :int)
(cl:defconstant VK_SAMPLE_COUNT_1_BIT #x1)
(cl:defconstant VK_SAMPLE_COUNT_2_BIT #x2)
(cl:defconstant VK_SAMPLE_COUNT_4_BIT #x4)
(cl:defconstant VK_SAMPLE_COUNT_8_BIT #x8)
(cl:defconstant VK_SAMPLE_COUNT_16_BIT #x10)
(cl:defconstant VK_SAMPLE_COUNT_32_BIT #x20)
(cl:defconstant VK_SAMPLE_COUNT_64_BIT #x40)

(cffi:defctype VkSampleCountFlags :int)

(cffi:defctype VkSamplerCreateFlags :int)

(cffi:defctype VkSemaphoreCreateFlags :int)

(cffi:defctype VkShaderModuleCreateFlags :int)

(cffi:defctype VkShaderStageFlagBits :int)
(cl:defconstant VK_SHADER_STAGE_VERTEX_BIT #x1)
(cl:defconstant VK_SHADER_STAGE_TESSELLATION_CONTROL_BIT #x2)
(cl:defconstant VK_SHADER_STAGE_TESSELLATION_EVALUATION_BIT #x4)
(cl:defconstant VK_SHADER_STAGE_GEOMETRY_BIT #x8)
(cl:defconstant VK_SHADER_STAGE_FRAGMENT_BIT #x10)
(cl:defconstant VK_SHADER_STAGE_COMPUTE_BIT #x20)
(cl:defconstant VK_SHADER_STAGE_ALL_GRAPHICS #x1F)
(cl:defconstant VK_SHADER_STAGE_ALL #x7FFFFFFF)

(cffi:defctype VkShaderStageFlags :int)

(cffi:defctype VkSparseImageFormatFlagBits :int)
(cl:defconstant VK_SPARSE_IMAGE_FORMAT_SINGLE_MIPTAIL_BIT #x1)
(cl:defconstant VK_SPARSE_IMAGE_FORMAT_ALIGNED_MIP_SIZE_BIT #x2)
(cl:defconstant VK_SPARSE_IMAGE_FORMAT_NONSTANDARD_BLOCK_SIZE_BIT #x4)

(cffi:defctype VkSparseImageFormatFlags :int)

(cffi:defctype VkSparseMemoryBindFlagBits :int)
(cl:defconstant VK_SPARSE_MEMORY_BIND_METADATA_BIT #x1)

(cffi:defctype VkSparseMemoryBindFlags :int)

(cffi:defctype VkStencilFaceFlagBits :int)
(cl:defconstant VK_STENCIL_FACE_FRONT_BIT #x1)
(cl:defconstant VK_STENCIL_FACE_BACK_BIT #x2)
(cl:defconstant VK_STENCIL_FRONT_AND_BACK #x3)

(cffi:defctype VkStencilFaceFlags :int)

(cffi:defctype VkSubpassDescriptionFlagBits :int)
(cl:defconstant VK_SUBPASS_DESCRIPTION_PER_VIEW_ATTRIBUTES_BIT_NVX #x1)
(cl:defconstant VK_SUBPASS_DESCRIPTION_PER_VIEW_POSITION_X_ONLY_BIT_NVX #x2)

(cffi:defctype VkSubpassDescriptionFlags :int)

(cffi:defctype VkSurfaceCounterFlagBitsEXT :int)
(cl:defconstant VK_SURFACE_COUNTER_VBLANK_EXT #x1)

(cffi:defctype VkSurfaceCounterFlagsEXT :int)

(cffi:defctype VkSurfaceTransformFlagBitsKHR :int)
(cl:defconstant VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR #x1)
(cl:defconstant VK_SURFACE_TRANSFORM_ROTATE_90_BIT_KHR #x2)
(cl:defconstant VK_SURFACE_TRANSFORM_ROTATE_180_BIT_KHR #x4)
(cl:defconstant VK_SURFACE_TRANSFORM_ROTATE_270_BIT_KHR #x8)
(cl:defconstant VK_SURFACE_TRANSFORM_HORIZONTAL_MIRROR_BIT_KHR #x10)
(cl:defconstant VK_SURFACE_TRANSFORM_HORIZONTAL_MIRROR_ROTATE_90_BIT_KHR #x20)
(cl:defconstant VK_SURFACE_TRANSFORM_HORIZONTAL_MIRROR_ROTATE_180_BIT_KHR #x40)
(cl:defconstant VK_SURFACE_TRANSFORM_HORIZONTAL_MIRROR_ROTATE_270_BIT_KHR #x80)
(cl:defconstant VK_SURFACE_TRANSFORM_INHERIT_BIT_KHR #x100)

(cffi:defctype VkSurfaceTransformFlagsKHR :int)

(cffi:defctype VkSwapchainCreateFlagBitsKHR :int)
(cl:defconstant VK_SWAPCHAIN_CREATE_BIND_SFR_BIT_KHX #x1)

(cffi:defctype VkSwapchainCreateFlagsKHR :int)

(cffi:defctype VkViSurfaceCreateFlagsNN :int)

(cffi:defctype VkWaylandSurfaceCreateFlagsKHR :int)

(cffi:defctype VkWin32SurfaceCreateFlagsKHR :int)

(cffi:defctype VkXcbSurfaceCreateFlagsKHR :int)

(cffi:defctype VkXlibSurfaceCreateFlagsKHR :int)



(cffi:defctype VkAccessFlagBits :int)

(cl:defconstant VK_ACCESS_INDIRECT_COMMAND_READ_BIT #x1) ;; Controls coherency of indirect command reads
(cl:defconstant VK_ACCESS_INDEX_READ_BIT #x2) ;; Controls coherency of index reads
(cl:defconstant VK_ACCESS_VERTEX_ATTRIBUTE_READ_BIT #x4) ;; Controls coherency of vertex attribute reads
(cl:defconstant VK_ACCESS_UNIFORM_READ_BIT #x8) ;; Controls coherency of uniform buffer reads
(cl:defconstant VK_ACCESS_INPUT_ATTACHMENT_READ_BIT #x10) ;; Controls coherency of input attachment reads
(cl:defconstant VK_ACCESS_SHADER_READ_BIT #x20) ;; Controls coherency of shader reads
(cl:defconstant VK_ACCESS_SHADER_WRITE_BIT #x40) ;; Controls coherency of shader writes
(cl:defconstant VK_ACCESS_COLOR_ATTACHMENT_READ_BIT #x80) ;; Controls coherency of color attachment reads
(cl:defconstant VK_ACCESS_COLOR_ATTACHMENT_WRITE_BIT #x100) ;; Controls coherency of color attachment writes
(cl:defconstant VK_ACCESS_DEPTH_STENCIL_ATTACHMENT_READ_BIT #x200) ;; Controls coherency of depth/stencil attachment reads
(cl:defconstant VK_ACCESS_DEPTH_STENCIL_ATTACHMENT_WRITE_BIT #x400) ;; Controls coherency of depth/stencil attachment writes
(cl:defconstant VK_ACCESS_TRANSFER_READ_BIT #x800) ;; Controls coherency of transfer reads
(cl:defconstant VK_ACCESS_TRANSFER_WRITE_BIT #x1000) ;; Controls coherency of transfer writes
(cl:defconstant VK_ACCESS_HOST_READ_BIT #x2000) ;; Controls coherency of host reads
(cl:defconstant VK_ACCESS_HOST_WRITE_BIT #x4000) ;; Controls coherency of host writes
(cl:defconstant VK_ACCESS_MEMORY_READ_BIT #x8000) ;; Controls coherency of memory reads
(cl:defconstant VK_ACCESS_MEMORY_WRITE_BIT #x10000) ;; Controls coherency of memory writes
(cl:defconstant VK_ACCESS_COMMAND_PROCESS_READ_BIT_NVX #x20000) ;; "VK_NVX_device_generated_commands"
(cl:defconstant VK_ACCESS_COMMAND_PROCESS_WRITE_BIT_NVX #x40000) ;; "VK_NVX_device_generated_commands"

(cffi:defctype VkAttachmentDescriptionFlagBits :int)

(cl:defconstant VK_ATTACHMENT_DESCRIPTION_MAY_ALIAS_BIT #x1) ;; The attachment may alias physical memory of another attachment in the same render pass

(cffi:defctype VkAttachmentLoadOp :int)

(cl:defconstant VK_ATTACHMENT_LOAD_OP_LOAD #x0)
(cl:defconstant VK_ATTACHMENT_LOAD_OP_CLEAR #x1)
(cl:defconstant VK_ATTACHMENT_LOAD_OP_DONT_CARE #x2)

(cffi:defctype VkAttachmentStoreOp :int)

(cl:defconstant VK_ATTACHMENT_STORE_OP_STORE #x0)
(cl:defconstant VK_ATTACHMENT_STORE_OP_DONT_CARE #x1)

(cffi:defctype VkBlendFactor :int)

(cl:defconstant VK_BLEND_FACTOR_ZERO #x0)
(cl:defconstant VK_BLEND_FACTOR_ONE #x1)
(cl:defconstant VK_BLEND_FACTOR_SRC_COLOR #x2)
(cl:defconstant VK_BLEND_FACTOR_ONE_MINUS_SRC_COLOR #x3)
(cl:defconstant VK_BLEND_FACTOR_DST_COLOR #x4)
(cl:defconstant VK_BLEND_FACTOR_ONE_MINUS_DST_COLOR #x5)
(cl:defconstant VK_BLEND_FACTOR_SRC_ALPHA #x6)
(cl:defconstant VK_BLEND_FACTOR_ONE_MINUS_SRC_ALPHA #x7)
(cl:defconstant VK_BLEND_FACTOR_DST_ALPHA #x8)
(cl:defconstant VK_BLEND_FACTOR_ONE_MINUS_DST_ALPHA #x9)
(cl:defconstant VK_BLEND_FACTOR_CONSTANT_COLOR #xA)
(cl:defconstant VK_BLEND_FACTOR_ONE_MINUS_CONSTANT_COLOR #xB)
(cl:defconstant VK_BLEND_FACTOR_CONSTANT_ALPHA #xC)
(cl:defconstant VK_BLEND_FACTOR_ONE_MINUS_CONSTANT_ALPHA #xD)
(cl:defconstant VK_BLEND_FACTOR_SRC_ALPHA_SATURATE #xE)
(cl:defconstant VK_BLEND_FACTOR_SRC1_COLOR #xF)
(cl:defconstant VK_BLEND_FACTOR_ONE_MINUS_SRC1_COLOR #x10)
(cl:defconstant VK_BLEND_FACTOR_SRC1_ALPHA #x11)
(cl:defconstant VK_BLEND_FACTOR_ONE_MINUS_SRC1_ALPHA #x12)

(cffi:defctype VkBlendOp :int)

(cl:defconstant VK_BLEND_OP_ADD #x0)
(cl:defconstant VK_BLEND_OP_SUBTRACT #x1)
(cl:defconstant VK_BLEND_OP_REVERSE_SUBTRACT #x2)
(cl:defconstant VK_BLEND_OP_MIN #x3)
(cl:defconstant VK_BLEND_OP_MAX #x4)

(cffi:defctype VkBorderColor :int)

(cl:defconstant VK_BORDER_COLOR_FLOAT_TRANSPARENT_BLACK #x0)
(cl:defconstant VK_BORDER_COLOR_INT_TRANSPARENT_BLACK #x1)
(cl:defconstant VK_BORDER_COLOR_FLOAT_OPAQUE_BLACK #x2)
(cl:defconstant VK_BORDER_COLOR_INT_OPAQUE_BLACK #x3)
(cl:defconstant VK_BORDER_COLOR_FLOAT_OPAQUE_WHITE #x4)
(cl:defconstant VK_BORDER_COLOR_INT_OPAQUE_WHITE #x5)

(cffi:defctype VkBufferCreateFlagBits :int)

(cl:defconstant VK_BUFFER_CREATE_SPARSE_BINDING_BIT #x1) ;; Buffer should support sparse backing
(cl:defconstant VK_BUFFER_CREATE_SPARSE_RESIDENCY_BIT #x2) ;; Buffer should support sparse backing with partial residency
(cl:defconstant VK_BUFFER_CREATE_SPARSE_ALIASED_BIT #x4) ;; Buffer should support constent data access to physical memory ranges mapped into multiple locations of sparse buffers

(cffi:defctype VkBufferUsageFlagBits :int)

(cl:defconstant VK_BUFFER_USAGE_TRANSFER_SRC_BIT #x1) ;; Can be used as a source of transfer operations
(cl:defconstant VK_BUFFER_USAGE_TRANSFER_DST_BIT #x2) ;; Can be used as a destination of transfer operations
(cl:defconstant VK_BUFFER_USAGE_UNIFORM_TEXEL_BUFFER_BIT #x4) ;; Can be used as TBO
(cl:defconstant VK_BUFFER_USAGE_STORAGE_TEXEL_BUFFER_BIT #x8) ;; Can be used as IBO
(cl:defconstant VK_BUFFER_USAGE_UNIFORM_BUFFER_BIT #x10) ;; Can be used as UBO
(cl:defconstant VK_BUFFER_USAGE_STORAGE_BUFFER_BIT #x20) ;; Can be used as SSBO
(cl:defconstant VK_BUFFER_USAGE_INDEX_BUFFER_BIT #x40) ;; Can be used as source of fixed-function index fetch (index buffer)
(cl:defconstant VK_BUFFER_USAGE_VERTEX_BUFFER_BIT #x80) ;; Can be used as source of fixed-function vertex fetch (VBO)
(cl:defconstant VK_BUFFER_USAGE_INDIRECT_BUFFER_BIT #x100) ;; Can be the source of indirect parameters (e.g. indirect buffer, parameter buffer)

(cffi:defctype VkColorComponentFlagBits :int)

(cl:defconstant VK_COLOR_COMPONENT_R_BIT #x1)
(cl:defconstant VK_COLOR_COMPONENT_G_BIT #x2)
(cl:defconstant VK_COLOR_COMPONENT_B_BIT #x4)
(cl:defconstant VK_COLOR_COMPONENT_A_BIT #x8)

(cffi:defctype VkColorSpaceKHR :int)

(cl:defconstant VK_COLOR_SPACE_SRGB_NONLINEAR_KHR #x0)
(cl:defconstant VK_COLOR_SPACE_DISPLAY_P3_NONLINEAR_EXT #x3B9C6041) ;; "VK_EXT_swapchain_colorspace"
(cl:defconstant VK_COLOR_SPACE_EXTENDED_SRGB_LINEAR_EXT #x3B9C6042) ;; "VK_EXT_swapchain_colorspace"
(cl:defconstant VK_COLOR_SPACE_DCI_P3_LINEAR_EXT #x3B9C6043) ;; "VK_EXT_swapchain_colorspace"
(cl:defconstant VK_COLOR_SPACE_DCI_P3_NONLINEAR_EXT #x3B9C6044) ;; "VK_EXT_swapchain_colorspace"
(cl:defconstant VK_COLOR_SPACE_BT709_LINEAR_EXT #x3B9C6045) ;; "VK_EXT_swapchain_colorspace"
(cl:defconstant VK_COLOR_SPACE_BT709_NONLINEAR_EXT #x3B9C6046) ;; "VK_EXT_swapchain_colorspace"
(cl:defconstant VK_COLOR_SPACE_BT2020_LINEAR_EXT #x3B9C6047) ;; "VK_EXT_swapchain_colorspace"
(cl:defconstant VK_COLOR_SPACE_HDR10_ST2084_EXT #x3B9C6048) ;; "VK_EXT_swapchain_colorspace"
(cl:defconstant VK_COLOR_SPACE_DOLBYVISION_EXT #x3B9C6049) ;; "VK_EXT_swapchain_colorspace"
(cl:defconstant VK_COLOR_SPACE_HDR10_HLG_EXT #x3B9C604A) ;; "VK_EXT_swapchain_colorspace"
(cl:defconstant VK_COLOR_SPACE_ADOBERGB_LINEAR_EXT #x3B9C604B) ;; "VK_EXT_swapchain_colorspace"
(cl:defconstant VK_COLOR_SPACE_ADOBERGB_NONLINEAR_EXT #x3B9C604C) ;; "VK_EXT_swapchain_colorspace"
(cl:defconstant VK_COLOR_SPACE_PASS_THROUGH_EXT #x3B9C604D) ;; "VK_EXT_swapchain_colorspace"

(cffi:defctype VkCommandBufferLevel :int)

(cl:defconstant VK_COMMAND_BUFFER_LEVEL_PRIMARY #x0)
(cl:defconstant VK_COMMAND_BUFFER_LEVEL_SECONDARY #x1)

(cffi:defctype VkCommandBufferResetFlagBits :int)

(cl:defconstant VK_COMMAND_BUFFER_RESET_RELEASE_RESOURCES_BIT #x1) ;; Release resources owned by the buffer

(cffi:defctype VkCommandBufferUsageFlagBits :int)

(cl:defconstant VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT #x1)
(cl:defconstant VK_COMMAND_BUFFER_USAGE_RENDER_PASS_CONTINUE_BIT #x2)
(cl:defconstant VK_COMMAND_BUFFER_USAGE_SIMULTANEOUS_USE_BIT #x4) ;; Command buffer may be submitted/executed more than once simultaneously

(cffi:defctype VkCommandPoolCreateFlagBits :int)

(cl:defconstant VK_COMMAND_POOL_CREATE_TRANSIENT_BIT #x1) ;; Command buffers have a short lifetime
(cl:defconstant VK_COMMAND_POOL_CREATE_RESET_COMMAND_BUFFER_BIT #x2) ;; Command buffers may release their memory individually

(cffi:defctype VkCommandPoolResetFlagBits :int)

(cl:defconstant VK_COMMAND_POOL_RESET_RELEASE_RESOURCES_BIT #x1) ;; Release resources owned by the pool

(cffi:defctype VkCompareOp :int)

(cl:defconstant VK_COMPARE_OP_NEVER #x0)
(cl:defconstant VK_COMPARE_OP_LESS #x1)
(cl:defconstant VK_COMPARE_OP_EQUAL #x2)
(cl:defconstant VK_COMPARE_OP_LESS_OR_EQUAL #x3)
(cl:defconstant VK_COMPARE_OP_GREATER #x4)
(cl:defconstant VK_COMPARE_OP_NOT_EQUAL #x5)
(cl:defconstant VK_COMPARE_OP_GREATER_OR_EQUAL #x6)
(cl:defconstant VK_COMPARE_OP_ALWAYS #x7)

(cffi:defctype VkComponentSwizzle :int)

(cl:defconstant VK_COMPONENT_SWIZZLE_IDENTITY #x0)
(cl:defconstant VK_COMPONENT_SWIZZLE_ZERO #x1)
(cl:defconstant VK_COMPONENT_SWIZZLE_ONE #x2)
(cl:defconstant VK_COMPONENT_SWIZZLE_R #x3)
(cl:defconstant VK_COMPONENT_SWIZZLE_G #x4)
(cl:defconstant VK_COMPONENT_SWIZZLE_B #x5)
(cl:defconstant VK_COMPONENT_SWIZZLE_A #x6)

(cffi:defctype VkCompositeAlphaFlagBitsKHR :int)

(cl:defconstant VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR #x1)
(cl:defconstant VK_COMPOSITE_ALPHA_PRE_MULTIPLIED_BIT_KHR #x2)
(cl:defconstant VK_COMPOSITE_ALPHA_POST_MULTIPLIED_BIT_KHR #x4)
(cl:defconstant VK_COMPOSITE_ALPHA_INHERIT_BIT_KHR #x8)

(cffi:defctype VkCullModeFlagBits :int)

(cl:defconstant VK_CULL_MODE_NONE #x0)
(cl:defconstant VK_CULL_MODE_FRONT_BIT #x1)
(cl:defconstant VK_CULL_MODE_BACK_BIT #x2)
(cl:defconstant VK_CULL_MODE_FRONT_AND_BACK #x3)

(cffi:defctype VkDebugReportFlagBitsEXT :int)

(cl:defconstant VK_DEBUG_REPORT_INFORMATION_BIT_EXT #x1)
(cl:defconstant VK_DEBUG_REPORT_WARNING_BIT_EXT #x2)
(cl:defconstant VK_DEBUG_REPORT_PERFORMANCE_WARNING_BIT_EXT #x4)
(cl:defconstant VK_DEBUG_REPORT_ERROR_BIT_EXT #x8)
(cl:defconstant VK_DEBUG_REPORT_DEBUG_BIT_EXT #x10)

(cffi:defctype VkDebugReportObjectTypeEXT :int)

(cl:defconstant VK_DEBUG_REPORT_OBJECT_TYPE_UNKNOWN_EXT #x0)
(cl:defconstant VK_DEBUG_REPORT_OBJECT_TYPE_INSTANCE_EXT #x1)
(cl:defconstant VK_DEBUG_REPORT_OBJECT_TYPE_PHYSICAL_DEVICE_EXT #x2)
(cl:defconstant VK_DEBUG_REPORT_OBJECT_TYPE_DEVICE_EXT #x3)
(cl:defconstant VK_DEBUG_REPORT_OBJECT_TYPE_QUEUE_EXT #x4)
(cl:defconstant VK_DEBUG_REPORT_OBJECT_TYPE_SEMAPHORE_EXT #x5)
(cl:defconstant VK_DEBUG_REPORT_OBJECT_TYPE_COMMAND_BUFFER_EXT #x6)
(cl:defconstant VK_DEBUG_REPORT_OBJECT_TYPE_FENCE_EXT #x7)
(cl:defconstant VK_DEBUG_REPORT_OBJECT_TYPE_DEVICE_MEMORY_EXT #x8)
(cl:defconstant VK_DEBUG_REPORT_OBJECT_TYPE_BUFFER_EXT #x9)
(cl:defconstant VK_DEBUG_REPORT_OBJECT_TYPE_IMAGE_EXT #xA)
(cl:defconstant VK_DEBUG_REPORT_OBJECT_TYPE_EVENT_EXT #xB)
(cl:defconstant VK_DEBUG_REPORT_OBJECT_TYPE_QUERY_POOL_EXT #xC)
(cl:defconstant VK_DEBUG_REPORT_OBJECT_TYPE_BUFFER_VIEW_EXT #xD)
(cl:defconstant VK_DEBUG_REPORT_OBJECT_TYPE_IMAGE_VIEW_EXT #xE)
(cl:defconstant VK_DEBUG_REPORT_OBJECT_TYPE_SHADER_MODULE_EXT #xF)
(cl:defconstant VK_DEBUG_REPORT_OBJECT_TYPE_PIPELINE_CACHE_EXT #x10)
(cl:defconstant VK_DEBUG_REPORT_OBJECT_TYPE_PIPELINE_LAYOUT_EXT #x11)
(cl:defconstant VK_DEBUG_REPORT_OBJECT_TYPE_RENDER_PASS_EXT #x12)
(cl:defconstant VK_DEBUG_REPORT_OBJECT_TYPE_PIPELINE_EXT #x13)
(cl:defconstant VK_DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_SET_LAYOUT_EXT #x14)
(cl:defconstant VK_DEBUG_REPORT_OBJECT_TYPE_SAMPLER_EXT #x15)
(cl:defconstant VK_DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_POOL_EXT #x16)
(cl:defconstant VK_DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_SET_EXT #x17)
(cl:defconstant VK_DEBUG_REPORT_OBJECT_TYPE_FRAMEBUFFER_EXT #x18)
(cl:defconstant VK_DEBUG_REPORT_OBJECT_TYPE_COMMAND_POOL_EXT #x19)
(cl:defconstant VK_DEBUG_REPORT_OBJECT_TYPE_SURFACE_KHR_EXT #x1A)
(cl:defconstant VK_DEBUG_REPORT_OBJECT_TYPE_SWAPCHAIN_KHR_EXT #x1B)
(cl:defconstant VK_DEBUG_REPORT_OBJECT_TYPE_DEBUG_REPORT_CALLBACK_EXT_EXT #x1C)
(cl:defconstant VK_DEBUG_REPORT_OBJECT_TYPE_DISPLAY_KHR_EXT #x1D)
(cl:defconstant VK_DEBUG_REPORT_OBJECT_TYPE_DISPLAY_MODE_KHR_EXT #x1E)
(cl:defconstant VK_DEBUG_REPORT_OBJECT_TYPE_OBJECT_TABLE_NVX_EXT #x1F)
(cl:defconstant VK_DEBUG_REPORT_OBJECT_TYPE_INDIRECT_COMMANDS_LAYOUT_NVX_EXT #x20)
(cl:defconstant VK_DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_KHR_EXT #x3B9C1608) ;; "VK_KHR_descriptor_update_template"

(cffi:defctype VkDependencyFlagBits :int)

(cl:defconstant VK_DEPENDENCY_BY_REGION_BIT #x1) ;; Dependency is per pixel region
(cl:defconstant VK_DEPENDENCY_VIEW_LOCAL_BIT_KHX #x2) ;; "VK_KHX_multiview"
(cl:defconstant VK_DEPENDENCY_DEVICE_GROUP_BIT_KHX #x4) ;; "VK_KHX_device_group"

(cffi:defctype VkDescriptorPoolCreateFlagBits :int)

(cl:defconstant VK_DESCRIPTOR_POOL_CREATE_FREE_DESCRIPTOR_SET_BIT #x1) ;; Descriptor sets may be freed individually

(cffi:defctype VkDescriptorSetLayoutCreateFlagBits :int)

(cl:defconstant VK_DESCRIPTOR_SET_LAYOUT_CREATE_PUSH_DESCRIPTOR_BIT_KHR #x1) ;; "VK_KHR_push_descriptor"

(cffi:defctype VkDescriptorType :int)

(cl:defconstant VK_DESCRIPTOR_TYPE_SAMPLER #x0)
(cl:defconstant VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER #x1)
(cl:defconstant VK_DESCRIPTOR_TYPE_SAMPLED_IMAGE #x2)
(cl:defconstant VK_DESCRIPTOR_TYPE_STORAGE_IMAGE #x3)
(cl:defconstant VK_DESCRIPTOR_TYPE_UNIFORM_TEXEL_BUFFER #x4)
(cl:defconstant VK_DESCRIPTOR_TYPE_STORAGE_TEXEL_BUFFER #x5)
(cl:defconstant VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER #x6)
(cl:defconstant VK_DESCRIPTOR_TYPE_STORAGE_BUFFER #x7)
(cl:defconstant VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER_DYNAMIC #x8)
(cl:defconstant VK_DESCRIPTOR_TYPE_STORAGE_BUFFER_DYNAMIC #x9)
(cl:defconstant VK_DESCRIPTOR_TYPE_INPUT_ATTACHMENT #xA)

(cffi:defctype VkDescriptorUpdateTemplateTypeKHR :int)

(cl:defconstant VK_DESCRIPTOR_UPDATE_TEMPLATE_TYPE_DESCRIPTOR_SET_KHR #x0) ;; Create descriptor update template for descriptor set updates
(cl:defconstant VK_DESCRIPTOR_UPDATE_TEMPLATE_TYPE_PUSH_DESCRIPTORS_KHR #x1) ;; Create descriptor update template for pushed descriptor updates

(cffi:defctype VkDeviceEventTypeEXT :int)

(cl:defconstant VK_DEVICE_EVENT_TYPE_DISPLAY_HOTPLUG_EXT #x0)

(cffi:defctype VkDeviceGroupPresentModeFlagBitsKHX :int)

(cl:defconstant VK_DEVICE_GROUP_PRESENT_MODE_LOCAL_BIT_KHX #x1) ;; Present from local memory
(cl:defconstant VK_DEVICE_GROUP_PRESENT_MODE_REMOTE_BIT_KHX #x2) ;; Present from remote memory
(cl:defconstant VK_DEVICE_GROUP_PRESENT_MODE_SUM_BIT_KHX #x4) ;; Present sum of local and/or remote memory
(cl:defconstant VK_DEVICE_GROUP_PRESENT_MODE_LOCAL_MULTI_DEVICE_BIT_KHX #x8) ;; Each physical device presents from local memory

(cffi:defctype VkDiscardRectangleModeEXT :int)

(cl:defconstant VK_DISCARD_RECTANGLE_MODE_INCLUSIVE_EXT #x0)
(cl:defconstant VK_DISCARD_RECTANGLE_MODE_EXCLUSIVE_EXT #x1)

(cffi:defctype VkDisplayEventTypeEXT :int)

(cl:defconstant VK_DISPLAY_EVENT_TYPE_FIRST_PIXEL_OUT_EXT #x0)

(cffi:defctype VkDisplayPlaneAlphaFlagBitsKHR :int)

(cl:defconstant VK_DISPLAY_PLANE_ALPHA_OPAQUE_BIT_KHR #x1)
(cl:defconstant VK_DISPLAY_PLANE_ALPHA_GLOBAL_BIT_KHR #x2)
(cl:defconstant VK_DISPLAY_PLANE_ALPHA_PER_PIXEL_BIT_KHR #x4)
(cl:defconstant VK_DISPLAY_PLANE_ALPHA_PER_PIXEL_PREMULTIPLIED_BIT_KHR #x8)

(cffi:defctype VkDisplayPowerStateEXT :int)

(cl:defconstant VK_DISPLAY_POWER_STATE_OFF_EXT #x0)
(cl:defconstant VK_DISPLAY_POWER_STATE_SUSPEND_EXT #x1)
(cl:defconstant VK_DISPLAY_POWER_STATE_ON_EXT #x2)

(cffi:defctype VkDynamicState :int)

(cl:defconstant VK_DYNAMIC_STATE_VIEWPORT #x0)
(cl:defconstant VK_DYNAMIC_STATE_SCISSOR #x1)
(cl:defconstant VK_DYNAMIC_STATE_LINE_WIDTH #x2)
(cl:defconstant VK_DYNAMIC_STATE_DEPTH_BIAS #x3)
(cl:defconstant VK_DYNAMIC_STATE_BLEND_CONSTANTS #x4)
(cl:defconstant VK_DYNAMIC_STATE_DEPTH_BOUNDS #x5)
(cl:defconstant VK_DYNAMIC_STATE_STENCIL_COMPARE_MASK #x6)
(cl:defconstant VK_DYNAMIC_STATE_STENCIL_WRITE_MASK #x7)
(cl:defconstant VK_DYNAMIC_STATE_STENCIL_REFERENCE #x8)
(cl:defconstant VK_DYNAMIC_STATE_VIEWPORT_W_SCALING_NV #x3B9C1DD8) ;; "VK_NV_clip_space_w_scaling"
(cl:defconstant VK_DYNAMIC_STATE_DISCARD_RECTANGLE_EXT #x3B9C4CB8) ;; "VK_EXT_discard_rectangles"
(cl:defconstant VK_DYNAMIC_STATE_LINE_STIPPLE_EXT 1000259000)

(cffi:defctype VkExternalMemoryFeatureFlagBitsKHX :int)

(cl:defconstant VK_EXTERNAL_MEMORY_FEATURE_DEDICATED_ONLY_BIT_KHX #x1)
(cl:defconstant VK_EXTERNAL_MEMORY_FEATURE_EXPORTABLE_BIT_KHX #x2)
(cl:defconstant VK_EXTERNAL_MEMORY_FEATURE_IMPORTABLE_BIT_KHX #x4)

(cffi:defctype VkExternalMemoryFeatureFlagBitsNV :int)

(cl:defconstant VK_EXTERNAL_MEMORY_FEATURE_DEDICATED_ONLY_BIT_NV #x1)
(cl:defconstant VK_EXTERNAL_MEMORY_FEATURE_EXPORTABLE_BIT_NV #x2)
(cl:defconstant VK_EXTERNAL_MEMORY_FEATURE_IMPORTABLE_BIT_NV #x4)

(cffi:defctype VkExternalMemoryHandleTypeFlagBitsKHX :int)

(cl:defconstant VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_FD_BIT_KHX #x1)
(cl:defconstant VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_BIT_KHX #x2)
(cl:defconstant VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT_KHX #x4)
(cl:defconstant VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_TEXTURE_BIT_KHX #x8)
(cl:defconstant VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_TEXTURE_KMT_BIT_KHX #x10)
(cl:defconstant VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D12_HEAP_BIT_KHX #x20)
(cl:defconstant VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D12_RESOURCE_BIT_KHX #x40)

(cffi:defctype VkExternalMemoryHandleTypeFlagBitsNV :int)

(cl:defconstant VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_BIT_NV #x1)
(cl:defconstant VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT_NV #x2)
(cl:defconstant VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_IMAGE_BIT_NV #x4)
(cl:defconstant VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_IMAGE_KMT_BIT_NV #x8)

(cffi:defctype VkExternalSemaphoreFeatureFlagBitsKHX :int)

(cl:defconstant VK_EXTERNAL_SEMAPHORE_FEATURE_EXPORTABLE_BIT_KHX #x1)
(cl:defconstant VK_EXTERNAL_SEMAPHORE_FEATURE_IMPORTABLE_BIT_KHX #x2)

(cffi:defctype VkExternalSemaphoreHandleTypeFlagBitsKHX :int)

(cl:defconstant VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_FD_BIT_KHX #x1)
(cl:defconstant VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_WIN32_BIT_KHX #x2)
(cl:defconstant VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT_KHX #x4)
(cl:defconstant VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_D3D12_FENCE_BIT_KHX #x8)
(cl:defconstant VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_FENCE_FD_BIT_KHX #x10)

(cffi:defctype VkFenceCreateFlagBits :int)

(cl:defconstant VK_FENCE_CREATE_SIGNALED_BIT #x1)

(cffi:defctype VkFilter :int)

(cl:defconstant VK_FILTER_NEAREST #x0)
(cl:defconstant VK_FILTER_LINEAR #x1)
(cl:defconstant VK_FILTER_CUBIC_IMG #x3B9B0498) ;; "VK_IMG_filter_cubic"

(cffi:defctype VkFormat :int)

(cl:defconstant VK_FORMAT_UNDEFINED #x0)
(cl:defconstant VK_FORMAT_R4G4_UNORM_PACK8 #x1)
(cl:defconstant VK_FORMAT_R4G4B4A4_UNORM_PACK16 #x2)
(cl:defconstant VK_FORMAT_B4G4R4A4_UNORM_PACK16 #x3)
(cl:defconstant VK_FORMAT_R5G6B5_UNORM_PACK16 #x4)
(cl:defconstant VK_FORMAT_B5G6R5_UNORM_PACK16 #x5)
(cl:defconstant VK_FORMAT_R5G5B5A1_UNORM_PACK16 #x6)
(cl:defconstant VK_FORMAT_B5G5R5A1_UNORM_PACK16 #x7)
(cl:defconstant VK_FORMAT_A1R5G5B5_UNORM_PACK16 #x8)
(cl:defconstant VK_FORMAT_R8_UNORM #x9)
(cl:defconstant VK_FORMAT_R8_SNORM #xA)
(cl:defconstant VK_FORMAT_R8_USCALED #xB)
(cl:defconstant VK_FORMAT_R8_SSCALED #xC)
(cl:defconstant VK_FORMAT_R8_UINT #xD)
(cl:defconstant VK_FORMAT_R8_SINT #xE)
(cl:defconstant VK_FORMAT_R8_SRGB #xF)
(cl:defconstant VK_FORMAT_R8G8_UNORM #x10)
(cl:defconstant VK_FORMAT_R8G8_SNORM #x11)
(cl:defconstant VK_FORMAT_R8G8_USCALED #x12)
(cl:defconstant VK_FORMAT_R8G8_SSCALED #x13)
(cl:defconstant VK_FORMAT_R8G8_UINT #x14)
(cl:defconstant VK_FORMAT_R8G8_SINT #x15)
(cl:defconstant VK_FORMAT_R8G8_SRGB #x16)
(cl:defconstant VK_FORMAT_R8G8B8_UNORM #x17)
(cl:defconstant VK_FORMAT_R8G8B8_SNORM #x18)
(cl:defconstant VK_FORMAT_R8G8B8_USCALED #x19)
(cl:defconstant VK_FORMAT_R8G8B8_SSCALED #x1A)
(cl:defconstant VK_FORMAT_R8G8B8_UINT #x1B)
(cl:defconstant VK_FORMAT_R8G8B8_SINT #x1C)
(cl:defconstant VK_FORMAT_R8G8B8_SRGB #x1D)
(cl:defconstant VK_FORMAT_B8G8R8_UNORM #x1E)
(cl:defconstant VK_FORMAT_B8G8R8_SNORM #x1F)
(cl:defconstant VK_FORMAT_B8G8R8_USCALED #x20)
(cl:defconstant VK_FORMAT_B8G8R8_SSCALED #x21)
(cl:defconstant VK_FORMAT_B8G8R8_UINT #x22)
(cl:defconstant VK_FORMAT_B8G8R8_SINT #x23)
(cl:defconstant VK_FORMAT_B8G8R8_SRGB #x24)
(cl:defconstant VK_FORMAT_R8G8B8A8_UNORM #x25)
(cl:defconstant VK_FORMAT_R8G8B8A8_SNORM #x26)
(cl:defconstant VK_FORMAT_R8G8B8A8_USCALED #x27)
(cl:defconstant VK_FORMAT_R8G8B8A8_SSCALED #x28)
(cl:defconstant VK_FORMAT_R8G8B8A8_UINT #x29)
(cl:defconstant VK_FORMAT_R8G8B8A8_SINT #x2A)
(cl:defconstant VK_FORMAT_R8G8B8A8_SRGB #x2B)
(cl:defconstant VK_FORMAT_B8G8R8A8_UNORM #x2C)
(cl:defconstant VK_FORMAT_B8G8R8A8_SNORM #x2D)
(cl:defconstant VK_FORMAT_B8G8R8A8_USCALED #x2E)
(cl:defconstant VK_FORMAT_B8G8R8A8_SSCALED #x2F)
(cl:defconstant VK_FORMAT_B8G8R8A8_UINT #x30)
(cl:defconstant VK_FORMAT_B8G8R8A8_SINT #x31)
(cl:defconstant VK_FORMAT_B8G8R8A8_SRGB #x32)
(cl:defconstant VK_FORMAT_A8B8G8R8_UNORM_PACK32 #x33)
(cl:defconstant VK_FORMAT_A8B8G8R8_SNORM_PACK32 #x34)
(cl:defconstant VK_FORMAT_A8B8G8R8_USCALED_PACK32 #x35)
(cl:defconstant VK_FORMAT_A8B8G8R8_SSCALED_PACK32 #x36)
(cl:defconstant VK_FORMAT_A8B8G8R8_UINT_PACK32 #x37)
(cl:defconstant VK_FORMAT_A8B8G8R8_SINT_PACK32 #x38)
(cl:defconstant VK_FORMAT_A8B8G8R8_SRGB_PACK32 #x39)
(cl:defconstant VK_FORMAT_A2R10G10B10_UNORM_PACK32 #x3A)
(cl:defconstant VK_FORMAT_A2R10G10B10_SNORM_PACK32 #x3B)
(cl:defconstant VK_FORMAT_A2R10G10B10_USCALED_PACK32 #x3C)
(cl:defconstant VK_FORMAT_A2R10G10B10_SSCALED_PACK32 #x3D)
(cl:defconstant VK_FORMAT_A2R10G10B10_UINT_PACK32 #x3E)
(cl:defconstant VK_FORMAT_A2R10G10B10_SINT_PACK32 #x3F)
(cl:defconstant VK_FORMAT_A2B10G10R10_UNORM_PACK32 #x40)
(cl:defconstant VK_FORMAT_A2B10G10R10_SNORM_PACK32 #x41)
(cl:defconstant VK_FORMAT_A2B10G10R10_USCALED_PACK32 #x42)
(cl:defconstant VK_FORMAT_A2B10G10R10_SSCALED_PACK32 #x43)
(cl:defconstant VK_FORMAT_A2B10G10R10_UINT_PACK32 #x44)
(cl:defconstant VK_FORMAT_A2B10G10R10_SINT_PACK32 #x45)
(cl:defconstant VK_FORMAT_R16_UNORM #x46)
(cl:defconstant VK_FORMAT_R16_SNORM #x47)
(cl:defconstant VK_FORMAT_R16_USCALED #x48)
(cl:defconstant VK_FORMAT_R16_SSCALED #x49)
(cl:defconstant VK_FORMAT_R16_UINT #x4A)
(cl:defconstant VK_FORMAT_R16_SINT #x4B)
(cl:defconstant VK_FORMAT_R16_SFLOAT #x4C)
(cl:defconstant VK_FORMAT_R16G16_UNORM #x4D)
(cl:defconstant VK_FORMAT_R16G16_SNORM #x4E)
(cl:defconstant VK_FORMAT_R16G16_USCALED #x4F)
(cl:defconstant VK_FORMAT_R16G16_SSCALED #x50)
(cl:defconstant VK_FORMAT_R16G16_UINT #x51)
(cl:defconstant VK_FORMAT_R16G16_SINT #x52)
(cl:defconstant VK_FORMAT_R16G16_SFLOAT #x53)
(cl:defconstant VK_FORMAT_R16G16B16_UNORM #x54)
(cl:defconstant VK_FORMAT_R16G16B16_SNORM #x55)
(cl:defconstant VK_FORMAT_R16G16B16_USCALED #x56)
(cl:defconstant VK_FORMAT_R16G16B16_SSCALED #x57)
(cl:defconstant VK_FORMAT_R16G16B16_UINT #x58)
(cl:defconstant VK_FORMAT_R16G16B16_SINT #x59)
(cl:defconstant VK_FORMAT_R16G16B16_SFLOAT #x5A)
(cl:defconstant VK_FORMAT_R16G16B16A16_UNORM #x5B)
(cl:defconstant VK_FORMAT_R16G16B16A16_SNORM #x5C)
(cl:defconstant VK_FORMAT_R16G16B16A16_USCALED #x5D)
(cl:defconstant VK_FORMAT_R16G16B16A16_SSCALED #x5E)
(cl:defconstant VK_FORMAT_R16G16B16A16_UINT #x5F)
(cl:defconstant VK_FORMAT_R16G16B16A16_SINT #x60)
(cl:defconstant VK_FORMAT_R16G16B16A16_SFLOAT #x61)
(cl:defconstant VK_FORMAT_R32_UINT #x62)
(cl:defconstant VK_FORMAT_R32_SINT #x63)
(cl:defconstant VK_FORMAT_R32_SFLOAT #x64)
(cl:defconstant VK_FORMAT_R32G32_UINT #x65)
(cl:defconstant VK_FORMAT_R32G32_SINT #x66)
(cl:defconstant VK_FORMAT_R32G32_SFLOAT #x67)
(cl:defconstant VK_FORMAT_R32G32B32_UINT #x68)
(cl:defconstant VK_FORMAT_R32G32B32_SINT #x69)
(cl:defconstant VK_FORMAT_R32G32B32_SFLOAT #x6A)
(cl:defconstant VK_FORMAT_R32G32B32A32_UINT #x6B)
(cl:defconstant VK_FORMAT_R32G32B32A32_SINT #x6C)
(cl:defconstant VK_FORMAT_R32G32B32A32_SFLOAT #x6D)
(cl:defconstant VK_FORMAT_R64_UINT #x6E)
(cl:defconstant VK_FORMAT_R64_SINT #x6F)
(cl:defconstant VK_FORMAT_R64_SFLOAT #x70)
(cl:defconstant VK_FORMAT_R64G64_UINT #x71)
(cl:defconstant VK_FORMAT_R64G64_SINT #x72)
(cl:defconstant VK_FORMAT_R64G64_SFLOAT #x73)
(cl:defconstant VK_FORMAT_R64G64B64_UINT #x74)
(cl:defconstant VK_FORMAT_R64G64B64_SINT #x75)
(cl:defconstant VK_FORMAT_R64G64B64_SFLOAT #x76)
(cl:defconstant VK_FORMAT_R64G64B64A64_UINT #x77)
(cl:defconstant VK_FORMAT_R64G64B64A64_SINT #x78)
(cl:defconstant VK_FORMAT_R64G64B64A64_SFLOAT #x79)
(cl:defconstant VK_FORMAT_B10G11R11_UFLOAT_PACK32 #x7A)
(cl:defconstant VK_FORMAT_E5B9G9R9_UFLOAT_PACK32 #x7B)
(cl:defconstant VK_FORMAT_D16_UNORM #x7C)
(cl:defconstant VK_FORMAT_X8_D24_UNORM_PACK32 #x7D)
(cl:defconstant VK_FORMAT_D32_SFLOAT #x7E)
(cl:defconstant VK_FORMAT_S8_UINT #x7F)
(cl:defconstant VK_FORMAT_D16_UNORM_S8_UINT #x80)
(cl:defconstant VK_FORMAT_D24_UNORM_S8_UINT #x81)
(cl:defconstant VK_FORMAT_D32_SFLOAT_S8_UINT #x82)
(cl:defconstant VK_FORMAT_BC1_RGB_UNORM_BLOCK #x83)
(cl:defconstant VK_FORMAT_BC1_RGB_SRGB_BLOCK #x84)
(cl:defconstant VK_FORMAT_BC1_RGBA_UNORM_BLOCK #x85)
(cl:defconstant VK_FORMAT_BC1_RGBA_SRGB_BLOCK #x86)
(cl:defconstant VK_FORMAT_BC2_UNORM_BLOCK #x87)
(cl:defconstant VK_FORMAT_BC2_SRGB_BLOCK #x88)
(cl:defconstant VK_FORMAT_BC3_UNORM_BLOCK #x89)
(cl:defconstant VK_FORMAT_BC3_SRGB_BLOCK #x8A)
(cl:defconstant VK_FORMAT_BC4_UNORM_BLOCK #x8B)
(cl:defconstant VK_FORMAT_BC4_SNORM_BLOCK #x8C)
(cl:defconstant VK_FORMAT_BC5_UNORM_BLOCK #x8D)
(cl:defconstant VK_FORMAT_BC5_SNORM_BLOCK #x8E)
(cl:defconstant VK_FORMAT_BC6H_UFLOAT_BLOCK #x8F)
(cl:defconstant VK_FORMAT_BC6H_SFLOAT_BLOCK #x90)
(cl:defconstant VK_FORMAT_BC7_UNORM_BLOCK #x91)
(cl:defconstant VK_FORMAT_BC7_SRGB_BLOCK #x92)
(cl:defconstant VK_FORMAT_ETC2_R8G8B8_UNORM_BLOCK #x93)
(cl:defconstant VK_FORMAT_ETC2_R8G8B8_SRGB_BLOCK #x94)
(cl:defconstant VK_FORMAT_ETC2_R8G8B8A1_UNORM_BLOCK #x95)
(cl:defconstant VK_FORMAT_ETC2_R8G8B8A1_SRGB_BLOCK #x96)
(cl:defconstant VK_FORMAT_ETC2_R8G8B8A8_UNORM_BLOCK #x97)
(cl:defconstant VK_FORMAT_ETC2_R8G8B8A8_SRGB_BLOCK #x98)
(cl:defconstant VK_FORMAT_EAC_R11_UNORM_BLOCK #x99)
(cl:defconstant VK_FORMAT_EAC_R11_SNORM_BLOCK #x9A)
(cl:defconstant VK_FORMAT_EAC_R11G11_UNORM_BLOCK #x9B)
(cl:defconstant VK_FORMAT_EAC_R11G11_SNORM_BLOCK #x9C)
(cl:defconstant VK_FORMAT_ASTC_4x4_UNORM_BLOCK #x9D)
(cl:defconstant VK_FORMAT_ASTC_4x4_SRGB_BLOCK #x9E)
(cl:defconstant VK_FORMAT_ASTC_5x4_UNORM_BLOCK #x9F)
(cl:defconstant VK_FORMAT_ASTC_5x4_SRGB_BLOCK #xA0)
(cl:defconstant VK_FORMAT_ASTC_5x5_UNORM_BLOCK #xA1)
(cl:defconstant VK_FORMAT_ASTC_5x5_SRGB_BLOCK #xA2)
(cl:defconstant VK_FORMAT_ASTC_6x5_UNORM_BLOCK #xA3)
(cl:defconstant VK_FORMAT_ASTC_6x5_SRGB_BLOCK #xA4)
(cl:defconstant VK_FORMAT_ASTC_6x6_UNORM_BLOCK #xA5)
(cl:defconstant VK_FORMAT_ASTC_6x6_SRGB_BLOCK #xA6)
(cl:defconstant VK_FORMAT_ASTC_8x5_UNORM_BLOCK #xA7)
(cl:defconstant VK_FORMAT_ASTC_8x5_SRGB_BLOCK #xA8)
(cl:defconstant VK_FORMAT_ASTC_8x6_UNORM_BLOCK #xA9)
(cl:defconstant VK_FORMAT_ASTC_8x6_SRGB_BLOCK #xAA)
(cl:defconstant VK_FORMAT_ASTC_8x8_UNORM_BLOCK #xAB)
(cl:defconstant VK_FORMAT_ASTC_8x8_SRGB_BLOCK #xAC)
(cl:defconstant VK_FORMAT_ASTC_10x5_UNORM_BLOCK #xAD)
(cl:defconstant VK_FORMAT_ASTC_10x5_SRGB_BLOCK #xAE)
(cl:defconstant VK_FORMAT_ASTC_10x6_UNORM_BLOCK #xAF)
(cl:defconstant VK_FORMAT_ASTC_10x6_SRGB_BLOCK #xB0)
(cl:defconstant VK_FORMAT_ASTC_10x8_UNORM_BLOCK #xB1)
(cl:defconstant VK_FORMAT_ASTC_10x8_SRGB_BLOCK #xB2)
(cl:defconstant VK_FORMAT_ASTC_10x10_UNORM_BLOCK #xB3)
(cl:defconstant VK_FORMAT_ASTC_10x10_SRGB_BLOCK #xB4)
(cl:defconstant VK_FORMAT_ASTC_12x10_UNORM_BLOCK #xB5)
(cl:defconstant VK_FORMAT_ASTC_12x10_SRGB_BLOCK #xB6)
(cl:defconstant VK_FORMAT_ASTC_12x12_UNORM_BLOCK #xB7)
(cl:defconstant VK_FORMAT_ASTC_12x12_SRGB_BLOCK #xB8)
(cl:defconstant VK_FORMAT_PVRTC1_2BPP_UNORM_BLOCK_IMG #x3B9B9CF0) ;; "VK_IMG_format_pvrtc"
(cl:defconstant VK_FORMAT_PVRTC1_4BPP_UNORM_BLOCK_IMG #x3B9B9CF1) ;; "VK_IMG_format_pvrtc"
(cl:defconstant VK_FORMAT_PVRTC2_2BPP_UNORM_BLOCK_IMG #x3B9B9CF2) ;; "VK_IMG_format_pvrtc"
(cl:defconstant VK_FORMAT_PVRTC2_4BPP_UNORM_BLOCK_IMG #x3B9B9CF3) ;; "VK_IMG_format_pvrtc"
(cl:defconstant VK_FORMAT_PVRTC1_2BPP_SRGB_BLOCK_IMG #x3B9B9CF4) ;; "VK_IMG_format_pvrtc"
(cl:defconstant VK_FORMAT_PVRTC1_4BPP_SRGB_BLOCK_IMG #x3B9B9CF5) ;; "VK_IMG_format_pvrtc"
(cl:defconstant VK_FORMAT_PVRTC2_2BPP_SRGB_BLOCK_IMG #x3B9B9CF6) ;; "VK_IMG_format_pvrtc"
(cl:defconstant VK_FORMAT_PVRTC2_4BPP_SRGB_BLOCK_IMG #x3B9B9CF7) ;; "VK_IMG_format_pvrtc"

(cffi:defctype VkFormatFeatureFlagBits :int)

(cl:defconstant VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT #x1) ;; Format can be used for sampled images (SAMPLED_IMAGE and COMBINED_IMAGE_SAMPLER descriptor types)
(cl:defconstant VK_FORMAT_FEATURE_STORAGE_IMAGE_BIT #x2) ;; Format can be used for storage images (STORAGE_IMAGE descriptor type)
(cl:defconstant VK_FORMAT_FEATURE_STORAGE_IMAGE_ATOMIC_BIT #x4) ;; Format supports atomic operations in case it is used for storage images
(cl:defconstant VK_FORMAT_FEATURE_UNIFORM_TEXEL_BUFFER_BIT #x8) ;; Format can be used for uniform texel buffers (TBOs)
(cl:defconstant VK_FORMAT_FEATURE_STORAGE_TEXEL_BUFFER_BIT #x10) ;; Format can be used for storage texel buffers (IBOs)
(cl:defconstant VK_FORMAT_FEATURE_STORAGE_TEXEL_BUFFER_ATOMIC_BIT #x20) ;; Format supports atomic operations in case it is used for storage texel buffers
(cl:defconstant VK_FORMAT_FEATURE_VERTEX_BUFFER_BIT #x40) ;; Format can be used for vertex buffers (VBOs)
(cl:defconstant VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BIT #x80) ;; Format can be used for color attachment images
(cl:defconstant VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BLEND_BIT #x100) ;; Format supports blending in case it is used for color attachment images
(cl:defconstant VK_FORMAT_FEATURE_DEPTH_STENCIL_ATTACHMENT_BIT #x200) ;; Format can be used for depth/stencil attachment images
(cl:defconstant VK_FORMAT_FEATURE_BLIT_SRC_BIT #x400) ;; Format can be used as the source image of blits with vkCmdBlitImage
(cl:defconstant VK_FORMAT_FEATURE_BLIT_DST_BIT #x800) ;; Format can be used as the destination image of blits with vkCmdBlitImage
(cl:defconstant VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT #x1000) ;; Format can be filtered with VK_FILTER_LINEAR when being sampled
(cl:defconstant VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_CUBIC_BIT_IMG #x2000) ;; "VK_IMG_filter_cubic"
(cl:defconstant VK_FORMAT_FEATURE_TRANSFER_SRC_BIT_KHR #x4000) ;; "VK_KHR_maintenance1"
(cl:defconstant VK_FORMAT_FEATURE_TRANSFER_DST_BIT_KHR #x8000) ;; "VK_KHR_maintenance1"

(cffi:defctype VkFrontFace :int)

(cl:defconstant VK_FRONT_FACE_COUNTER_CLOCKWISE #x0)
(cl:defconstant VK_FRONT_FACE_CLOCKWISE #x1)

(cffi:defctype VkImageAspectFlagBits :int)

(cl:defconstant VK_IMAGE_ASPECT_COLOR_BIT #x1)
(cl:defconstant VK_IMAGE_ASPECT_DEPTH_BIT #x2)
(cl:defconstant VK_IMAGE_ASPECT_STENCIL_BIT #x4)
(cl:defconstant VK_IMAGE_ASPECT_METADATA_BIT #x8)

(cffi:defctype VkImageCreateFlagBits :int)

(cl:defconstant VK_IMAGE_CREATE_SPARSE_BINDING_BIT #x1) ;; Image should support sparse backing
(cl:defconstant VK_IMAGE_CREATE_SPARSE_RESIDENCY_BIT #x2) ;; Image should support sparse backing with partial residency
(cl:defconstant VK_IMAGE_CREATE_SPARSE_ALIASED_BIT #x4) ;; Image should support constent data access to physical memory ranges mapped into multiple locations of sparse images
(cl:defconstant VK_IMAGE_CREATE_MUTABLE_FORMAT_BIT #x8) ;; Allows image views to have different format than the base image
(cl:defconstant VK_IMAGE_CREATE_CUBE_COMPATIBLE_BIT #x10) ;; Allows creating image views with cube type from the created image
(cl:defconstant VK_IMAGE_CREATE_BIND_SFR_BIT_KHX #x40) ;; "VK_KHX_device_group"
(cl:defconstant VK_IMAGE_CREATE_2D_ARRAY_COMPATIBLE_BIT_KHR #x20) ;; "VK_KHR_maintenance1"

(cffi:defctype VkImageLayout :int)

(cl:defconstant VK_IMAGE_LAYOUT_UNDEFINED #x0) ;; Implicit layout an image is when its contents are undefined due to various reasons (e.g. right after creation)
(cl:defconstant VK_IMAGE_LAYOUT_GENERAL #x1) ;; General layout when image can be used for any kind of access
(cl:defconstant VK_IMAGE_LAYOUT_COLOR_ATTACHMENT_OPTIMAL #x2) ;; Optimal layout when image is only used for color attachment read/write
(cl:defconstant VK_IMAGE_LAYOUT_DEPTH_STENCIL_ATTACHMENT_OPTIMAL #x3) ;; Optimal layout when image is only used for depth/stencil attachment read/write
(cl:defconstant VK_IMAGE_LAYOUT_DEPTH_STENCIL_READ_ONLY_OPTIMAL #x4) ;; Optimal layout when image is used for read only depth/stencil attachment and shader access
(cl:defconstant VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL #x5) ;; Optimal layout when image is used for read only shader access
(cl:defconstant VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL #x6) ;; Optimal layout when image is used only as source of transfer operations
(cl:defconstant VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL #x7) ;; Optimal layout when image is used only as destination of transfer operations
(cl:defconstant VK_IMAGE_LAYOUT_PREINITIALIZED #x8) ;; Initial layout used when the data is populated by the CPU
(cl:defconstant VK_IMAGE_LAYOUT_PRESENT_SRC_KHR #x3B9ACDEA) ;; "VK_KHR_swapchain"
(cl:defconstant VK_IMAGE_LAYOUT_SHARED_PRESENT_KHR #x3B9C7B98) ;; "VK_KHR_shared_presentable_image"

(cffi:defctype VkImageTiling :int)

(cl:defconstant VK_IMAGE_TILING_OPTIMAL #x0)
(cl:defconstant VK_IMAGE_TILING_LINEAR #x1)

(cffi:defctype VkImageType :int)

(cl:defconstant VK_IMAGE_TYPE_1D #x0)
(cl:defconstant VK_IMAGE_TYPE_2D #x1)
(cl:defconstant VK_IMAGE_TYPE_3D #x2)

(cffi:defctype VkImageUsageFlagBits :int)

(cl:defconstant VK_IMAGE_USAGE_TRANSFER_SRC_BIT #x1) ;; Can be used as a source of transfer operations
(cl:defconstant VK_IMAGE_USAGE_TRANSFER_DST_BIT #x2) ;; Can be used as a destination of transfer operations
(cl:defconstant VK_IMAGE_USAGE_SAMPLED_BIT #x4) ;; Can be sampled from (SAMPLED_IMAGE and COMBINED_IMAGE_SAMPLER descriptor types)
(cl:defconstant VK_IMAGE_USAGE_STORAGE_BIT #x8) ;; Can be used as storage image (STORAGE_IMAGE descriptor type)
(cl:defconstant VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT #x10) ;; Can be used as framebuffer color attachment
(cl:defconstant VK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT #x20) ;; Can be used as framebuffer depth/stencil attachment
(cl:defconstant VK_IMAGE_USAGE_TRANSIENT_ATTACHMENT_BIT #x40) ;; Image data not needed outside of rendering
(cl:defconstant VK_IMAGE_USAGE_INPUT_ATTACHMENT_BIT #x80) ;; Can be used as framebuffer input attachment

(cffi:defctype VkImageViewType :int)

(cl:defconstant VK_IMAGE_VIEW_TYPE_1D #x0)
(cl:defconstant VK_IMAGE_VIEW_TYPE_2D #x1)
(cl:defconstant VK_IMAGE_VIEW_TYPE_3D #x2)
(cl:defconstant VK_IMAGE_VIEW_TYPE_CUBE #x3)
(cl:defconstant VK_IMAGE_VIEW_TYPE_1D_ARRAY #x4)
(cl:defconstant VK_IMAGE_VIEW_TYPE_2D_ARRAY #x5)
(cl:defconstant VK_IMAGE_VIEW_TYPE_CUBE_ARRAY #x6)

(cffi:defctype VkIndexType :int)

(cl:defconstant VK_INDEX_TYPE_UINT16 #x0)
(cl:defconstant VK_INDEX_TYPE_UINT32 #x1)

(cffi:defctype VkIndirectCommandsLayoutUsageFlagBitsNVX :int)

(cl:defconstant VK_INDIRECT_COMMANDS_LAYOUT_USAGE_UNORDERED_SEQUENCES_BIT_NVX #x1)
(cl:defconstant VK_INDIRECT_COMMANDS_LAYOUT_USAGE_SPARSE_SEQUENCES_BIT_NVX #x2)
(cl:defconstant VK_INDIRECT_COMMANDS_LAYOUT_USAGE_EMPTY_EXECUTIONS_BIT_NVX #x4)
(cl:defconstant VK_INDIRECT_COMMANDS_LAYOUT_USAGE_INDEXED_SEQUENCES_BIT_NVX #x8)

(cffi:defctype VkIndirectCommandsTokenTypeNVX :int)

(cl:defconstant VK_INDIRECT_COMMANDS_TOKEN_TYPE_PIPELINE_NVX #x0)
(cl:defconstant VK_INDIRECT_COMMANDS_TOKEN_TYPE_DESCRIPTOR_SET_NVX #x1)
(cl:defconstant VK_INDIRECT_COMMANDS_TOKEN_TYPE_INDEX_BUFFER_NVX #x2)
(cl:defconstant VK_INDIRECT_COMMANDS_TOKEN_TYPE_VERTEX_BUFFER_NVX #x3)
(cl:defconstant VK_INDIRECT_COMMANDS_TOKEN_TYPE_PUSH_CONSTANT_NVX #x4)
(cl:defconstant VK_INDIRECT_COMMANDS_TOKEN_TYPE_DRAW_INDEXED_NVX #x5)
(cl:defconstant VK_INDIRECT_COMMANDS_TOKEN_TYPE_DRAW_NVX #x6)
(cl:defconstant VK_INDIRECT_COMMANDS_TOKEN_TYPE_DISPATCH_NVX #x7)

(cffi:defctype VkInternalAllocationType :int)

(cl:defconstant VK_INTERNAL_ALLOCATION_TYPE_EXECUTABLE #x0)

(cffi:defctype VkLogicOp :int)

(cl:defconstant VK_LOGIC_OP_CLEAR #x0)
(cl:defconstant VK_LOGIC_OP_AND #x1)
(cl:defconstant VK_LOGIC_OP_AND_REVERSE #x2)
(cl:defconstant VK_LOGIC_OP_COPY #x3)
(cl:defconstant VK_LOGIC_OP_AND_INVERTED #x4)
(cl:defconstant VK_LOGIC_OP_NO_OP #x5)
(cl:defconstant VK_LOGIC_OP_XOR #x6)
(cl:defconstant VK_LOGIC_OP_OR #x7)
(cl:defconstant VK_LOGIC_OP_NOR #x8)
(cl:defconstant VK_LOGIC_OP_EQUIVALENT #x9)
(cl:defconstant VK_LOGIC_OP_INVERT #xA)
(cl:defconstant VK_LOGIC_OP_OR_REVERSE #xB)
(cl:defconstant VK_LOGIC_OP_COPY_INVERTED #xC)
(cl:defconstant VK_LOGIC_OP_OR_INVERTED #xD)
(cl:defconstant VK_LOGIC_OP_NAND #xE)
(cl:defconstant VK_LOGIC_OP_SET #xF)

(cffi:defctype VkMemoryAllocateFlagBitsKHX :int)

(cl:defconstant VK_MEMORY_ALLOCATE_DEVICE_MASK_BIT_KHX #x1) ;; Force allocation on specific devices

(cffi:defctype VkMemoryHeapFlagBits :int)

(cl:defconstant VK_MEMORY_HEAP_DEVICE_LOCAL_BIT #x1) ;; If set, heap represents device memory
(cl:defconstant VK_MEMORY_HEAP_MULTI_INSTANCE_BIT_KHX #x2) ;; "VK_KHX_device_group_creation"

(cffi:defctype VkMemoryPropertyFlagBits :int)

(cl:defconstant VK_MEMORY_PROPERTY_DEVICE_LOCAL_BIT #x1) ;; If otherwise stated, then allocate memory on device
(cl:defconstant VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT #x2) ;; Memory is mappable by host
(cl:defconstant VK_MEMORY_PROPERTY_HOST_COHERENT_BIT #x4) ;; Memory will have i/o coherency. If not set, application may need to use vkFlushMappedMemoryRanges and vkInvalidateMappedMemoryRanges to flush/invalidate host cache
(cl:defconstant VK_MEMORY_PROPERTY_HOST_CACHED_BIT #x8) ;; Memory will be cached by the host
(cl:defconstant VK_MEMORY_PROPERTY_LAZILY_ALLOCATED_BIT #x10) ;; Memory may be allocated by the driver when it is required

(cffi:defctype VkObjectEntryTypeNVX :int)

(cl:defconstant VK_OBJECT_ENTRY_TYPE_DESCRIPTOR_SET_NVX #x0)
(cl:defconstant VK_OBJECT_ENTRY_TYPE_PIPELINE_NVX #x1)
(cl:defconstant VK_OBJECT_ENTRY_TYPE_INDEX_BUFFER_NVX #x2)
(cl:defconstant VK_OBJECT_ENTRY_TYPE_VERTEX_BUFFER_NVX #x3)
(cl:defconstant VK_OBJECT_ENTRY_TYPE_PUSH_CONSTANT_NVX #x4)

(cffi:defctype VkObjectEntryUsageFlagBitsNVX :int)

(cl:defconstant VK_OBJECT_ENTRY_USAGE_GRAPHICS_BIT_NVX #x1)
(cl:defconstant VK_OBJECT_ENTRY_USAGE_COMPUTE_BIT_NVX #x2)

(cffi:defctype VkObjectType :int)

(cl:defconstant VK_OBJECT_TYPE_UNKNOWN #x0)
(cl:defconstant VK_OBJECT_TYPE_INSTANCE #x1) ;; VkInstance
(cl:defconstant VK_OBJECT_TYPE_PHYSICAL_DEVICE #x2) ;; VkPhysicalDevice
(cl:defconstant VK_OBJECT_TYPE_DEVICE #x3) ;; VkDevice
(cl:defconstant VK_OBJECT_TYPE_QUEUE #x4) ;; VkQueue
(cl:defconstant VK_OBJECT_TYPE_SEMAPHORE #x5) ;; VkSemaphore
(cl:defconstant VK_OBJECT_TYPE_COMMAND_BUFFER #x6) ;; VkCommandBuffer
(cl:defconstant VK_OBJECT_TYPE_FENCE #x7) ;; VkFence
(cl:defconstant VK_OBJECT_TYPE_DEVICE_MEMORY #x8) ;; VkDeviceMemory
(cl:defconstant VK_OBJECT_TYPE_BUFFER #x9) ;; VkBuffer
(cl:defconstant VK_OBJECT_TYPE_IMAGE #xA) ;; VkImage
(cl:defconstant VK_OBJECT_TYPE_EVENT #xB) ;; VkEvent
(cl:defconstant VK_OBJECT_TYPE_QUERY_POOL #xC) ;; VkQueryPool
(cl:defconstant VK_OBJECT_TYPE_BUFFER_VIEW #xD) ;; VkBufferView
(cl:defconstant VK_OBJECT_TYPE_IMAGE_VIEW #xE) ;; VkImageView
(cl:defconstant VK_OBJECT_TYPE_SHADER_MODULE #xF) ;; VkShaderModule
(cl:defconstant VK_OBJECT_TYPE_PIPELINE_CACHE #x10) ;; VkPipelineCache
(cl:defconstant VK_OBJECT_TYPE_PIPELINE_LAYOUT #x11) ;; VkPipelineLayout
(cl:defconstant VK_OBJECT_TYPE_RENDER_PASS #x12) ;; VkRenderPass
(cl:defconstant VK_OBJECT_TYPE_PIPELINE #x13) ;; VkPipeline
(cl:defconstant VK_OBJECT_TYPE_DESCRIPTOR_SET_LAYOUT #x14) ;; VkDescriptorSetLayout
(cl:defconstant VK_OBJECT_TYPE_SAMPLER #x15) ;; VkSampler
(cl:defconstant VK_OBJECT_TYPE_DESCRIPTOR_POOL #x16) ;; VkDescriptorPool
(cl:defconstant VK_OBJECT_TYPE_DESCRIPTOR_SET #x17) ;; VkDescriptorSet
(cl:defconstant VK_OBJECT_TYPE_FRAMEBUFFER #x18) ;; VkFramebuffer
(cl:defconstant VK_OBJECT_TYPE_COMMAND_POOL #x19) ;; VkCommandPool
(cl:defconstant VK_OBJECT_TYPE_SURFACE_KHR #x3B9ACA00) ;; "VK_KHR_surface"
(cl:defconstant VK_OBJECT_TYPE_SWAPCHAIN_KHR #x3B9ACDE8) ;; "VK_KHR_swapchain"
(cl:defconstant VK_OBJECT_TYPE_DISPLAY_KHR #x3B9AD1D0) ;; "VK_KHR_display"
(cl:defconstant VK_OBJECT_TYPE_DISPLAY_MODE_KHR #x3B9AD1D1) ;; "VK_KHR_display"
(cl:defconstant VK_OBJECT_TYPE_DEBUG_REPORT_CALLBACK_EXT #x3B9AF4F8) ;; "VK_EXT_debug_report"
(cl:defconstant VK_OBJECT_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_KHR #x3B9C1608) ;; "VK_KHR_descriptor_update_template"
(cl:defconstant VK_OBJECT_TYPE_OBJECT_TABLE_NVX #x3B9C19F0) ;; "VK_NVX_device_generated_commands"
(cl:defconstant VK_OBJECT_TYPE_INDIRECT_COMMANDS_LAYOUT_NVX #x3B9C19F1) ;; "VK_NVX_device_generated_commands"

(cffi:defctype VkPeerMemoryFeatureFlagBitsKHX :int)

(cl:defconstant VK_PEER_MEMORY_FEATURE_COPY_SRC_BIT_KHX #x1) ;; Can read with vkCmdCopy commands
(cl:defconstant VK_PEER_MEMORY_FEATURE_COPY_DST_BIT_KHX #x2) ;; Can write with vkCmdCopy commands
(cl:defconstant VK_PEER_MEMORY_FEATURE_GENERIC_SRC_BIT_KHX #x4) ;; Can read with any access type/command
(cl:defconstant VK_PEER_MEMORY_FEATURE_GENERIC_DST_BIT_KHX #x8) ;; Can write with and access type/command

(cffi:defctype VkPhysicalDeviceType :int)

(cl:defconstant VK_PHYSICAL_DEVICE_TYPE_OTHER #x0)
(cl:defconstant VK_PHYSICAL_DEVICE_TYPE_INTEGRATED_GPU #x1)
(cl:defconstant VK_PHYSICAL_DEVICE_TYPE_DISCRETE_GPU #x2)
(cl:defconstant VK_PHYSICAL_DEVICE_TYPE_VIRTUAL_GPU #x3)
(cl:defconstant VK_PHYSICAL_DEVICE_TYPE_CPU #x4)

(cffi:defctype VkPipelineBindPoint :int)

(cl:defconstant VK_PIPELINE_BIND_POINT_GRAPHICS #x0)
(cl:defconstant VK_PIPELINE_BIND_POINT_COMPUTE #x1)

(cffi:defctype VkPipelineCacheHeaderVersion :int)

(cl:defconstant VK_PIPELINE_CACHE_HEADER_VERSION_ONE #x1)

(cffi:defctype VkPipelineCreateFlagBits :int)

(cl:defconstant VK_PIPELINE_CREATE_DISABLE_OPTIMIZATION_BIT #x1)
(cl:defconstant VK_PIPELINE_CREATE_ALLOW_DERIVATIVES_BIT #x2)
(cl:defconstant VK_PIPELINE_CREATE_DERIVATIVE_BIT #x4)
(cl:defconstant VK_PIPELINE_CREATE_VIEW_INDEX_FROM_DEVICE_INDEX_BIT_KHX #x8) ;; "VK_KHX_device_group"
(cl:defconstant VK_PIPELINE_CREATE_DISPATCH_BASE_KHX #x10) ;; "VK_KHX_device_group"

(cffi:defctype VkPipelineStageFlagBits :int)

(cl:defconstant VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT #x1) ;; Before subsequent commands are processed
(cl:defconstant VK_PIPELINE_STAGE_DRAW_INDIRECT_BIT #x2) ;; Draw/DispatchIndirect command fetch
(cl:defconstant VK_PIPELINE_STAGE_VERTEX_INPUT_BIT #x4) ;; Vertex/index fetch
(cl:defconstant VK_PIPELINE_STAGE_VERTEX_SHADER_BIT #x8) ;; Vertex shading
(cl:defconstant VK_PIPELINE_STAGE_TESSELLATION_CONTROL_SHADER_BIT #x10) ;; Tessellation control shading
(cl:defconstant VK_PIPELINE_STAGE_TESSELLATION_EVALUATION_SHADER_BIT #x20) ;; Tessellation evaluation shading
(cl:defconstant VK_PIPELINE_STAGE_GEOMETRY_SHADER_BIT #x40) ;; Geometry shading
(cl:defconstant VK_PIPELINE_STAGE_FRAGMENT_SHADER_BIT #x80) ;; Fragment shading
(cl:defconstant VK_PIPELINE_STAGE_EARLY_FRAGMENT_TESTS_BIT #x100) ;; Early fragment (depth and stencil) tests
(cl:defconstant VK_PIPELINE_STAGE_LATE_FRAGMENT_TESTS_BIT #x200) ;; Late fragment (depth and stencil) tests
(cl:defconstant VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT #x400) ;; Color attachment writes
(cl:defconstant VK_PIPELINE_STAGE_COMPUTE_SHADER_BIT #x800) ;; Compute shading
(cl:defconstant VK_PIPELINE_STAGE_TRANSFER_BIT #x1000) ;; Transfer/copy operations
(cl:defconstant VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT #x2000) ;; After previous commands have completed
(cl:defconstant VK_PIPELINE_STAGE_HOST_BIT #x4000) ;; Indicates host (CPU) is a source/sink of the dependency
(cl:defconstant VK_PIPELINE_STAGE_ALL_GRAPHICS_BIT #x8000) ;; All stages of the graphics pipeline
(cl:defconstant VK_PIPELINE_STAGE_ALL_COMMANDS_BIT #x10000) ;; All stages supported on the queue
(cl:defconstant VK_PIPELINE_STAGE_COMMAND_PROCESS_BIT_NVX #x20000) ;; "VK_NVX_device_generated_commands"

(cffi:defctype VkPolygonMode :int)

(cl:defconstant VK_POLYGON_MODE_FILL #x0)
(cl:defconstant VK_POLYGON_MODE_LINE #x1)
(cl:defconstant VK_POLYGON_MODE_POINT #x2)

(cffi:defctype VkPresentModeKHR :int)

(cl:defconstant VK_PRESENT_MODE_IMMEDIATE_KHR #x0)
(cl:defconstant VK_PRESENT_MODE_MAILBOX_KHR #x1)
(cl:defconstant VK_PRESENT_MODE_FIFO_KHR #x2)
(cl:defconstant VK_PRESENT_MODE_FIFO_RELAXED_KHR #x3)
(cl:defconstant VK_PRESENT_MODE_SHARED_DEMAND_REFRESH_KHR #x3B9C7B98) ;; "VK_KHR_shared_presentable_image"
(cl:defconstant VK_PRESENT_MODE_SHARED_CONTINUOUS_REFRESH_KHR #x3B9C7B99) ;; "VK_KHR_shared_presentable_image"

(cffi:defctype VkPrimitiveTopology :int)

(cl:defconstant VK_PRIMITIVE_TOPOLOGY_POINT_LIST #x0)
(cl:defconstant VK_PRIMITIVE_TOPOLOGY_LINE_LIST #x1)
(cl:defconstant VK_PRIMITIVE_TOPOLOGY_LINE_STRIP #x2)
(cl:defconstant VK_PRIMITIVE_TOPOLOGY_TRIANGLE_LIST #x3)
(cl:defconstant VK_PRIMITIVE_TOPOLOGY_TRIANGLE_STRIP #x4)
(cl:defconstant VK_PRIMITIVE_TOPOLOGY_TRIANGLE_FAN #x5)
(cl:defconstant VK_PRIMITIVE_TOPOLOGY_LINE_LIST_WITH_ADJACENCY #x6)
(cl:defconstant VK_PRIMITIVE_TOPOLOGY_LINE_STRIP_WITH_ADJACENCY #x7)
(cl:defconstant VK_PRIMITIVE_TOPOLOGY_TRIANGLE_LIST_WITH_ADJACENCY #x8)
(cl:defconstant VK_PRIMITIVE_TOPOLOGY_TRIANGLE_STRIP_WITH_ADJACENCY #x9)
(cl:defconstant VK_PRIMITIVE_TOPOLOGY_PATCH_LIST #xA)

(cffi:defctype VkQueryControlFlagBits :int)

(cl:defconstant VK_QUERY_CONTROL_PRECISE_BIT #x1) ;; Require precise results to be collected by the query

(cffi:defctype VkQueryPipelineStatisticFlagBits :int)

(cl:defconstant VK_QUERY_PIPELINE_STATISTIC_INPUT_ASSEMBLY_VERTICES_BIT #x1) ;; Optional
(cl:defconstant VK_QUERY_PIPELINE_STATISTIC_INPUT_ASSEMBLY_PRIMITIVES_BIT #x2) ;; Optional
(cl:defconstant VK_QUERY_PIPELINE_STATISTIC_VERTEX_SHADER_INVOCATIONS_BIT #x4) ;; Optional
(cl:defconstant VK_QUERY_PIPELINE_STATISTIC_GEOMETRY_SHADER_INVOCATIONS_BIT #x8) ;; Optional
(cl:defconstant VK_QUERY_PIPELINE_STATISTIC_GEOMETRY_SHADER_PRIMITIVES_BIT #x10) ;; Optional
(cl:defconstant VK_QUERY_PIPELINE_STATISTIC_CLIPPING_INVOCATIONS_BIT #x20) ;; Optional
(cl:defconstant VK_QUERY_PIPELINE_STATISTIC_CLIPPING_PRIMITIVES_BIT #x40) ;; Optional
(cl:defconstant VK_QUERY_PIPELINE_STATISTIC_FRAGMENT_SHADER_INVOCATIONS_BIT #x80) ;; Optional
(cl:defconstant VK_QUERY_PIPELINE_STATISTIC_TESSELLATION_CONTROL_SHADER_PATCHES_BIT #x100) ;; Optional
(cl:defconstant VK_QUERY_PIPELINE_STATISTIC_TESSELLATION_EVALUATION_SHADER_INVOCATIONS_BIT #x200) ;; Optional
(cl:defconstant VK_QUERY_PIPELINE_STATISTIC_COMPUTE_SHADER_INVOCATIONS_BIT #x400) ;; Optional

(cffi:defctype VkQueryResultFlagBits :int)

(cl:defconstant VK_QUERY_RESULT_64_BIT #x1) ;; Results of the queries are written to the destination buffer as 64-bit values
(cl:defconstant VK_QUERY_RESULT_WAIT_BIT #x2) ;; Results of the queries are waited on before proceeding with the result copy
(cl:defconstant VK_QUERY_RESULT_WITH_AVAILABILITY_BIT #x4) ;; Besides the results of the query, the availability of the results is also written
(cl:defconstant VK_QUERY_RESULT_PARTIAL_BIT #x8) ;; Copy the partial results of the query even if the final results are not available

(cffi:defctype VkQueryType :int)

(cl:defconstant VK_QUERY_TYPE_OCCLUSION #x0)
(cl:defconstant VK_QUERY_TYPE_PIPELINE_STATISTICS #x1) ;; Optional
(cl:defconstant VK_QUERY_TYPE_TIMESTAMP #x2)

(cffi:defctype VkQueueFlagBits :int)

(cl:defconstant VK_QUEUE_GRAPHICS_BIT #x1) ;; Queue supports graphics operations
(cl:defconstant VK_QUEUE_COMPUTE_BIT #x2) ;; Queue supports compute operations
(cl:defconstant VK_QUEUE_TRANSFER_BIT #x4) ;; Queue supports transfer operations
(cl:defconstant VK_QUEUE_SPARSE_BINDING_BIT #x8) ;; Queue supports sparse resource memory management operations

(cffi:defctype VkRasterizationOrderAMD :int)

(cl:defconstant VK_RASTERIZATION_ORDER_STRICT_AMD #x0)
(cl:defconstant VK_RASTERIZATION_ORDER_RELAXED_AMD #x1)

(cffi:defctype VkResult :int)

(cl:defconstant VK_SUCCESS #x0) ;; Command completed successfully
(cl:defconstant VK_NOT_READY #x1) ;; A fence or query has not yet completed
(cl:defconstant VK_TIMEOUT #x2) ;; A wait operation has not completed in the specified time
(cl:defconstant VK_EVENT_SET #x3) ;; An event is signaled
(cl:defconstant VK_EVENT_RESET #x4) ;; An event is unsignaled
(cl:defconstant VK_INCOMPLETE #x5) ;; A return array was too small for the result
(cl:defconstant VK_ERROR_OUT_OF_HOST_MEMORY -1) ;; A host memory allocation has failed
(cl:defconstant VK_ERROR_OUT_OF_DEVICE_MEMORY -2) ;; A device memory allocation has failed
(cl:defconstant VK_ERROR_INITIALIZATION_FAILED -3) ;; Initialization of a object has failed
(cl:defconstant VK_ERROR_DEVICE_LOST -4) ;; The logical device has been lost. See <<devsandqueues-lost-device>>
(cl:defconstant VK_ERROR_MEMORY_MAP_FAILED -5) ;; Mapping of a memory object has failed
(cl:defconstant VK_ERROR_LAYER_NOT_PRESENT -6) ;; Layer specified does not exist
(cl:defconstant VK_ERROR_EXTENSION_NOT_PRESENT -7) ;; Extension specified does not exist
(cl:defconstant VK_ERROR_FEATURE_NOT_PRESENT -8) ;; Requested feature is not available on this device
(cl:defconstant VK_ERROR_INCOMPATIBLE_DRIVER -9) ;; Unable to find a Vulkan driver
(cl:defconstant VK_ERROR_TOO_MANY_OBJECTS -10) ;; Too many objects of the type have already been created
(cl:defconstant VK_ERROR_FORMAT_NOT_SUPPORTED -11) ;; Requested format is not supported on this device
(cl:defconstant VK_ERROR_FRAGMENTED_POOL -12) ;; A requested pool allocation has failed due to fragmentation of the pool's memory
(cl:defconstant VK_ERROR_SURFACE_LOST_KHR -1000000000) ;; "VK_KHR_surface"
(cl:defconstant VK_ERROR_NATIVE_WINDOW_IN_USE_KHR -1000000001) ;; "VK_KHR_surface"
(cl:defconstant VK_SUBOPTIMAL_KHR #x3B9ACDEB) ;; "VK_KHR_swapchain"
(cl:defconstant VK_ERROR_OUT_OF_DATE_KHR -1000001004) ;; "VK_KHR_swapchain"
(cl:defconstant VK_ERROR_INCOMPATIBLE_DISPLAY_KHR -1000003001) ;; "VK_KHR_display_swapchain"
(cl:defconstant VK_ERROR_VALIDATION_FAILED_EXT -1000011001) ;; "VK_EXT_debug_report"
(cl:defconstant VK_ERROR_INVALID_SHADER_NV -1000012000) ;; "VK_NV_glsl_shader"
(cl:defconstant VK_NV_EXTENSION_1_ERROR -1000013000) ;; "VK_NV_extension_1"
(cl:defconstant VK_ERROR_OUT_OF_POOL_MEMORY_KHR -1000069000) ;; "VK_KHR_maintenance1"
(cl:defconstant VK_ERROR_INVALID_EXTERNAL_HANDLE_KHX -1000072003) ;; "VK_KHX_external_memory"

(cffi:defctype VkSampleCountFlagBits :int)

(cl:defconstant VK_SAMPLE_COUNT_1_BIT #x1) ;; Sample count 1 supported
(cl:defconstant VK_SAMPLE_COUNT_2_BIT #x2) ;; Sample count 2 supported
(cl:defconstant VK_SAMPLE_COUNT_4_BIT #x4) ;; Sample count 4 supported
(cl:defconstant VK_SAMPLE_COUNT_8_BIT #x8) ;; Sample count 8 supported
(cl:defconstant VK_SAMPLE_COUNT_16_BIT #x10) ;; Sample count 16 supported
(cl:defconstant VK_SAMPLE_COUNT_32_BIT #x20) ;; Sample count 32 supported
(cl:defconstant VK_SAMPLE_COUNT_64_BIT #x40) ;; Sample count 64 supported

(cffi:defctype VkSamplerAddressMode :int)

(cl:defconstant VK_SAMPLER_ADDRESS_MODE_REPEAT #x0)
(cl:defconstant VK_SAMPLER_ADDRESS_MODE_MIRRORED_REPEAT #x1)
(cl:defconstant VK_SAMPLER_ADDRESS_MODE_CLAMP_TO_EDGE #x2)
(cl:defconstant VK_SAMPLER_ADDRESS_MODE_CLAMP_TO_BORDER #x3)
(cl:defconstant VK_SAMPLER_ADDRESS_MODE_MIRROR_CLAMP_TO_EDGE #x4) ;; "VK_KHR_sampler_mirror_clamp_to_edge"

(cffi:defctype VkSamplerMipmapMode :int)

(cl:defconstant VK_SAMPLER_MIPMAP_MODE_NEAREST #x0) ;; Choose nearest mip level
(cl:defconstant VK_SAMPLER_MIPMAP_MODE_LINEAR #x1) ;; Linear filter between mip levels

(cffi:defctype VkShaderStageFlagBits :int)

(cl:defconstant VK_SHADER_STAGE_VERTEX_BIT #x1)
(cl:defconstant VK_SHADER_STAGE_TESSELLATION_CONTROL_BIT #x2)
(cl:defconstant VK_SHADER_STAGE_TESSELLATION_EVALUATION_BIT #x4)
(cl:defconstant VK_SHADER_STAGE_GEOMETRY_BIT #x8)
(cl:defconstant VK_SHADER_STAGE_FRAGMENT_BIT #x10)
(cl:defconstant VK_SHADER_STAGE_COMPUTE_BIT #x20)
(cl:defconstant VK_SHADER_STAGE_ALL_GRAPHICS #x1F)
(cl:defconstant VK_SHADER_STAGE_ALL #x7FFFFFFF)

(cffi:defctype VkSharingMode :int)

(cl:defconstant VK_SHARING_MODE_EXCLUSIVE #x0)
(cl:defconstant VK_SHARING_MODE_CONCURRENT #x1)

(cffi:defctype VkSparseImageFormatFlagBits :int)

(cl:defconstant VK_SPARSE_IMAGE_FORMAT_SINGLE_MIPTAIL_BIT #x1) ;; Image uses a single mip tail region for all array layers
(cl:defconstant VK_SPARSE_IMAGE_FORMAT_ALIGNED_MIP_SIZE_BIT #x2) ;; Image requires mip level dimensions to be an integer multiple of the sparse image block dimensions for non-tail mip levels.
(cl:defconstant VK_SPARSE_IMAGE_FORMAT_NONSTANDARD_BLOCK_SIZE_BIT #x4) ;; Image uses a non-standard sparse image block dimensions

(cffi:defctype VkSparseMemoryBindFlagBits :int)

(cl:defconstant VK_SPARSE_MEMORY_BIND_METADATA_BIT #x1) ;; Operation binds resource metadata to memory

(cffi:defctype VkStencilFaceFlagBits :int)

(cl:defconstant VK_STENCIL_FACE_FRONT_BIT #x1) ;; Front face
(cl:defconstant VK_STENCIL_FACE_BACK_BIT #x2) ;; Back face
(cl:defconstant VK_STENCIL_FRONT_AND_BACK #x3) ;; Front and back faces

(cffi:defctype VkStencilOp :int)

(cl:defconstant VK_STENCIL_OP_KEEP #x0)
(cl:defconstant VK_STENCIL_OP_ZERO #x1)
(cl:defconstant VK_STENCIL_OP_REPLACE #x2)
(cl:defconstant VK_STENCIL_OP_INCREMENT_AND_CLAMP #x3)
(cl:defconstant VK_STENCIL_OP_DECREMENT_AND_CLAMP #x4)
(cl:defconstant VK_STENCIL_OP_INVERT #x5)
(cl:defconstant VK_STENCIL_OP_INCREMENT_AND_WRAP #x6)
(cl:defconstant VK_STENCIL_OP_DECREMENT_AND_WRAP #x7)

(cffi:defctype VkStructureType :int)

(cl:defconstant VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_LINE_STATE_CREATE_INFO_EXT 1000259001)
(cl:defconstant VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_LINE_RASTERIZATION_FEATURES_EXT 1000259000)

(cl:defconstant VK_STRUCTURE_TYPE_APPLICATION_INFO #x0)
(cl:defconstant VK_STRUCTURE_TYPE_INSTANCE_CREATE_INFO #x1)
(cl:defconstant VK_STRUCTURE_TYPE_DEVICE_QUEUE_CREATE_INFO #x2)
(cl:defconstant VK_STRUCTURE_TYPE_DEVICE_CREATE_INFO #x3)
(cl:defconstant VK_STRUCTURE_TYPE_SUBMIT_INFO #x4)
(cl:defconstant VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO #x5)
(cl:defconstant VK_STRUCTURE_TYPE_MAPPED_MEMORY_RANGE #x6)
(cl:defconstant VK_STRUCTURE_TYPE_BIND_SPARSE_INFO #x7)
(cl:defconstant VK_STRUCTURE_TYPE_FENCE_CREATE_INFO #x8)
(cl:defconstant VK_STRUCTURE_TYPE_SEMAPHORE_CREATE_INFO #x9)
(cl:defconstant VK_STRUCTURE_TYPE_EVENT_CREATE_INFO #xA)
(cl:defconstant VK_STRUCTURE_TYPE_QUERY_POOL_CREATE_INFO #xB)
(cl:defconstant VK_STRUCTURE_TYPE_BUFFER_CREATE_INFO #xC)
(cl:defconstant VK_STRUCTURE_TYPE_BUFFER_VIEW_CREATE_INFO #xD)
(cl:defconstant VK_STRUCTURE_TYPE_IMAGE_CREATE_INFO #xE)
(cl:defconstant VK_STRUCTURE_TYPE_IMAGE_VIEW_CREATE_INFO #xF)
(cl:defconstant VK_STRUCTURE_TYPE_SHADER_MODULE_CREATE_INFO #x10)
(cl:defconstant VK_STRUCTURE_TYPE_PIPELINE_CACHE_CREATE_INFO #x11)
(cl:defconstant VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_CREATE_INFO #x12)
(cl:defconstant VK_STRUCTURE_TYPE_PIPELINE_VERTEX_INPUT_STATE_CREATE_INFO #x13)
(cl:defconstant VK_STRUCTURE_TYPE_PIPELINE_INPUT_ASSEMBLY_STATE_CREATE_INFO #x14)
(cl:defconstant VK_STRUCTURE_TYPE_PIPELINE_TESSELLATION_STATE_CREATE_INFO #x15)
(cl:defconstant VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_STATE_CREATE_INFO #x16)
(cl:defconstant VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_CREATE_INFO #x17)
(cl:defconstant VK_STRUCTURE_TYPE_PIPELINE_MULTISAMPLE_STATE_CREATE_INFO #x18)
(cl:defconstant VK_STRUCTURE_TYPE_PIPELINE_DEPTH_STENCIL_STATE_CREATE_INFO #x19)
(cl:defconstant VK_STRUCTURE_TYPE_PIPELINE_COLOR_BLEND_STATE_CREATE_INFO #x1A)
(cl:defconstant VK_STRUCTURE_TYPE_PIPELINE_DYNAMIC_STATE_CREATE_INFO #x1B)
(cl:defconstant VK_STRUCTURE_TYPE_GRAPHICS_PIPELINE_CREATE_INFO #x1C)
(cl:defconstant VK_STRUCTURE_TYPE_COMPUTE_PIPELINE_CREATE_INFO #x1D)
(cl:defconstant VK_STRUCTURE_TYPE_PIPELINE_LAYOUT_CREATE_INFO #x1E)
(cl:defconstant VK_STRUCTURE_TYPE_SAMPLER_CREATE_INFO #x1F)
(cl:defconstant VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_CREATE_INFO #x20)
(cl:defconstant VK_STRUCTURE_TYPE_DESCRIPTOR_POOL_CREATE_INFO #x21)
(cl:defconstant VK_STRUCTURE_TYPE_DESCRIPTOR_SET_ALLOCATE_INFO #x22)
(cl:defconstant VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET #x23)
(cl:defconstant VK_STRUCTURE_TYPE_COPY_DESCRIPTOR_SET #x24)
(cl:defconstant VK_STRUCTURE_TYPE_FRAMEBUFFER_CREATE_INFO #x25)
(cl:defconstant VK_STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO #x26)
(cl:defconstant VK_STRUCTURE_TYPE_COMMAND_POOL_CREATE_INFO #x27)
(cl:defconstant VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO #x28)
(cl:defconstant VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_INFO #x29)
(cl:defconstant VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO #x2A)
(cl:defconstant VK_STRUCTURE_TYPE_RENDER_PASS_BEGIN_INFO #x2B)
(cl:defconstant VK_STRUCTURE_TYPE_BUFFER_MEMORY_BARRIER #x2C)
(cl:defconstant VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER #x2D)
(cl:defconstant VK_STRUCTURE_TYPE_MEMORY_BARRIER #x2E)
(cl:defconstant VK_STRUCTURE_TYPE_LOADER_INSTANCE_CREATE_INFO #x2F)
(cl:defconstant VK_STRUCTURE_TYPE_LOADER_DEVICE_CREATE_INFO #x30)
(cl:defconstant VK_STRUCTURE_TYPE_SWAPCHAIN_CREATE_INFO_KHR #x3B9ACDE8) ;; "VK_KHR_swapchain"
(cl:defconstant VK_STRUCTURE_TYPE_PRESENT_INFO_KHR #x3B9ACDE9) ;; "VK_KHR_swapchain"
(cl:defconstant VK_STRUCTURE_TYPE_DISPLAY_MODE_CREATE_INFO_KHR #x3B9AD1D0) ;; "VK_KHR_display"
(cl:defconstant VK_STRUCTURE_TYPE_DISPLAY_SURFACE_CREATE_INFO_KHR #x3B9AD1D1) ;; "VK_KHR_display"
(cl:defconstant VK_STRUCTURE_TYPE_DISPLAY_PRESENT_INFO_KHR #x3B9AD5B8) ;; "VK_KHR_display_swapchain"
(cl:defconstant VK_STRUCTURE_TYPE_XLIB_SURFACE_CREATE_INFO_KHR #x3B9AD9A0) ;; "VK_KHR_xlib_surface"
(cl:defconstant VK_STRUCTURE_TYPE_XCB_SURFACE_CREATE_INFO_KHR #x3B9ADD88) ;; "VK_KHR_xcb_surface"
(cl:defconstant VK_STRUCTURE_TYPE_WAYLAND_SURFACE_CREATE_INFO_KHR #x3B9AE170) ;; "VK_KHR_wayland_surface"
(cl:defconstant VK_STRUCTURE_TYPE_MIR_SURFACE_CREATE_INFO_KHR #x3B9AE558) ;; "VK_KHR_mir_surface"
(cl:defconstant VK_STRUCTURE_TYPE_ANDROID_SURFACE_CREATE_INFO_KHR #x3B9AE940) ;; "VK_KHR_android_surface"
(cl:defconstant VK_STRUCTURE_TYPE_WIN32_SURFACE_CREATE_INFO_KHR #x3B9AED28) ;; "VK_KHR_win32_surface"
(cl:defconstant VK_STRUCTURE_TYPE_DEBUG_REPORT_CALLBACK_CREATE_INFO_EXT #x3B9AF4F8) ;; "VK_EXT_debug_report"
(cl:defconstant VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_RASTERIZATION_ORDER_AMD #x3B9B1050) ;; "VK_AMD_rasterization_order"
(cl:defconstant VK_STRUCTURE_TYPE_DEBUG_MARKER_OBJECT_NAME_INFO_EXT #x3B9B1FF0) ;; "VK_EXT_debug_marker"
(cl:defconstant VK_STRUCTURE_TYPE_DEBUG_MARKER_OBJECT_TAG_INFO_EXT #x3B9B1FF1) ;; "VK_EXT_debug_marker"
(cl:defconstant VK_STRUCTURE_TYPE_DEBUG_MARKER_MARKER_INFO_EXT #x3B9B1FF2) ;; "VK_EXT_debug_marker"
(cl:defconstant VK_STRUCTURE_TYPE_DEDICATED_ALLOCATION_IMAGE_CREATE_INFO_NV #x3B9B2F90) ;; "VK_NV_dedicated_allocation"
(cl:defconstant VK_STRUCTURE_TYPE_DEDICATED_ALLOCATION_BUFFER_CREATE_INFO_NV #x3B9B2F91) ;; "VK_NV_dedicated_allocation"
(cl:defconstant VK_STRUCTURE_TYPE_DEDICATED_ALLOCATION_MEMORY_ALLOCATE_INFO_NV #x3B9B2F92) ;; "VK_NV_dedicated_allocation"
(cl:defconstant VK_STRUCTURE_TYPE_TEXTURE_LOD_GATHER_FORMAT_PROPERTIES_AMD #x3B9B6A28) ;; "VK_AMD_texture_gather_bias_lod"
(cl:defconstant VK_STRUCTURE_TYPE_RENDER_PASS_MULTIVIEW_CREATE_INFO_KHX #x3B9B9908) ;; "VK_KHX_multiview"
(cl:defconstant VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_FEATURES_KHX #x3B9B9909) ;; "VK_KHX_multiview"
(cl:defconstant VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PROPERTIES_KHX #x3B9B990A) ;; "VK_KHX_multiview"
(cl:defconstant VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_IMAGE_CREATE_INFO_NV #x3B9BA4C0) ;; "VK_NV_external_memory"
(cl:defconstant VK_STRUCTURE_TYPE_EXPORT_MEMORY_ALLOCATE_INFO_NV #x3B9BA4C1) ;; "VK_NV_external_memory"
(cl:defconstant VK_STRUCTURE_TYPE_IMPORT_MEMORY_WIN32_HANDLE_INFO_NV #x3B9BA8A8) ;; "VK_NV_external_memory_win32"
(cl:defconstant VK_STRUCTURE_TYPE_EXPORT_MEMORY_WIN32_HANDLE_INFO_NV #x3B9BA8A9) ;; "VK_NV_external_memory_win32"
(cl:defconstant VK_STRUCTURE_TYPE_WIN32_KEYED_MUTEX_ACQUIRE_RELEASE_INFO_NV #x3B9BAC90) ;; "VK_NV_win32_keyed_mutex"
(cl:defconstant VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FEATURES_2_KHR #x3B9BB078) ;; "VK_KHR_get_physical_device_properties2"
(cl:defconstant VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROPERTIES_2_KHR #x3B9BB079) ;; "VK_KHR_get_physical_device_properties2"
(cl:defconstant VK_STRUCTURE_TYPE_FORMAT_PROPERTIES_2_KHR #x3B9BB07A) ;; "VK_KHR_get_physical_device_properties2"
(cl:defconstant VK_STRUCTURE_TYPE_IMAGE_FORMAT_PROPERTIES_2_KHR #x3B9BB07B) ;; "VK_KHR_get_physical_device_properties2"
(cl:defconstant VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_FORMAT_INFO_2_KHR #x3B9BB07C) ;; "VK_KHR_get_physical_device_properties2"
(cl:defconstant VK_STRUCTURE_TYPE_QUEUE_FAMILY_PROPERTIES_2_KHR #x3B9BB07D) ;; "VK_KHR_get_physical_device_properties2"
(cl:defconstant VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_PROPERTIES_2_KHR #x3B9BB07E) ;; "VK_KHR_get_physical_device_properties2"
(cl:defconstant VK_STRUCTURE_TYPE_SPARSE_IMAGE_FORMAT_PROPERTIES_2_KHR #x3B9BB07F) ;; "VK_KHR_get_physical_device_properties2"
(cl:defconstant VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SPARSE_IMAGE_FORMAT_INFO_2_KHR #x3B9BB080) ;; "VK_KHR_get_physical_device_properties2"
(cl:defconstant VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_FLAGS_INFO_KHX #x3B9BB460) ;; "VK_KHX_device_group"
(cl:defconstant VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_INFO_KHX #x3B9BB461) ;; "VK_KHX_device_group"
(cl:defconstant VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_INFO_KHX #x3B9BB462) ;; "VK_KHX_device_group"
(cl:defconstant VK_STRUCTURE_TYPE_DEVICE_GROUP_RENDER_PASS_BEGIN_INFO_KHX #x3B9BB463) ;; "VK_KHX_device_group"
(cl:defconstant VK_STRUCTURE_TYPE_DEVICE_GROUP_COMMAND_BUFFER_BEGIN_INFO_KHX #x3B9BB464) ;; "VK_KHX_device_group"
(cl:defconstant VK_STRUCTURE_TYPE_DEVICE_GROUP_SUBMIT_INFO_KHX #x3B9BB465) ;; "VK_KHX_device_group"
(cl:defconstant VK_STRUCTURE_TYPE_DEVICE_GROUP_BIND_SPARSE_INFO_KHX #x3B9BB466) ;; "VK_KHX_device_group"
(cl:defconstant VK_STRUCTURE_TYPE_DEVICE_GROUP_PRESENT_CAPABILITIES_KHX #x3B9BB467) ;; "VK_KHX_device_group"
(cl:defconstant VK_STRUCTURE_TYPE_IMAGE_SWAPCHAIN_CREATE_INFO_KHX #x3B9BB468) ;; "VK_KHX_device_group"
(cl:defconstant VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_SWAPCHAIN_INFO_KHX #x3B9BB469) ;; "VK_KHX_device_group"
(cl:defconstant VK_STRUCTURE_TYPE_ACQUIRE_NEXT_IMAGE_INFO_KHX #x3B9BB46A) ;; "VK_KHX_device_group"
(cl:defconstant VK_STRUCTURE_TYPE_DEVICE_GROUP_PRESENT_INFO_KHX #x3B9BB46B) ;; "VK_KHX_device_group"
(cl:defconstant VK_STRUCTURE_TYPE_DEVICE_GROUP_SWAPCHAIN_CREATE_INFO_KHX #x3B9BB46C) ;; "VK_KHX_device_group"
(cl:defconstant VK_STRUCTURE_TYPE_VALIDATION_FLAGS_EXT #x3B9BB848) ;; "VK_EXT_validation_flags"
(cl:defconstant VK_STRUCTURE_TYPE_VI_SURFACE_CREATE_INFO_NN #x3B9BBC30) ;; "VK_NN_vi_surface"
(cl:defconstant VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GROUP_PROPERTIES_KHX #x3B9BDB70) ;; "VK_KHX_device_group_creation"
(cl:defconstant VK_STRUCTURE_TYPE_DEVICE_GROUP_DEVICE_CREATE_INFO_KHX #x3B9BDB71) ;; "VK_KHX_device_group_creation"
(cl:defconstant VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_IMAGE_FORMAT_INFO_KHX #x3B9BDF58) ;; "VK_KHX_external_memory_capabilities"
(cl:defconstant VK_STRUCTURE_TYPE_EXTERNAL_IMAGE_FORMAT_PROPERTIES_KHX #x3B9BDF59) ;; "VK_KHX_external_memory_capabilities"
(cl:defconstant VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_BUFFER_INFO_KHX #x3B9BDF5A) ;; "VK_KHX_external_memory_capabilities"
(cl:defconstant VK_STRUCTURE_TYPE_EXTERNAL_BUFFER_PROPERTIES_KHX #x3B9BDF5B) ;; "VK_KHX_external_memory_capabilities"
(cl:defconstant VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ID_PROPERTIES_KHX #x3B9BDF5C) ;; "VK_KHX_external_memory_capabilities"
(cl:defconstant VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_BUFFER_CREATE_INFO_KHX #x3B9BE340) ;; "VK_KHX_external_memory"
(cl:defconstant VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_IMAGE_CREATE_INFO_KHX #x3B9BE341) ;; "VK_KHX_external_memory"
(cl:defconstant VK_STRUCTURE_TYPE_EXPORT_MEMORY_ALLOCATE_INFO_KHX #x3B9BE342) ;; "VK_KHX_external_memory"
(cl:defconstant VK_STRUCTURE_TYPE_IMPORT_MEMORY_WIN32_HANDLE_INFO_KHX #x3B9BE728) ;; "VK_KHX_external_memory_win32"
(cl:defconstant VK_STRUCTURE_TYPE_EXPORT_MEMORY_WIN32_HANDLE_INFO_KHX #x3B9BE729) ;; "VK_KHX_external_memory_win32"
(cl:defconstant VK_STRUCTURE_TYPE_MEMORY_WIN32_HANDLE_PROPERTIES_KHX #x3B9BE72A) ;; "VK_KHX_external_memory_win32"
(cl:defconstant VK_STRUCTURE_TYPE_IMPORT_MEMORY_FD_INFO_KHX #x3B9BEB10) ;; "VK_KHX_external_memory_fd"
(cl:defconstant VK_STRUCTURE_TYPE_MEMORY_FD_PROPERTIES_KHX #x3B9BEB11) ;; "VK_KHX_external_memory_fd"
(cl:defconstant VK_STRUCTURE_TYPE_WIN32_KEYED_MUTEX_ACQUIRE_RELEASE_INFO_KHX #x3B9BEEF8) ;; "VK_KHX_win32_keyed_mutex"
(cl:defconstant VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_SEMAPHORE_INFO_KHX #x3B9BF2E0) ;; "VK_KHX_external_semaphore_capabilities"
(cl:defconstant VK_STRUCTURE_TYPE_EXTERNAL_SEMAPHORE_PROPERTIES_KHX #x3B9BF2E1) ;; "VK_KHX_external_semaphore_capabilities"
(cl:defconstant VK_STRUCTURE_TYPE_EXPORT_SEMAPHORE_CREATE_INFO_KHX #x3B9BF6C8) ;; "VK_KHX_external_semaphore"
(cl:defconstant VK_STRUCTURE_TYPE_IMPORT_SEMAPHORE_WIN32_HANDLE_INFO_KHX #x3B9BFAB0) ;; "VK_KHX_external_semaphore_win32"
(cl:defconstant VK_STRUCTURE_TYPE_EXPORT_SEMAPHORE_WIN32_HANDLE_INFO_KHX #x3B9BFAB1) ;; "VK_KHX_external_semaphore_win32"
(cl:defconstant VK_STRUCTURE_TYPE_D3D12_FENCE_SUBMIT_INFO_KHX #x3B9BFAB2) ;; "VK_KHX_external_semaphore_win32"
(cl:defconstant VK_STRUCTURE_TYPE_IMPORT_SEMAPHORE_FD_INFO_KHX #x3B9BFE98) ;; "VK_KHX_external_semaphore_fd"
(cl:defconstant VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PUSH_DESCRIPTOR_PROPERTIES_KHR #x3B9C0280) ;; "VK_KHR_push_descriptor"
(cl:defconstant VK_STRUCTURE_TYPE_PRESENT_REGIONS_KHR #x3B9C1220) ;; "VK_KHR_incremental_present"
(cl:defconstant VK_STRUCTURE_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_CREATE_INFO_KHR #x3B9C1608) ;; "VK_KHR_descriptor_update_template"
(cl:defconstant VK_STRUCTURE_TYPE_OBJECT_TABLE_CREATE_INFO_NVX #x3B9C19F0) ;; "VK_NVX_device_generated_commands"
(cl:defconstant VK_STRUCTURE_TYPE_INDIRECT_COMMANDS_LAYOUT_CREATE_INFO_NVX #x3B9C19F1) ;; "VK_NVX_device_generated_commands"
(cl:defconstant VK_STRUCTURE_TYPE_CMD_PROCESS_COMMANDS_INFO_NVX #x3B9C19F2) ;; "VK_NVX_device_generated_commands"
(cl:defconstant VK_STRUCTURE_TYPE_CMD_RESERVE_SPACE_FOR_COMMANDS_INFO_NVX #x3B9C19F3) ;; "VK_NVX_device_generated_commands"
(cl:defconstant VK_STRUCTURE_TYPE_DEVICE_GENERATED_COMMANDS_LIMITS_NVX #x3B9C19F4) ;; "VK_NVX_device_generated_commands"
(cl:defconstant VK_STRUCTURE_TYPE_DEVICE_GENERATED_COMMANDS_FEATURES_NVX #x3B9C19F5) ;; "VK_NVX_device_generated_commands"
(cl:defconstant VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_W_SCALING_STATE_CREATE_INFO_NV #x3B9C1DD8) ;; "VK_NV_clip_space_w_scaling"
(cl:defconstant VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES2_EXT #x3B9C2990) ;; "VK_EXT_display_surface_counter"
(cl:defconstant VK_STRUCTURE_TYPE_DISPLAY_POWER_INFO_EXT #x3B9C2D78) ;; "VK_EXT_display_control"
(cl:defconstant VK_STRUCTURE_TYPE_DEVICE_EVENT_INFO_EXT #x3B9C2D79) ;; "VK_EXT_display_control"
(cl:defconstant VK_STRUCTURE_TYPE_DISPLAY_EVENT_INFO_EXT #x3B9C2D7A) ;; "VK_EXT_display_control"
(cl:defconstant VK_STRUCTURE_TYPE_SWAPCHAIN_COUNTER_CREATE_INFO_EXT #x3B9C2D7B) ;; "VK_EXT_display_control"
(cl:defconstant VK_STRUCTURE_TYPE_PRESENT_TIMES_INFO_GOOGLE #x3B9C3160) ;; "VK_GOOGLE_display_timing"
(cl:defconstant VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PER_VIEW_ATTRIBUTES_PROPERTIES_NVX #x3B9C44E8) ;; "VK_NVX_multiview_per_view_attributes"
(cl:defconstant VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_SWIZZLE_STATE_CREATE_INFO_NV #x3B9C48D0) ;; "VK_NV_viewport_swizzle"
(cl:defconstant VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DISCARD_RECTANGLE_PROPERTIES_EXT #x3B9C4CB8) ;; "VK_EXT_discard_rectangles"
(cl:defconstant VK_STRUCTURE_TYPE_PIPELINE_DISCARD_RECTANGLE_STATE_CREATE_INFO_EXT #x3B9C4CB9) ;; "VK_EXT_discard_rectangles"
(cl:defconstant VK_STRUCTURE_TYPE_HDR_METADATA_EXT #x3B9C6428) ;; "VK_EXT_hdr_metadata"
(cl:defconstant VK_STRUCTURE_TYPE_SHARED_PRESENT_SURFACE_CAPABILITIES_KHR #x3B9C7B98) ;; "VK_KHR_shared_presentable_image"
(cl:defconstant VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SURFACE_INFO_2_KHR #x3B9C9AD8) ;; "VK_KHR_get_surface_capabilities2"
(cl:defconstant VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES_2_KHR #x3B9C9AD9) ;; "VK_KHR_get_surface_capabilities2"
(cl:defconstant VK_STRUCTURE_TYPE_SURFACE_FORMAT_2_KHR #x3B9C9ADA) ;; "VK_KHR_get_surface_capabilities2"
(cl:defconstant VK_STRUCTURE_TYPE_IOS_SURFACE_CREATE_INFO_MVK #x3B9CA690) ;; "VK_MVK_ios_surface"
(cl:defconstant VK_STRUCTURE_TYPE_MACOS_SURFACE_CREATE_INFO_MVK #x3B9CAA78) ;; "VK_MVK_macos_surface"

(cffi:defctype VkSubpassContents :int)

(cl:defconstant VK_SUBPASS_CONTENTS_INLINE #x0)
(cl:defconstant VK_SUBPASS_CONTENTS_SECONDARY_COMMAND_BUFFERS #x1)

(cffi:defctype VkSubpassDescriptionFlagBits :int)

(cl:defconstant VK_SUBPASS_DESCRIPTION_PER_VIEW_ATTRIBUTES_BIT_NVX #x1) ;; "VK_NVX_multiview_per_view_attributes"
(cl:defconstant VK_SUBPASS_DESCRIPTION_PER_VIEW_POSITION_X_ONLY_BIT_NVX #x2) ;; "VK_NVX_multiview_per_view_attributes"

(cffi:defctype VkSurfaceCounterFlagBitsEXT :int)

(cl:defconstant VK_SURFACE_COUNTER_VBLANK_EXT #x1)

(cffi:defctype VkSurfaceTransformFlagBitsKHR :int)

(cl:defconstant VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR #x1)
(cl:defconstant VK_SURFACE_TRANSFORM_ROTATE_90_BIT_KHR #x2)
(cl:defconstant VK_SURFACE_TRANSFORM_ROTATE_180_BIT_KHR #x4)
(cl:defconstant VK_SURFACE_TRANSFORM_ROTATE_270_BIT_KHR #x8)
(cl:defconstant VK_SURFACE_TRANSFORM_HORIZONTAL_MIRROR_BIT_KHR #x10)
(cl:defconstant VK_SURFACE_TRANSFORM_HORIZONTAL_MIRROR_ROTATE_90_BIT_KHR #x20)
(cl:defconstant VK_SURFACE_TRANSFORM_HORIZONTAL_MIRROR_ROTATE_180_BIT_KHR #x40)
(cl:defconstant VK_SURFACE_TRANSFORM_HORIZONTAL_MIRROR_ROTATE_270_BIT_KHR #x80)
(cl:defconstant VK_SURFACE_TRANSFORM_INHERIT_BIT_KHR #x100)

(cffi:defctype VkSwapchainCreateFlagBitsKHR :int)

(cl:defconstant VK_SWAPCHAIN_CREATE_BIND_SFR_BIT_KHX #x1) ;; "VK_KHX_device_group"

(cffi:defctype VkSystemAllocationScope :int)

(cl:defconstant VK_SYSTEM_ALLOCATION_SCOPE_COMMAND #x0)
(cl:defconstant VK_SYSTEM_ALLOCATION_SCOPE_OBJECT #x1)
(cl:defconstant VK_SYSTEM_ALLOCATION_SCOPE_CACHE #x2)
(cl:defconstant VK_SYSTEM_ALLOCATION_SCOPE_DEVICE #x3)
(cl:defconstant VK_SYSTEM_ALLOCATION_SCOPE_INSTANCE #x4)

(cffi:defctype VkValidationCheckEXT :int)

(cl:defconstant VK_VALIDATION_CHECK_ALL_EXT #x0)
(cl:defconstant VK_VALIDATION_CHECK_SHADERS_EXT #x1)

(cffi:defctype VkVertexInputRate :int)

(cl:defconstant VK_VERTEX_INPUT_RATE_VERTEX #x0)
(cl:defconstant VK_VERTEX_INPUT_RATE_INSTANCE #x1)

(cffi:defctype VkViewportCoordinateSwizzleNV :int)

(cl:defconstant VK_VIEWPORT_COORDINATE_SWIZZLE_POSITIVE_X_NV #x0)
(cl:defconstant VK_VIEWPORT_COORDINATE_SWIZZLE_NEGATIVE_X_NV #x1)
(cl:defconstant VK_VIEWPORT_COORDINATE_SWIZZLE_POSITIVE_Y_NV #x2)
(cl:defconstant VK_VIEWPORT_COORDINATE_SWIZZLE_NEGATIVE_Y_NV #x3)
(cl:defconstant VK_VIEWPORT_COORDINATE_SWIZZLE_POSITIVE_Z_NV #x4)
(cl:defconstant VK_VIEWPORT_COORDINATE_SWIZZLE_NEGATIVE_Z_NV #x5)
(cl:defconstant VK_VIEWPORT_COORDINATE_SWIZZLE_POSITIVE_W_NV #x6)
(cl:defconstant VK_VIEWPORT_COORDINATE_SWIZZLE_NEGATIVE_W_NV #x7) ;; ("defcallback x"
                                                                  ;;  (:POINTER
                                                                  ;;   ":void")
                                                                  ;;  (("\"pUserData\""
                                                                  ;;    (:POINTER
                                                                  ;;     "void"))
                                                                  ;;   ("\"size\""
                                                                  ;;    "size_t")
                                                                  ;;   ("\"alignment\""
                                                                  ;;    "size_t")
                                                                  ;;   ("\"allocationScope\""
                                                                  ;;    "VkSystemAllocationScope")))
(cffi:defctype PFN_vkAllocationFunction :pointer)

 ;; ("defcallback x" "VkBool32"
 ;;  (("\"flags\"" "VkDebugReportFlagsEXT")
 ;;   ("\"objectType\"" "VkDebugReportObjectTypeEXT") ("\"object\"" "uint64_t")
 ;;   ("\"location\"" "size_t") ("\"messageCode\"" "int32_t")
 ;;   ("\"pLayerPrefix\"" (:POINTER "char"))
 ;;   ("\"pMessage\"/const" (:POINTER "char"))
 ;;   ("\"pUserData\"/const" (:POINTER "void"))))
(cffi:defctype PFN_vkDebugReportCallbackEXT :pointer)

 ;; ("defcallback x" ":void"
 ;;  (("\"pUserData\"" (:POINTER "void")) ("\"pMemory\"" (:POINTER "void"))))
(cffi:defctype PFN_vkFreeFunction :pointer)

 ;; ("defcallback x" ":void"
 ;;  (("\"pUserData\"" (:POINTER "void")) ("\"size\"" "size_t")
 ;;   ("\"allocationType\"" "VkInternalAllocationType")
 ;;   ("\"allocationScope\"" "VkSystemAllocationScope")))
(cffi:defctype PFN_vkInternalAllocationNotification :pointer)

 ;; ("defcallback x" ":void"
 ;;  (("\"pUserData\"" (:POINTER "void")) ("\"size\"" "size_t")
 ;;   ("\"allocationType\"" "VkInternalAllocationType")
 ;;   ("\"allocationScope\"" "VkSystemAllocationScope")))
(cffi:defctype PFN_vkInternalFreeNotification :pointer)

 ;; ("defcallback x" (:POINTER ":void")
 ;;  (("\"pUserData\"" (:POINTER "void")) ("\"pOriginal\"" (:POINTER "void"))
 ;;   ("\"size\"" "size_t") ("\"alignment\"" "size_t")
 ;;   ("\"allocationScope\"" "VkSystemAllocationScope")))
(cffi:defctype PFN_vkReallocationFunction :pointer)

 ;; ("defcallback x" ":void" NIL)
(cffi:defctype PFN_vkVoidFunction :pointer)

(cffi:defcstruct VkAcquireNextImageInfoKHX
  (sType VkStructureType)#|MUST-BE :ACQUIRE-NEXT-IMAGE-INFO-KHX|#
  (pNext (:pointer :void))
  (swapchain VkSwapchainKHR)#|OPAQUE T|#
  (timeout :uint64)
  (semaphore VkSemaphore)#|OPTIONAL (:true) OPAQUE T|#
  (fence VkFence)#|OPTIONAL (:true) OPAQUE T|#
  (deviceMask :uint32))

(cffi:defcstruct VkAllocationCallbacks
  (pUserData (:pointer :void))#|OPTIONAL (:true)|#
  (pfnAllocation PFN_vkAllocationFunction)
  (pfnReallocation PFN_vkReallocationFunction)
  (pfnFree PFN_vkFreeFunction)
  (pfnInternalAllocation PFN_vkInternalAllocationNotification)#|OPTIONAL (:true)|#
  (pfnInternalFree PFN_vkInternalFreeNotification)#|OPTIONAL (:true)|#)

(cffi:defcstruct VkAndroidSurfaceCreateInfoKHR
  (sType VkStructureType)#|MUST-BE :ANDROID-SURFACE-CREATE-INFO-KHR|#
  (pNext (:pointer :void))
  (flags VkAndroidSurfaceCreateFlagsKHR)#|OPTIONAL (:true)|#
  (window (:pointer ANativeWindow))#|OPAQUE T|#)

(cffi:defcstruct VkApplicationInfo
  (sType VkStructureType)#|MUST-BE :APPLICATION-INFO|#
  (pNext (:pointer :void))
  (pApplicationName (:pointer :char))#|OPTIONAL (:true) LEN (NULL-TERMINATED)|#
  (applicationVersion :uint32)
  (pEngineName (:pointer :char))#|OPTIONAL (:true) LEN (NULL-TERMINATED)|#
  (engineVersion :uint32)
  (apiVersion :uint32))

(cffi:defcstruct VkAttachmentDescription
  (flags VkAttachmentDescriptionFlags)#|OPTIONAL (:true)|#
  (format VkFormat)
  (samples VkSampleCountFlagBits)
  (loadOp VkAttachmentLoadOp)
  (storeOp VkAttachmentStoreOp)
  (stencilLoadOp VkAttachmentLoadOp)
  (stencilStoreOp VkAttachmentStoreOp)
  (initialLayout VkImageLayout)
  (finalLayout VkImageLayout))

(cffi:defcstruct VkAttachmentReference
  (attachment :uint32)
  (layout VkImageLayout))

(cffi:defcstruct VkBindBufferMemoryInfoKHX
  (sType VkStructureType)#|MUST-BE :BIND-BUFFER-MEMORY-INFO-KHX|#
  (pNext (:pointer :void))
  (buffer VkBuffer)#|OPAQUE T|#
  (memory VkDeviceMemory)#|OPAQUE T|#
  (memoryOffset VkDeviceSize)
  (deviceIndexCount :uint32)#|OPTIONAL (:true)|#
  (pDeviceIndices (:pointer :uint32))#|LEN (:deviceIndexCount)|#)

(cffi:defcstruct VkOffset2D
  (x :int32)
  (y :int32))

(cffi:defcstruct VkExtent2D
  (width :uint32)
  (height :uint32))

(cffi:defcstruct VkRect2D
  (offset (:struct VkOffset2D))
  (extent (:struct VkExtent2D)))

(cffi:defcstruct VkBindImageMemoryInfoKHX
  (sType VkStructureType)#|MUST-BE :BIND-IMAGE-MEMORY-INFO-KHX|#
  (pNext (:pointer :void))
  (image VkImage)#|OPAQUE T|#
  (memory VkDeviceMemory)#|OPAQUE T|#
  (memoryOffset VkDeviceSize)
  (deviceIndexCount :uint32)#|OPTIONAL (:true)|#
  (pDeviceIndices (:pointer :uint32))#|LEN (:deviceIndexCount)|#
  (SFRRectCount :uint32)#|OPTIONAL (:true)|#
  (pSFRRects (:pointer (:struct VkRect2D)))#|LEN (:SFRRectCount)|#)

(cffi:defcstruct VkBindImageMemorySwapchainInfoKHX
  (sType VkStructureType)#|MUST-BE :BIND-IMAGE-MEMORY-SWAPCHAIN-INFO-KHX|#
  (pNext (:pointer :void))
  (swapchain VkSwapchainKHR)#|OPAQUE T|#
  (imageIndex :uint32))

(cffi:defcstruct VkSparseMemoryBind
  (resourceOffset VkDeviceSize)
  (size VkDeviceSize)
  (memory VkDeviceMemory)#|OPTIONAL (:true) OPAQUE T|#
  (memoryOffset VkDeviceSize)
  (flags VkSparseMemoryBindFlags)#|OPTIONAL (:true)|#)

(cffi:defcstruct VkSparseBufferMemoryBindInfo
  (buffer VkBuffer)#|OPAQUE T|#
  (bindCount :uint32)
  (pBinds (:pointer (:struct VkSparseMemoryBind)))#|LEN (:bindCount)|#)

(cffi:defcstruct VkSparseImageOpaqueMemoryBindInfo
  (image VkImage)#|OPAQUE T|#
  (bindCount :uint32)
  (pBinds (:pointer (:struct VkSparseMemoryBind)))#|LEN (:bindCount)|#)

(cffi:defcstruct VkImageSubresource
  (aspectMask VkImageAspectFlags)
  (mipLevel :uint32)
  (arrayLayer :uint32))

(cffi:defcstruct VkOffset3D
  (x :int32)
  (y :int32)
  (z :int32))

(cffi:defcstruct VkExtent3D
  (width :uint32)
  (height :uint32)
  (depth :uint32))

(cffi:defcstruct VkSparseImageMemoryBind
  (subresource (:struct VkImageSubresource))
  (offset (:struct VkOffset3D))
  (extent (:struct VkExtent3D))
  (memory VkDeviceMemory)#|OPTIONAL (:true) OPAQUE T|#
  (memoryOffset VkDeviceSize)
  (flags VkSparseMemoryBindFlags)#|OPTIONAL (:true)|#)

(cffi:defcstruct VkSparseImageMemoryBindInfo
  (image VkImage)#|OPAQUE T|#
  (bindCount :uint32)
  (pBinds (:pointer (:struct VkSparseImageMemoryBind)))#|LEN (:bindCount)|#)

(cffi:defcstruct VkBindSparseInfo
  (sType VkStructureType)#|MUST-BE :BIND-SPARSE-INFO|#
  (pNext (:pointer :void))
  (waitSemaphoreCount :uint32)#|OPTIONAL (:true)|#
  (pWaitSemaphores (:pointer VkSemaphore))#|LEN (:waitSemaphoreCount) OPAQUE T|#
  (bufferBindCount :uint32)#|OPTIONAL (:true)|#
  (pBufferBinds (:pointer (:struct VkSparseBufferMemoryBindInfo)))#|LEN (:bufferBindCount)|#
  (imageOpaqueBindCount :uint32)#|OPTIONAL (:true)|#
  (pImageOpaqueBinds (:pointer (:struct VkSparseImageOpaqueMemoryBindInfo)))#|LEN (:imageOpaqueBindCount)|#
  (imageBindCount :uint32)#|OPTIONAL (:true)|#
  (pImageBinds (:pointer (:struct VkSparseImageMemoryBindInfo)))#|LEN (:imageBindCount)|#
  (signalSemaphoreCount :uint32)#|OPTIONAL (:true)|#
  (pSignalSemaphores (:pointer VkSemaphore))#|LEN (:signalSemaphoreCount) OPAQUE T|#)

(cffi:defcstruct VkBufferCopy
  (srcOffset VkDeviceSize)
  (dstOffset VkDeviceSize)
  (size VkDeviceSize))

(cffi:defcstruct VkBufferCreateInfo
  (sType VkStructureType)#|MUST-BE :BUFFER-CREATE-INFO|#
  (pNext (:pointer :void))
  (flags VkBufferCreateFlags)#|OPTIONAL (:true)|#
  (size VkDeviceSize)
  (usage VkBufferUsageFlags)
  (sharingMode VkSharingMode)
  (queueFamilyIndexCount :uint32)#|OPTIONAL (:true)|#
  (pQueueFamilyIndices (:pointer :uint32))#|LEN (:queueFamilyIndexCount)|#)

(cffi:defcstruct VkImageSubresourceLayers
  (aspectMask VkImageAspectFlags)
  (mipLevel :uint32)
  (baseArrayLayer :uint32)
  (layerCount :uint32))

(cffi:defcstruct VkBufferImageCopy
  (bufferOffset VkDeviceSize)
  (bufferRowLength :uint32)
  (bufferImageHeight :uint32)
  (imageSubresource (:struct VkImageSubresourceLayers))
  (imageOffset (:struct VkOffset3D))
  (imageExtent (:struct VkExtent3D)))

(cffi:defcstruct VkBufferMemoryBarrier
  (sType VkStructureType)#|MUST-BE :BUFFER-MEMORY-BARRIER|#
  (pNext (:pointer :void))
  (srcAccessMask VkAccessFlags)#|OPTIONAL (:true)|#
  (dstAccessMask VkAccessFlags)#|OPTIONAL (:true)|#
  (srcQueueFamilyIndex :uint32)
  (dstQueueFamilyIndex :uint32)
  (buffer VkBuffer)#|OPAQUE T|#
  (offset VkDeviceSize)
  (size VkDeviceSize))

(cffi:defcstruct VkBufferViewCreateInfo
  (sType VkStructureType)#|MUST-BE :BUFFER-VIEW-CREATE-INFO|#
  (pNext (:pointer :void))
  (flags VkBufferViewCreateFlags)#|OPTIONAL (:true)|#
  (buffer VkBuffer)#|OPAQUE T|#
  (format VkFormat)
  (offset VkDeviceSize)
  (range VkDeviceSize))

(cffi:defcunion VkClearColorValue
  (float32 :float :count 4)
  (int32 :int32 :count 4)
  (uint32 :uint32 :count 4))

(cffi:defcstruct VkClearDepthStencilValue
  (depth :float)
  (stencil :uint32))

(cffi:defcunion VkClearValue
  (color (:union VkClearColorValue))
  (depthStencil (:struct VkClearDepthStencilValue)))

(cffi:defcstruct VkClearAttachment
  (aspectMask VkImageAspectFlags)
  (colorAttachment :uint32)
  (clearValue (:union VkClearValue)))

(cffi:defcstruct VkClearRect
  (rect (:struct VkRect2D))
  (baseArrayLayer :uint32)
  (layerCount :uint32))

(cffi:defcstruct VkIndirectCommandsTokenNVX
  (tokenType VkIndirectCommandsTokenTypeNVX)
  (buffer VkBuffer)#|OPAQUE T|#
  (offset VkDeviceSize))

(cffi:defcstruct VkCmdProcessCommandsInfoNVX
  (sType VkStructureType)#|MUST-BE :CMD-PROCESS-COMMANDS-INFO-NVX|#
  (pNext (:pointer :void))
  (objectTable VkObjectTableNVX)#|OPAQUE T|#
  (indirectCommandsLayout VkIndirectCommandsLayoutNVX)#|OPAQUE T|#
  (indirectCommandsTokenCount :uint32)
  (pIndirectCommandsTokens (:pointer (:struct VkIndirectCommandsTokenNVX)))#|LEN (:indirectCommandsTokenCount)|#
  (maxSequencesCount :uint32)
  (targetCommandBuffer VkCommandBuffer)#|OPTIONAL (:true) OPAQUE T|#
  (sequencesCountBuffer VkBuffer)#|OPTIONAL (:true) OPAQUE T|#
  (sequencesCountOffset VkDeviceSize)#|OPTIONAL (:true)|#
  (sequencesIndexBuffer VkBuffer)#|OPTIONAL (:true) OPAQUE T|#
  (sequencesIndexOffset VkDeviceSize)#|OPTIONAL (:true)|#)

(cffi:defcstruct VkCmdReserveSpaceForCommandsInfoNVX
  (sType VkStructureType)#|MUST-BE :CMD-RESERVE-SPACE-FOR-COMMANDS-INFO-NVX|#
  (pNext (:pointer :void))
  (objectTable VkObjectTableNVX)#|OPAQUE T|#
  (indirectCommandsLayout VkIndirectCommandsLayoutNVX)#|OPAQUE T|#
  (maxSequencesCount :uint32))

(cffi:defcstruct VkCommandBufferAllocateInfo
  (sType VkStructureType)#|MUST-BE :COMMAND-BUFFER-ALLOCATE-INFO|#
  (pNext (:pointer :void))
  (commandPool VkCommandPool)#|OPAQUE T|#
  (level VkCommandBufferLevel)
  (commandBufferCount :uint32))

(cffi:defcstruct VkCommandBufferInheritanceInfo
  (sType VkStructureType)#|MUST-BE :COMMAND-BUFFER-INHERITANCE-INFO|#
  (pNext (:pointer :void))
  (renderPass VkRenderPass)#|OPTIONAL (:true) OPAQUE T|#
  (subpass :uint32)
  (framebuffer VkFramebuffer)#|OPTIONAL (:true) OPAQUE T|#
  (occlusionQueryEnable VkBool32)
  (queryFlags VkQueryControlFlags)#|OPTIONAL (:true)|#
  (pipelineStatistics VkQueryPipelineStatisticFlags)#|OPTIONAL (:true)|#)

(cffi:defcstruct VkCommandBufferBeginInfo
  (sType VkStructureType)#|MUST-BE :COMMAND-BUFFER-BEGIN-INFO|#
  (pNext (:pointer :void))
  (flags VkCommandBufferUsageFlags)#|OPTIONAL (:true)|#
  (pInheritanceInfo (:pointer (:struct VkCommandBufferInheritanceInfo)))#|OPTIONAL (:true)|#)

(cffi:defcstruct VkCommandPoolCreateInfo
  (sType VkStructureType)#|MUST-BE :COMMAND-POOL-CREATE-INFO|#
  (pNext (:pointer :void))
  (flags VkCommandPoolCreateFlags)#|OPTIONAL (:true)|#
  (queueFamilyIndex :uint32))

(cffi:defcstruct VkComponentMapping
  (r VkComponentSwizzle)
  (g VkComponentSwizzle)
  (b VkComponentSwizzle)
  (a VkComponentSwizzle))

(cffi:defcstruct VkSpecializationMapEntry
  (constantID :uint32)
  (offset :uint32)
  (size size-t))

(cffi:defcstruct VkSpecializationInfo
  (mapEntryCount :uint32)#|OPTIONAL (:true)|#
  (pMapEntries (:pointer (:struct VkSpecializationMapEntry)))#|LEN (:mapEntryCount)|#
  (dataSize size-t)#|OPTIONAL (:true)|#
  (pData (:pointer :void))#|LEN (:dataSize)|#)

(cffi:defcstruct VkPipelineShaderStageCreateInfo
  (sType VkStructureType)#|MUST-BE :PIPELINE-SHADER-STAGE-CREATE-INFO|#
  (pNext (:pointer :void))
  (flags VkPipelineShaderStageCreateFlags)#|OPTIONAL (:true)|#
  (stage VkShaderStageFlagBits)
  (module VkShaderModule)#|OPAQUE T|#
  (pName (:pointer :char))#|LEN (NULL-TERMINATED)|#
  (pSpecializationInfo (:pointer (:struct VkSpecializationInfo)))#|OPTIONAL (:true)|#)

(cffi:defcstruct VkComputePipelineCreateInfo
  (sType VkStructureType)#|MUST-BE :COMPUTE-PIPELINE-CREATE-INFO|#
  (pNext (:pointer :void))
  (flags VkPipelineCreateFlags)#|OPTIONAL (:true)|#
  (stage (:struct VkPipelineShaderStageCreateInfo))
  (layout VkPipelineLayout)#|OPAQUE T|#
  (basePipelineHandle VkPipeline)#|OPTIONAL (:true) OPAQUE T|#
  (basePipelineIndex :int32))

(cffi:defcstruct VkCopyDescriptorSet
  (sType VkStructureType)#|MUST-BE :COPY-DESCRIPTOR-SET|#
  (pNext (:pointer :void))
  (srcSet VkDescriptorSet)#|OPAQUE T|#
  (srcBinding :uint32)
  (srcArrayElement :uint32)
  (dstSet VkDescriptorSet)#|OPAQUE T|#
  (dstBinding :uint32)
  (dstArrayElement :uint32)
  (descriptorCount :uint32))

(cffi:defcstruct VkD3D12FenceSubmitInfoKHX
  (sType VkStructureType)#|MUST-BE :D3D12-FENCE-SUBMIT-INFO-KHX|#
  (pNext (:pointer :void))
  (waitSemaphoreValuesCount :uint32)#|OPTIONAL (:true)|#
  (pWaitSemaphoreValues (:pointer :uint64))#|OPTIONAL (:true) LEN (:waitSemaphoreValuesCount)|#
  (signalSemaphoreValuesCount :uint32)#|OPTIONAL (:true)|#
  (pSignalSemaphoreValues (:pointer :uint64))#|OPTIONAL (:true) LEN (:signalSemaphoreValuesCount)|#)

(cffi:defcstruct VkDebugMarkerMarkerInfoEXT
  (sType VkStructureType)#|MUST-BE :DEBUG-MARKER-MARKER-INFO-EXT|#
  (pNext (:pointer :void))
  (pMarkerName (:pointer :char))#|LEN (NULL-TERMINATED)|#
  (color :float :count 4)#|OPTIONAL (:true)|#)

(cffi:defcstruct VkDebugMarkerObjectNameInfoEXT
  (sType VkStructureType)#|MUST-BE :DEBUG-MARKER-OBJECT-NAME-INFO-EXT|#
  (pNext (:pointer :void))
  (objectType VkDebugReportObjectTypeEXT)
  (object :uint64)
  (pObjectName (:pointer :char))#|LEN (NULL-TERMINATED)|#)

(cffi:defcstruct VkDebugMarkerObjectTagInfoEXT
  (sType VkStructureType)#|MUST-BE :DEBUG-MARKER-OBJECT-TAG-INFO-EXT|#
  (pNext (:pointer :void))
  (objectType VkDebugReportObjectTypeEXT)
  (object :uint64)
  (tagName :uint64)
  (tagSize size-t)
  (pTag (:pointer :void))#|LEN (:tagSize)|#)

(cffi:defcstruct VkDebugReportCallbackCreateInfoEXT
  (sType VkStructureType)#|MUST-BE :DEBUG-REPORT-CALLBACK-CREATE-INFO-EXT|#
  (pNext (:pointer :void))
  (flags VkDebugReportFlagsEXT)#|OPTIONAL (:true)|#
  (pfnCallback PFN_vkDebugReportCallbackEXT)
  (pUserData (:pointer :void))#|OPTIONAL (:true)|#)

(cffi:defcstruct VkDedicatedAllocationBufferCreateInfoNV
  (sType VkStructureType)#|MUST-BE :DEDICATED-ALLOCATION-BUFFER-CREATE-INFO-NV|#
  (pNext (:pointer :void))
  (dedicatedAllocation VkBool32))

(cffi:defcstruct VkDedicatedAllocationImageCreateInfoNV
  (sType VkStructureType)#|MUST-BE :DEDICATED-ALLOCATION-IMAGE-CREATE-INFO-NV|#
  (pNext (:pointer :void))
  (dedicatedAllocation VkBool32))

(cffi:defcstruct VkDedicatedAllocationMemoryAllocateInfoNV
  (sType VkStructureType)#|MUST-BE :DEDICATED-ALLOCATION-MEMORY-ALLOCATE-INFO-NV|#
  (pNext (:pointer :void))
  (image VkImage)#|OPTIONAL (:true) OPAQUE T|#
  (buffer VkBuffer)#|OPTIONAL (:true) OPAQUE T|#)

(cffi:defcstruct VkDescriptorBufferInfo
  (buffer VkBuffer)#|OPAQUE T|#
  (offset VkDeviceSize)
  (range VkDeviceSize))

(cffi:defcstruct VkDescriptorImageInfo
  (sampler VkSampler)#|OPAQUE T|#
  (imageView VkImageView)#|OPAQUE T|#
  (imageLayout VkImageLayout))

(cffi:defcstruct VkDescriptorPoolSize
  (type VkDescriptorType)
  (descriptorCount :uint32))

(cffi:defcstruct VkDescriptorPoolCreateInfo
  (sType VkStructureType)#|MUST-BE :DESCRIPTOR-POOL-CREATE-INFO|#
  (pNext (:pointer :void))
  (flags VkDescriptorPoolCreateFlags)#|OPTIONAL (:true)|#
  (maxSets :uint32)
  (poolSizeCount :uint32)
  (pPoolSizes (:pointer (:struct VkDescriptorPoolSize)))#|LEN (:poolSizeCount)|#)

(cffi:defcstruct VkDescriptorSetAllocateInfo
  (sType VkStructureType)#|MUST-BE :DESCRIPTOR-SET-ALLOCATE-INFO|#
  (pNext (:pointer :void))
  (descriptorPool VkDescriptorPool)#|OPAQUE T|#
  (descriptorSetCount :uint32)
  (pSetLayouts (:pointer VkDescriptorSetLayout))#|LEN (:descriptorSetCount) OPAQUE T|#)

(cffi:defcstruct VkDescriptorSetLayoutBinding
  (binding :uint32)
  (descriptorType VkDescriptorType)
  (descriptorCount :uint32)#|OPTIONAL (:true)|#
  (stageFlags VkShaderStageFlags)
  (pImmutableSamplers (:pointer VkSampler))#|OPTIONAL (:true) LEN (:descriptorCount) OPAQUE T|#)

(cffi:defcstruct VkDescriptorSetLayoutCreateInfo
  (sType VkStructureType)#|MUST-BE :DESCRIPTOR-SET-LAYOUT-CREATE-INFO|#
  (pNext (:pointer :void))
  (flags VkDescriptorSetLayoutCreateFlags)#|OPTIONAL (:true)|#
  (bindingCount :uint32)#|OPTIONAL (:true)|#
  (pBindings (:pointer (:struct VkDescriptorSetLayoutBinding)))#|LEN (:bindingCount)|#)

(cffi:defcstruct VkDescriptorUpdateTemplateEntryKHR
  (dstBinding :uint32)
  (dstArrayElement :uint32)
  (descriptorCount :uint32)
  (descriptorType VkDescriptorType)
  (offset size-t)
  (stride size-t))

(cffi:defcstruct VkDescriptorUpdateTemplateCreateInfoKHR
  (sType VkStructureType)#|MUST-BE :DESCRIPTOR-UPDATE-TEMPLATE-CREATE-INFO-KHR|#
  (pNext (:pointer :void))
  (flags VkDescriptorUpdateTemplateCreateFlagsKHR)#|OPTIONAL (:true)|#
  (descriptorUpdateEntryCount :uint32)
  (pDescriptorUpdateEntries (:pointer
                             (:struct VkDescriptorUpdateTemplateEntryKHR)))#|LEN (:descriptorUpdateEntryCount)|#
  (templateType VkDescriptorUpdateTemplateTypeKHR)
  (descriptorSetLayout VkDescriptorSetLayout)#|OPTIONAL (:true) OPAQUE T|#
  (pipelineBindPoint VkPipelineBindPoint)#|OPTIONAL (:true)|#
  (pipelineLayout VkPipelineLayout)#|OPTIONAL (:true) OPAQUE T|#
  (set :uint32)#|OPTIONAL (:true)|#)

(cffi:defcstruct VkDeviceQueueCreateInfo
  (sType VkStructureType)#|MUST-BE :DEVICE-QUEUE-CREATE-INFO|#
  (pNext (:pointer :void))
  (flags VkDeviceQueueCreateFlags)#|OPTIONAL (:true)|#
  (queueFamilyIndex :uint32)
  (queueCount :uint32)
  (pQueuePriorities (:pointer :float))#|LEN (:queueCount)|#)

(cffi:defcstruct VkPhysicalDeviceFeatures
  (robustBufferAccess VkBool32)
  (fullDrawIndexUint32 VkBool32)
  (imageCubeArray VkBool32)
  (independentBlend VkBool32)
  (geometryShader VkBool32)
  (tessellationShader VkBool32)
  (sampleRateShading VkBool32)
  (dualSrcBlend VkBool32)
  (logicOp VkBool32)
  (multiDrawIndirect VkBool32)
  (drawIndirectFirstInstance VkBool32)
  (depthClamp VkBool32)
  (depthBiasClamp VkBool32)
  (fillModeNonSolid VkBool32)
  (depthBounds VkBool32)
  (wideLines VkBool32)
  (largePoints VkBool32)
  (alphaToOne VkBool32)
  (multiViewport VkBool32)
  (samplerAnisotropy VkBool32)
  (textureCompressionETC2 VkBool32)
  (textureCompressionASTC_LDR VkBool32)
  (textureCompressionBC VkBool32)
  (occlusionQueryPrecise VkBool32)
  (pipelineStatisticsQuery VkBool32)
  (vertexPipelineStoresAndAtomics VkBool32)
  (fragmentStoresAndAtomics VkBool32)
  (shaderTessellationAndGeometryPointSize VkBool32)
  (shaderImageGatherExtended VkBool32)
  (shaderStorageImageExtendedFormats VkBool32)
  (shaderStorageImageMultisample VkBool32)
  (shaderStorageImageReadWithoutFormat VkBool32)
  (shaderStorageImageWriteWithoutFormat VkBool32)
  (shaderUniformBufferArrayDynamicIndexing VkBool32)
  (shaderSampledImageArrayDynamicIndexing VkBool32)
  (shaderStorageBufferArrayDynamicIndexing VkBool32)
  (shaderStorageImageArrayDynamicIndexing VkBool32)
  (shaderClipDistance VkBool32)
  (shaderCullDistance VkBool32)
  (shaderFloat64 VkBool32)
  (shaderInt64 VkBool32)
  (shaderInt16 VkBool32)
  (shaderResourceResidency VkBool32)
  (shaderResourceMinLod VkBool32)
  (sparseBinding VkBool32)
  (sparseResidencyBuffer VkBool32)
  (sparseResidencyImage2D VkBool32)
  (sparseResidencyImage3D VkBool32)
  (sparseResidency2Samples VkBool32)
  (sparseResidency4Samples VkBool32)
  (sparseResidency8Samples VkBool32)
  (sparseResidency16Samples VkBool32)
  (sparseResidencyAliased VkBool32)
  (variableMultisampleRate VkBool32)
  (inheritedQueries VkBool32))

(cffi:defcstruct VkDeviceCreateInfo
  (sType VkStructureType)#|MUST-BE :DEVICE-CREATE-INFO|#
  (pNext (:pointer :void))
  (flags VkDeviceCreateFlags)#|OPTIONAL (:true)|#
  (queueCreateInfoCount :uint32)
  (pQueueCreateInfos (:pointer (:struct VkDeviceQueueCreateInfo)))#|LEN (:queueCreateInfoCount)|#
  (enabledLayerCount :uint32)#|OPTIONAL (:true)|#
  (ppEnabledLayerNames (:pointer (:pointer :char)))#|LEN (:enabledLayerCount
                                                          NULL-TERMINATED)|#
  (enabledExtensionCount :uint32)#|OPTIONAL (:true)|#
  (ppEnabledExtensionNames (:pointer (:pointer :char)))#|LEN (:enabledExtensionCount
                                                              NULL-TERMINATED)|#
  (pEnabledFeatures (:pointer (:struct VkPhysicalDeviceFeatures)))#|OPTIONAL (:true)|#)

(cffi:defcstruct VkDeviceEventInfoEXT
  (sType VkStructureType)#|MUST-BE :DEVICE-EVENT-INFO-EXT|#
  (pNext (:pointer :void))
  (deviceEvent VkDeviceEventTypeEXT))

(cffi:defcstruct VkDeviceGeneratedCommandsFeaturesNVX
  (sType VkStructureType)#|MUST-BE :DEVICE-GENERATED-COMMANDS-FEATURES-NVX|#
  (pNext (:pointer :void))
  (computeBindingPointSupport VkBool32))

(cffi:defcstruct VkDeviceGeneratedCommandsLimitsNVX
  (sType VkStructureType)#|MUST-BE :DEVICE-GENERATED-COMMANDS-LIMITS-NVX|#
  (pNext (:pointer :void))
  (maxIndirectCommandsLayoutTokenCount :uint32)
  (maxObjectEntryCounts :uint32)
  (minSequenceCountBufferOffsetAlignment :uint32)
  (minSequenceIndexBufferOffsetAlignment :uint32)
  (minCommandsTokenBufferOffsetAlignment :uint32))

(cffi:defcstruct VkDeviceGroupBindSparseInfoKHX
  (sType VkStructureType)#|MUST-BE :DEVICE-GROUP-BIND-SPARSE-INFO-KHX|#
  (pNext (:pointer :void))
  (resourceDeviceIndex :uint32)
  (memoryDeviceIndex :uint32))

(cffi:defcstruct VkDeviceGroupCommandBufferBeginInfoKHX
  (sType VkStructureType)#|MUST-BE :DEVICE-GROUP-COMMAND-BUFFER-BEGIN-INFO-KHX|#
  (pNext (:pointer :void))
  (deviceMask :uint32))

(cffi:defcstruct VkDeviceGroupDeviceCreateInfoKHX
  (sType VkStructureType)#|MUST-BE :DEVICE-GROUP-DEVICE-CREATE-INFO-KHX|#
  (pNext (:pointer :void))
  (physicalDeviceCount :uint32)#|OPTIONAL (:true)|#
  (pPhysicalDevices (:pointer VkPhysicalDevice))#|LEN (:physicalDeviceCount) OPAQUE T|#)

(cffi:defcstruct VkDeviceGroupPresentCapabilitiesKHX
  (sType VkStructureType)#|MUST-BE :DEVICE-GROUP-PRESENT-CAPABILITIES-KHX|#
  (pNext (:pointer :void))
  (presentMask :uint32 :count 32)
  (modes VkDeviceGroupPresentModeFlagsKHX))

(cffi:defcstruct VkDeviceGroupPresentInfoKHX
  (sType VkStructureType)#|MUST-BE :DEVICE-GROUP-PRESENT-INFO-KHX|#
  (pNext (:pointer :void))
  (swapchainCount :uint32)#|OPTIONAL (:true)|#
  (pDeviceMasks (:pointer :uint32))#|LEN (:swapchainCount)|#
  (mode VkDeviceGroupPresentModeFlagBitsKHX))

(cffi:defcstruct VkDeviceGroupRenderPassBeginInfoKHX
  (sType VkStructureType)#|MUST-BE :DEVICE-GROUP-RENDER-PASS-BEGIN-INFO-KHX|#
  (pNext (:pointer :void))
  (deviceMask :uint32)
  (deviceRenderAreaCount :uint32)#|OPTIONAL (:true)|#
  (pDeviceRenderAreas (:pointer (:struct VkRect2D)))#|LEN (:deviceRenderAreaCount)|#)

(cffi:defcstruct VkDeviceGroupSubmitInfoKHX
  (sType VkStructureType)#|MUST-BE :DEVICE-GROUP-SUBMIT-INFO-KHX|#
  (pNext (:pointer :void))
  (waitSemaphoreCount :uint32)#|OPTIONAL (:true)|#
  (pWaitSemaphoreDeviceIndices (:pointer :uint32))#|LEN (:waitSemaphoreCount)|#
  (commandBufferCount :uint32)#|OPTIONAL (:true)|#
  (pCommandBufferDeviceMasks (:pointer :uint32))#|LEN (:commandBufferCount)|#
  (signalSemaphoreCount :uint32)#|OPTIONAL (:true)|#
  (pSignalSemaphoreDeviceIndices (:pointer :uint32))#|LEN (:signalSemaphoreCount)|#)

(cffi:defcstruct VkDeviceGroupSwapchainCreateInfoKHX
  (sType VkStructureType)#|MUST-BE :DEVICE-GROUP-SWAPCHAIN-CREATE-INFO-KHX|#
  (pNext (:pointer :void))
  (modes VkDeviceGroupPresentModeFlagsKHX))

(cffi:defcstruct VkDispatchIndirectCommand
  (x :uint32)
  (y :uint32)
  (z :uint32))

(cffi:defcstruct VkDisplayEventInfoEXT
  (sType VkStructureType)#|MUST-BE :DISPLAY-EVENT-INFO-EXT|#
  (pNext (:pointer :void))
  (displayEvent VkDisplayEventTypeEXT))

(cffi:defcstruct VkDisplayModeParametersKHR
  (visibleRegion (:struct VkExtent2D))
  (refreshRate :uint32))

(cffi:defcstruct VkDisplayModeCreateInfoKHR
  (sType VkStructureType)#|MUST-BE :DISPLAY-MODE-CREATE-INFO-KHR|#
  (pNext (:pointer :void))
  (flags VkDisplayModeCreateFlagsKHR)#|OPTIONAL (:true)|#
  (parameters (:struct VkDisplayModeParametersKHR)))

(cffi:defcstruct VkDisplayModePropertiesKHR
  (displayMode VkDisplayModeKHR)#|OPAQUE T|#
  (parameters (:struct VkDisplayModeParametersKHR)))

(cffi:defcstruct VkDisplayPlaneCapabilitiesKHR
  (supportedAlpha VkDisplayPlaneAlphaFlagsKHR)#|OPTIONAL (:true)|#
  (minSrcPosition (:struct VkOffset2D))
  (maxSrcPosition (:struct VkOffset2D))
  (minSrcExtent (:struct VkExtent2D))
  (maxSrcExtent (:struct VkExtent2D))
  (minDstPosition (:struct VkOffset2D))
  (maxDstPosition (:struct VkOffset2D))
  (minDstExtent (:struct VkExtent2D))
  (maxDstExtent (:struct VkExtent2D)))

(cffi:defcstruct VkDisplayPlanePropertiesKHR
  (currentDisplay VkDisplayKHR)#|OPAQUE T|#
  (currentStackIndex :uint32))

(cffi:defcstruct VkDisplayPowerInfoEXT
  (sType VkStructureType)#|MUST-BE :DISPLAY-POWER-INFO-EXT|#
  (pNext (:pointer :void))
  (powerState VkDisplayPowerStateEXT))

(cffi:defcstruct VkDisplayPresentInfoKHR
  (sType VkStructureType)#|MUST-BE :DISPLAY-PRESENT-INFO-KHR|#
  (pNext (:pointer :void))
  (srcRect (:struct VkRect2D))
  (dstRect (:struct VkRect2D))
  (persistent VkBool32))

(cffi:defcstruct VkDisplayPropertiesKHR
  (display VkDisplayKHR)#|OPAQUE T|#
  (displayName (:pointer :char))#|LEN (NULL-TERMINATED)|#
  (physicalDimensions (:struct VkExtent2D))
  (physicalResolution (:struct VkExtent2D))
  (supportedTransforms VkSurfaceTransformFlagsKHR)#|OPTIONAL (:true)|#
  (planeReorderPossible VkBool32)
  (persistentContent VkBool32))

(cffi:defcstruct VkDisplaySurfaceCreateInfoKHR
  (sType VkStructureType)#|MUST-BE :DISPLAY-SURFACE-CREATE-INFO-KHR|#
  (pNext (:pointer :void))
  (flags VkDisplaySurfaceCreateFlagsKHR)#|OPTIONAL (:true)|#
  (displayMode VkDisplayModeKHR)#|OPAQUE T|#
  (planeIndex :uint32)
  (planeStackIndex :uint32)
  (transform VkSurfaceTransformFlagBitsKHR)
  (globalAlpha :float)
  (alphaMode VkDisplayPlaneAlphaFlagBitsKHR)
  (imageExtent (:struct VkExtent2D)))

(cffi:defcstruct VkDrawIndexedIndirectCommand
  (indexCount :uint32)
  (instanceCount :uint32)
  (firstIndex :uint32)
  (vertexOffset :int32)
  (firstInstance :uint32))

(cffi:defcstruct VkDrawIndirectCommand
  (vertexCount :uint32)
  (instanceCount :uint32)
  (firstVertex :uint32)
  (firstInstance :uint32))

(cffi:defcstruct VkEventCreateInfo
  (sType VkStructureType)#|MUST-BE :EVENT-CREATE-INFO|#
  (pNext (:pointer :void))
  (flags VkEventCreateFlags)#|OPTIONAL (:true)|#)

(cffi:defcstruct VkExportMemoryAllocateInfoKHX
  (sType VkStructureType)#|MUST-BE :EXPORT-MEMORY-ALLOCATE-INFO-KHX|#
  (pNext (:pointer :void))
  (handleTypes VkExternalMemoryHandleTypeFlagsKHX)#|OPTIONAL (:true)|#)

(cffi:defcstruct VkExportMemoryAllocateInfoNV
  (sType VkStructureType)#|MUST-BE :EXPORT-MEMORY-ALLOCATE-INFO-NV|#
  (pNext (:pointer :void))
  (handleTypes VkExternalMemoryHandleTypeFlagsNV)#|OPTIONAL (:true)|#)

(cffi:defcstruct VkExportMemoryWin32HandleInfoKHX
  (sType VkStructureType)#|MUST-BE :EXPORT-MEMORY-WIN32-HANDLE-INFO-KHX|#
  (pNext (:pointer :void))
  (pAttributes (:pointer SECURITY_ATTRIBUTES))#|OPTIONAL (:true)|#
  (dwAccess DWORD)
  (name LPCWSTR))

(cffi:defcstruct VkExportMemoryWin32HandleInfoNV
  (sType VkStructureType)#|MUST-BE :EXPORT-MEMORY-WIN32-HANDLE-INFO-NV|#
  (pNext (:pointer :void))
  (pAttributes (:pointer SECURITY_ATTRIBUTES))#|OPTIONAL (:true)|#
  (dwAccess DWORD)#|OPTIONAL (:true)|#)

(cffi:defcstruct VkExportSemaphoreCreateInfoKHX
  (sType VkStructureType)#|MUST-BE :EXPORT-SEMAPHORE-CREATE-INFO-KHX|#
  (pNext (:pointer :void))
  (handleTypes VkExternalSemaphoreHandleTypeFlagsKHX)#|OPTIONAL (:true)|#)

(cffi:defcstruct VkExportSemaphoreWin32HandleInfoKHX
  (sType VkStructureType)#|MUST-BE :EXPORT-SEMAPHORE-WIN32-HANDLE-INFO-KHX|#
  (pNext (:pointer :void))
  (pAttributes (:pointer SECURITY_ATTRIBUTES))#|OPTIONAL (:true)|#
  (dwAccess DWORD)
  (name LPCWSTR))

(cffi:defcstruct VkExtensionProperties
  (extensionName :char :count 256)
  (specVersion :uint32))

(cffi:defcstruct VkExternalMemoryPropertiesKHX
  (externalMemoryFeatures VkExternalMemoryFeatureFlagsKHX)
  (exportFromImportedHandleTypes VkExternalMemoryHandleTypeFlagsKHX)#|OPTIONAL (:true)|#
  (compatibleHandleTypes VkExternalMemoryHandleTypeFlagsKHX))

(cffi:defcstruct VkExternalBufferPropertiesKHX
  (sType VkStructureType)#|MUST-BE :EXTERNAL-BUFFER-PROPERTIES-KHX|#
  (pNext (:pointer :void))
  (externalMemoryProperties (:struct VkExternalMemoryPropertiesKHX)))

(cffi:defcstruct VkExternalImageFormatPropertiesKHX
  (sType VkStructureType)#|MUST-BE :EXTERNAL-IMAGE-FORMAT-PROPERTIES-KHX|#
  (pNext (:pointer :void))
  (externalMemoryProperties (:struct VkExternalMemoryPropertiesKHX)))

(cffi:defcstruct VkImageFormatProperties
  (maxExtent (:struct VkExtent3D))
  (maxMipLevels :uint32)
  (maxArrayLayers :uint32)
  (sampleCounts VkSampleCountFlags)#|OPTIONAL (:true)|#
  (maxResourceSize VkDeviceSize))

(cffi:defcstruct VkExternalImageFormatPropertiesNV
  (imageFormatProperties (:struct VkImageFormatProperties))
  (externalMemoryFeatures VkExternalMemoryFeatureFlagsNV)#|OPTIONAL (:true)|#
  (exportFromImportedHandleTypes VkExternalMemoryHandleTypeFlagsNV)#|OPTIONAL (:true)|#
  (compatibleHandleTypes VkExternalMemoryHandleTypeFlagsNV)#|OPTIONAL (:true)|#)

(cffi:defcstruct VkExternalMemoryBufferCreateInfoKHX
  (sType VkStructureType)#|MUST-BE :EXTERNAL-MEMORY-BUFFER-CREATE-INFO-KHX|#
  (pNext (:pointer :void))
  (handleTypes VkExternalMemoryHandleTypeFlagsKHX)#|OPTIONAL (:true)|#)

(cffi:defcstruct VkExternalMemoryImageCreateInfoKHX
  (sType VkStructureType)#|MUST-BE :EXTERNAL-MEMORY-IMAGE-CREATE-INFO-KHX|#
  (pNext (:pointer :void))
  (handleTypes VkExternalMemoryHandleTypeFlagsKHX))

(cffi:defcstruct VkExternalMemoryImageCreateInfoNV
  (sType VkStructureType)#|MUST-BE :EXTERNAL-MEMORY-IMAGE-CREATE-INFO-NV|#
  (pNext (:pointer :void))
  (handleTypes VkExternalMemoryHandleTypeFlagsNV)#|OPTIONAL (:true)|#)

(cffi:defcstruct VkExternalSemaphorePropertiesKHX
  (sType VkStructureType)#|MUST-BE :EXTERNAL-SEMAPHORE-PROPERTIES-KHX|#
  (pNext (:pointer :void))
  (exportFromImportedHandleTypes VkExternalSemaphoreHandleTypeFlagsKHX)
  (compatibleHandleTypes VkExternalSemaphoreHandleTypeFlagsKHX)
  (externalSemaphoreFeatures VkExternalSemaphoreFeatureFlagsKHX)#|OPTIONAL (:true)|#)

(cffi:defcstruct VkFenceCreateInfo
  (sType VkStructureType)#|MUST-BE :FENCE-CREATE-INFO|#
  (pNext (:pointer :void))
  (flags VkFenceCreateFlags)#|OPTIONAL (:true)|#)

(cffi:defcstruct VkFormatProperties
  (linearTilingFeatures VkFormatFeatureFlags)#|OPTIONAL (:true)|#
  (optimalTilingFeatures VkFormatFeatureFlags)#|OPTIONAL (:true)|#
  (bufferFeatures VkFormatFeatureFlags)#|OPTIONAL (:true)|#)

(cffi:defcstruct VkFormatProperties2KHR
  (sType VkStructureType)#|MUST-BE :FORMAT-PROPERTIES-2-KHR|#
  (pNext (:pointer :void))
  (formatProperties (:struct VkFormatProperties)))

(cffi:defcstruct VkFramebufferCreateInfo
  (sType VkStructureType)#|MUST-BE :FRAMEBUFFER-CREATE-INFO|#
  (pNext (:pointer :void))
  (flags VkFramebufferCreateFlags)#|OPTIONAL (:true)|#
  (renderPass VkRenderPass)#|OPAQUE T|#
  (attachmentCount :uint32)#|OPTIONAL (:true)|#
  (pAttachments (:pointer VkImageView))#|LEN (:attachmentCount) OPAQUE T|#
  (width :uint32)
  (height :uint32)
  (layers :uint32))

(cffi:defcstruct VkVertexInputBindingDescription
  (binding :uint32)
  (stride :uint32)
  (inputRate VkVertexInputRate))

(cffi:defcstruct VkVertexInputAttributeDescription
  (location :uint32)
  (binding :uint32)
  (format VkFormat)
  (offset :uint32))

(cffi:defcstruct VkPipelineVertexInputStateCreateInfo
  (sType VkStructureType)#|MUST-BE :PIPELINE-VERTEX-INPUT-STATE-CREATE-INFO|#
  (pNext (:pointer :void))
  (flags VkPipelineVertexInputStateCreateFlags)#|OPTIONAL (:true)|#
  (vertexBindingDescriptionCount :uint32)#|OPTIONAL (:true)|#
  (pVertexBindingDescriptions (:pointer
                               (:struct VkVertexInputBindingDescription)))#|LEN (:vertexBindingDescriptionCount)|#
  (vertexAttributeDescriptionCount :uint32)#|OPTIONAL (:true)|#
  (pVertexAttributeDescriptions (:pointer
                                 (:struct VkVertexInputAttributeDescription)))#|LEN (:vertexAttributeDescriptionCount)|#)

(cffi:defcstruct VkPipelineInputAssemblyStateCreateInfo
  (sType VkStructureType)#|MUST-BE :PIPELINE-INPUT-ASSEMBLY-STATE-CREATE-INFO|#
  (pNext (:pointer :void))
  (flags VkPipelineInputAssemblyStateCreateFlags)#|OPTIONAL (:true)|#
  (topology VkPrimitiveTopology)
  (primitiveRestartEnable VkBool32))

(cffi:defcstruct VkPipelineTessellationStateCreateInfo
  (sType VkStructureType)#|MUST-BE :PIPELINE-TESSELLATION-STATE-CREATE-INFO|#
  (pNext (:pointer :void))
  (flags VkPipelineTessellationStateCreateFlags)#|OPTIONAL (:true)|#
  (patchControlPoints :uint32))

(cffi:defcstruct VkViewport
  (x :float)
  (y :float)
  (width :float)
  (height :float)
  (minDepth :float)
  (maxDepth :float))

(cffi:defcstruct VkPipelineViewportStateCreateInfo
  (sType VkStructureType)#|MUST-BE :PIPELINE-VIEWPORT-STATE-CREATE-INFO|#
  (pNext (:pointer :void))
  (flags VkPipelineViewportStateCreateFlags)#|OPTIONAL (:true)|#
  (viewportCount :uint32)
  (pViewports (:pointer (:struct VkViewport)))#|OPTIONAL (:true) LEN (:viewportCount)|#
  (scissorCount :uint32)
  (pScissors (:pointer (:struct VkRect2D)))#|OPTIONAL (:true) LEN (:scissorCount)|#)

(cffi:defcstruct VkPipelineRasterizationStateCreateInfo
  (sType VkStructureType)#|MUST-BE :PIPELINE-RASTERIZATION-STATE-CREATE-INFO|#
  (pNext (:pointer :void))
  (flags VkPipelineRasterizationStateCreateFlags)#|OPTIONAL (:true)|#
  (depthClampEnable VkBool32)
  (rasterizerDiscardEnable VkBool32)
  (polygonMode VkPolygonMode)
  (cullMode VkCullModeFlags)#|OPTIONAL (:true)|#
  (frontFace VkFrontFace)
  (depthBiasEnable VkBool32)
  (depthBiasConstantFactor :float)
  (depthBiasClamp :float)
  (depthBiasSlopeFactor :float)
  (lineWidth :float))

(cffi:defctype VkLineRasterizationModeEXT :int)
(cl:defconstant VK_LINE_RASTERIZATION_MODE_DEFAULT_EXT 0)
(cl:defconstant VK_LINE_RASTERIZATION_MODE_RECTANGULAR_EXT 1)
(cl:defconstant VK_LINE_RASTERIZATION_MODE_BRESENHAM_EXT 2)
(cl:defconstant VK_LINE_RASTERIZATION_MODE_RECTANGULAR_SMOOTH_EXT 3)

(cffi:defcstruct VkPipelineRasterizationLineStateCreateInfoEXT
  (sType VkStructureType)
  (pNext (:pointer :void))
  (lineRasterizationMode VkLineRasterizationModeEXT)
  (stippledLineEnable VkBool32)
  (lineStippleFactor :uint32)
  (lineStipplePattern :unsigned-short))

(cffi:defcstruct VkPhysicalDeviceLineRasterizationFeaturesEXT
  (sType VkStructureType)
  (pNext (:pointer :void))
  (rectangularLines VkBool32)
  (bresenhamLines VkBool32)
  (smoothLines VkBool32)
  (stippledRectangularLines VkBool32)
  (stippledBresenhamLines VkBool32)
  (stippledSmoothLines VkBool32))

(cffi:defcstruct VkPipelineMultisampleStateCreateInfo
  (sType VkStructureType)#|MUST-BE :PIPELINE-MULTISAMPLE-STATE-CREATE-INFO|#
  (pNext (:pointer :void))
  (flags VkPipelineMultisampleStateCreateFlags)#|OPTIONAL (:true)|#
  (rasterizationSamples VkSampleCountFlagBits)
  (sampleShadingEnable VkBool32)
  (minSampleShading :float)
  (pSampleMask (:pointer VkSampleMask))#|OPTIONAL (:true) LEN (latexmath:[\lceil{\mathit{rasterizationSamples} \over 32}\rceil])|#
  (alphaToCoverageEnable VkBool32)
  (alphaToOneEnable VkBool32))

(cffi:defcstruct VkStencilOpState
  (failOp VkStencilOp)
  (passOp VkStencilOp)
  (depthFailOp VkStencilOp)
  (compareOp VkCompareOp)
  (compareMask :uint32)
  (writeMask :uint32)
  (reference :uint32))

(cffi:defcstruct VkPipelineDepthStencilStateCreateInfo
  (sType VkStructureType)#|MUST-BE :PIPELINE-DEPTH-STENCIL-STATE-CREATE-INFO|#
  (pNext (:pointer :void))
  (flags VkPipelineDepthStencilStateCreateFlags)#|OPTIONAL (:true)|#
  (depthTestEnable VkBool32)
  (depthWriteEnable VkBool32)
  (depthCompareOp VkCompareOp)
  (depthBoundsTestEnable VkBool32)
  (stencilTestEnable VkBool32)
  (front (:struct VkStencilOpState))
  (back (:struct VkStencilOpState))
  (minDepthBounds :float)
  (maxDepthBounds :float))

(cffi:defcstruct VkPipelineColorBlendAttachmentState
  (blendEnable VkBool32)
  (srcColorBlendFactor VkBlendFactor)
  (dstColorBlendFactor VkBlendFactor)
  (colorBlendOp VkBlendOp)
  (srcAlphaBlendFactor VkBlendFactor)
  (dstAlphaBlendFactor VkBlendFactor)
  (alphaBlendOp VkBlendOp)
  (colorWriteMask VkColorComponentFlags)#|OPTIONAL (:true)|#)

(cffi:defcstruct VkPipelineColorBlendStateCreateInfo
  (sType VkStructureType)#|MUST-BE :PIPELINE-COLOR-BLEND-STATE-CREATE-INFO|#
  (pNext (:pointer :void))
  (flags VkPipelineColorBlendStateCreateFlags)#|OPTIONAL (:true)|#
  (logicOpEnable VkBool32)
  (logicOp VkLogicOp)
  (attachmentCount :uint32)#|OPTIONAL (:true)|#
  (pAttachments (:pointer (:struct VkPipelineColorBlendAttachmentState)))#|LEN (:attachmentCount)|#
  (blendConstants :float :count 4))

(cffi:defcstruct VkPipelineDynamicStateCreateInfo
  (sType VkStructureType)#|MUST-BE :PIPELINE-DYNAMIC-STATE-CREATE-INFO|#
  (pNext (:pointer :void))
  (flags VkPipelineDynamicStateCreateFlags)#|OPTIONAL (:true)|#
  (dynamicStateCount :uint32)
  (pDynamicStates (:pointer VkDynamicState))#|LEN (:dynamicStateCount)|#)

(cffi:defcstruct VkGraphicsPipelineCreateInfo
  (sType VkStructureType)#|MUST-BE :GRAPHICS-PIPELINE-CREATE-INFO|#
  (pNext (:pointer :void))
  (flags VkPipelineCreateFlags)#|OPTIONAL (:true)|#
  (stageCount :uint32)
  (pStages (:pointer (:struct VkPipelineShaderStageCreateInfo)))#|LEN (:stageCount)|#
  (pVertexInputState (:pointer (:struct VkPipelineVertexInputStateCreateInfo)))
  (pInputAssemblyState (:pointer
                        (:struct VkPipelineInputAssemblyStateCreateInfo)))
  (pTessellationState (:pointer (:struct VkPipelineTessellationStateCreateInfo)))#|OPTIONAL (:true)|#
  (pViewportState (:pointer (:struct VkPipelineViewportStateCreateInfo)))#|OPTIONAL (:true)|#
  (pRasterizationState (:pointer
                        (:struct VkPipelineRasterizationStateCreateInfo)))
  (pMultisampleState (:pointer (:struct VkPipelineMultisampleStateCreateInfo)))#|OPTIONAL (:true)|#
  (pDepthStencilState (:pointer (:struct VkPipelineDepthStencilStateCreateInfo)))#|OPTIONAL (:true)|#
  (pColorBlendState (:pointer (:struct VkPipelineColorBlendStateCreateInfo)))#|OPTIONAL (:true)|#
  (pDynamicState (:pointer (:struct VkPipelineDynamicStateCreateInfo)))#|OPTIONAL (:true)|#
  (layout VkPipelineLayout)#|OPAQUE T|#
  (renderPass VkRenderPass)#|OPAQUE T|#
  (subpass :uint32)
  (basePipelineHandle VkPipeline)#|OPTIONAL (:true) OPAQUE T|#
  (basePipelineIndex :int32))

(cffi:defcstruct VkXYColorEXT
  (x :float)
  (y :float))

(cffi:defcstruct VkHdrMetadataEXT
  (sType VkStructureType)#|MUST-BE :HDR-METADATA-EXT|#
  (pNext (:pointer :void))
  (displayPrimaryRed (:struct VkXYColorEXT))
  (displayPrimaryGreen (:struct VkXYColorEXT))
  (displayPrimaryBlue (:struct VkXYColorEXT))
  (whitePoint (:struct VkXYColorEXT))
  (maxLuminance :float)
  (minLuminance :float)
  (maxContentLightLevel :float)
  (maxFrameAverageLightLevel :float))

(cffi:defcstruct VkIOSSurfaceCreateInfoMVK
  (sType VkStructureType)#|MUST-BE :IOS-SURFACE-CREATE-INFO-MVK|#
  (pNext (:pointer :void))
  (flags VkIOSSurfaceCreateFlagsMVK)#|OPTIONAL (:true)|#
  (pView (:pointer :void)))

(cffi:defcstruct VkImageBlit
  (srcSubresource (:struct VkImageSubresourceLayers))
  (srcOffsets (:struct VkOffset3D) :count 2)
  (dstSubresource (:struct VkImageSubresourceLayers))
  (dstOffsets (:struct VkOffset3D) :count 2))

(cffi:defcstruct VkImageCopy
  (srcSubresource (:struct VkImageSubresourceLayers))
  (srcOffset (:struct VkOffset3D))
  (dstSubresource (:struct VkImageSubresourceLayers))
  (dstOffset (:struct VkOffset3D))
  (extent (:struct VkExtent3D)))

(cffi:defcstruct VkImageCreateInfo
  (sType VkStructureType)#|MUST-BE :IMAGE-CREATE-INFO|#
  (pNext (:pointer :void))
  (flags VkImageCreateFlags)#|OPTIONAL (:true)|#
  (imageType VkImageType)
  (format VkFormat)
  (extent (:struct VkExtent3D))
  (mipLevels :uint32)
  (arrayLayers :uint32)
  (samples VkSampleCountFlagBits)
  (tiling VkImageTiling)
  (usage VkImageUsageFlags)
  (sharingMode VkSharingMode)
  (queueFamilyIndexCount :uint32)#|OPTIONAL (:true)|#
  (pQueueFamilyIndices (:pointer :uint32))#|LEN (:queueFamilyIndexCount)|#
  (initialLayout VkImageLayout))

(cffi:defcstruct VkImageFormatProperties2KHR
  (sType VkStructureType)#|MUST-BE :IMAGE-FORMAT-PROPERTIES-2-KHR|#
  (pNext (:pointer :void))
  (imageFormatProperties (:struct VkImageFormatProperties)))

(cffi:defcstruct VkImageSubresourceRange
  (aspectMask VkImageAspectFlags)
  (baseMipLevel :uint32)
  (levelCount :uint32)
  (baseArrayLayer :uint32)
  (layerCount :uint32))

(cffi:defcstruct VkImageMemoryBarrier
  (sType VkStructureType)#|MUST-BE :IMAGE-MEMORY-BARRIER|#
  (pNext (:pointer :void))
  (srcAccessMask VkAccessFlags)#|OPTIONAL (:true)|#
  (dstAccessMask VkAccessFlags)#|OPTIONAL (:true)|#
  (oldLayout VkImageLayout)
  (newLayout VkImageLayout)
  (srcQueueFamilyIndex :uint32)
  (dstQueueFamilyIndex :uint32)
  (image VkImage)#|OPAQUE T|#
  (subresourceRange (:struct VkImageSubresourceRange)))

(cffi:defcstruct VkImageResolve
  (srcSubresource (:struct VkImageSubresourceLayers))
  (srcOffset (:struct VkOffset3D))
  (dstSubresource (:struct VkImageSubresourceLayers))
  (dstOffset (:struct VkOffset3D))
  (extent (:struct VkExtent3D)))

(cffi:defcstruct VkImageSwapchainCreateInfoKHX
  (sType VkStructureType)#|MUST-BE :IMAGE-SWAPCHAIN-CREATE-INFO-KHX|#
  (pNext (:pointer :void))
  (swapchain VkSwapchainKHR)#|OPTIONAL (:true) OPAQUE T|#)

(cffi:defcstruct VkImageViewCreateInfo
  (sType VkStructureType)#|MUST-BE :IMAGE-VIEW-CREATE-INFO|#
  (pNext (:pointer :void))
  (flags VkImageViewCreateFlags)#|OPTIONAL (:true)|#
  (image VkImage)#|OPAQUE T|#
  (viewType VkImageViewType)
  (format VkFormat)
  (components (:struct VkComponentMapping))
  (subresourceRange (:struct VkImageSubresourceRange)))

(cffi:defcstruct VkImportMemoryFdInfoKHX
  (sType VkStructureType)#|MUST-BE :IMPORT-MEMORY-FD-INFO-KHX|#
  (pNext (:pointer :void))
  (handleType VkExternalMemoryHandleTypeFlagBitsKHX)#|OPTIONAL (:true)|#
  (fd :int))

(cffi:defcstruct VkImportMemoryWin32HandleInfoKHX
  (sType VkStructureType)#|MUST-BE :IMPORT-MEMORY-WIN32-HANDLE-INFO-KHX|#
  (pNext (:pointer :void))
  (handleType VkExternalMemoryHandleTypeFlagBitsKHX)#|OPTIONAL (:true)|#
  (handle HANDLE))

(cffi:defcstruct VkImportMemoryWin32HandleInfoNV
  (sType VkStructureType)#|MUST-BE :IMPORT-MEMORY-WIN32-HANDLE-INFO-NV|#
  (pNext (:pointer :void))
  (handleType VkExternalMemoryHandleTypeFlagsNV)#|OPTIONAL (:true)|#
  (handle HANDLE)#|OPTIONAL (:true)|#)

(cffi:defcstruct VkImportSemaphoreFdInfoKHX
  (sType VkStructureType)#|MUST-BE :IMPORT-SEMAPHORE-FD-INFO-KHX|#
  (pNext (:pointer :void))
  (semaphore VkSemaphore)#|OPAQUE T|#
  (handleType VkExternalSemaphoreHandleTypeFlagBitsKHX)
  (fd :int))

(cffi:defcstruct VkImportSemaphoreWin32HandleInfoKHX
  (sType VkStructureType)#|MUST-BE :IMPORT-SEMAPHORE-WIN32-HANDLE-INFO-KHX|#
  (pNext (:pointer :void))
  (semaphore VkSemaphore)#|OPAQUE T|#
  (handleType VkExternalSemaphoreHandleTypeFlagsKHX)
  (handle HANDLE))

(cffi:defcstruct VkIndirectCommandsLayoutTokenNVX
  (tokenType VkIndirectCommandsTokenTypeNVX)
  (bindingUnit :uint32)
  (dynamicCount :uint32)
  (divisor :uint32))

(cffi:defcstruct VkIndirectCommandsLayoutCreateInfoNVX
  (sType VkStructureType)#|MUST-BE :INDIRECT-COMMANDS-LAYOUT-CREATE-INFO-NVX|#
  (pNext (:pointer :void))
  (pipelineBindPoint VkPipelineBindPoint)
  (flags VkIndirectCommandsLayoutUsageFlagsNVX)
  (tokenCount :uint32)
  (pTokens (:pointer (:struct VkIndirectCommandsLayoutTokenNVX)))#|LEN (:tokenCount)|#)

(cffi:defcstruct VkInstanceCreateInfo
  (sType VkStructureType)#|MUST-BE :INSTANCE-CREATE-INFO|#
  (pNext (:pointer :void))
  (flags VkInstanceCreateFlags)#|OPTIONAL (:true)|#
  (pApplicationInfo (:pointer (:struct VkApplicationInfo)))#|OPTIONAL (:true)|#
  (enabledLayerCount :uint32)#|OPTIONAL (:true)|#
  (ppEnabledLayerNames (:pointer (:pointer :char)))#|LEN (:enabledLayerCount
                                                          NULL-TERMINATED)|#
  (enabledExtensionCount :uint32)#|OPTIONAL (:true)|#
  (ppEnabledExtensionNames (:pointer (:pointer :char)))#|LEN (:enabledExtensionCount
                                                              NULL-TERMINATED)|#)

(cffi:defcstruct VkLayerProperties
  (layerName :char :count 256)
  (specVersion :uint32)
  (implementationVersion :uint32)
  (description :char :count 256))

(cffi:defcstruct VkMacOSSurfaceCreateInfoMVK
  (sType VkStructureType)#|MUST-BE :MACOS-SURFACE-CREATE-INFO-MVK|#
  (pNext (:pointer :void))
  (flags VkMacOSSurfaceCreateFlagsMVK)#|OPTIONAL (:true)|#
  (pView (:pointer :void)))

(cffi:defcstruct VkMappedMemoryRange
  (sType VkStructureType)#|MUST-BE :MAPPED-MEMORY-RANGE|#
  (pNext (:pointer :void))
  (memory VkDeviceMemory)#|OPAQUE T|#
  (offset VkDeviceSize)
  (size VkDeviceSize))

(cffi:defcstruct VkMemoryAllocateFlagsInfoKHX
  (sType VkStructureType)#|MUST-BE :MEMORY-ALLOCATE-FLAGS-INFO-KHX|#
  (pNext (:pointer :void))
  (flags VkMemoryAllocateFlagsKHX)#|OPTIONAL (:true)|#
  (deviceMask :uint32))

(cffi:defcstruct VkMemoryAllocateInfo
  (sType VkStructureType)#|MUST-BE :MEMORY-ALLOCATE-INFO|#
  (pNext (:pointer :void))
  (allocationSize VkDeviceSize)
  (memoryTypeIndex :uint32))

(cffi:defcstruct VkMemoryBarrier
  (sType VkStructureType)#|MUST-BE :MEMORY-BARRIER|#
  (pNext (:pointer :void))
  (srcAccessMask VkAccessFlags)#|OPTIONAL (:true)|#
  (dstAccessMask VkAccessFlags)#|OPTIONAL (:true)|#)

(cffi:defcstruct VkMemoryFdPropertiesKHX
  (sType VkStructureType)#|MUST-BE :MEMORY-FD-PROPERTIES-KHX|#
  (pNext (:pointer :void))
  (memoryTypeBits :uint32))

(cffi:defcstruct VkMemoryHeap
  (size VkDeviceSize)
  (flags VkMemoryHeapFlags)#|OPTIONAL (:true)|#)

(cffi:defcstruct VkMemoryRequirements
  (size VkDeviceSize)
  (alignment VkDeviceSize)
  (memoryTypeBits :uint32))

(cffi:defcstruct VkMemoryType
  (propertyFlags VkMemoryPropertyFlags)#|OPTIONAL (:true)|#
  (heapIndex :uint32))

(cffi:defcstruct VkMemoryWin32HandlePropertiesKHX
  (sType VkStructureType)#|MUST-BE :MEMORY-WIN32-HANDLE-PROPERTIES-KHX|#
  (pNext (:pointer :void))
  (memoryTypeBits :uint32))

(cffi:defcstruct VkMirSurfaceCreateInfoKHR
  (sType VkStructureType)#|MUST-BE :MIR-SURFACE-CREATE-INFO-KHR|#
  (pNext (:pointer :void))
  (flags VkMirSurfaceCreateFlagsKHR)#|OPTIONAL (:true)|#
  (connection (:pointer MirConnection))#|OPAQUE T|#
  (mirSurface (:pointer MirSurface))#|OPAQUE T|#)

(cffi:defcstruct VkObjectTableCreateInfoNVX
  (sType VkStructureType)#|MUST-BE :OBJECT-TABLE-CREATE-INFO-NVX|#
  (pNext (:pointer :void))
  (objectCount :uint32)
  (pObjectEntryTypes (:pointer VkObjectEntryTypeNVX))#|LEN (:objectCount)|#
  (pObjectEntryCounts (:pointer :uint32))#|LEN (:objectCount)|#
  (pObjectEntryUsageFlags (:pointer VkObjectEntryUsageFlagsNVX))#|LEN (:objectCount)|#
  (maxUniformBuffersPerDescriptor :uint32)
  (maxStorageBuffersPerDescriptor :uint32)
  (maxStorageImagesPerDescriptor :uint32)
  (maxSampledImagesPerDescriptor :uint32)
  (maxPipelineLayouts :uint32))

(cffi:defcstruct VkObjectTableDescriptorSetEntryNVX
  (type VkObjectEntryTypeNVX)
  (flags VkObjectEntryUsageFlagsNVX)
  (pipelineLayout VkPipelineLayout)#|OPAQUE T|#
  (descriptorSet VkDescriptorSet)#|OPAQUE T|#)

(cffi:defcstruct VkObjectTableEntryNVX
  (type VkObjectEntryTypeNVX)
  (flags VkObjectEntryUsageFlagsNVX))

(cffi:defcstruct VkObjectTableIndexBufferEntryNVX
  (type VkObjectEntryTypeNVX)
  (flags VkObjectEntryUsageFlagsNVX)
  (buffer VkBuffer)#|OPAQUE T|#
  (indexType VkIndexType))

(cffi:defcstruct VkObjectTablePipelineEntryNVX
  (type VkObjectEntryTypeNVX)
  (flags VkObjectEntryUsageFlagsNVX)
  (pipeline VkPipeline)#|OPAQUE T|#)

(cffi:defcstruct VkObjectTablePushConstantEntryNVX
  (type VkObjectEntryTypeNVX)
  (flags VkObjectEntryUsageFlagsNVX)
  (pipelineLayout VkPipelineLayout)#|OPAQUE T|#
  (stageFlags VkShaderStageFlags))

(cffi:defcstruct VkObjectTableVertexBufferEntryNVX
  (type VkObjectEntryTypeNVX)
  (flags VkObjectEntryUsageFlagsNVX)
  (buffer VkBuffer)#|OPAQUE T|#)

(cffi:defcstruct VkPastPresentationTimingGOOGLE
  (presentID :uint32)
  (desiredPresentTime :uint64)
  (actualPresentTime :uint64)
  (earliestPresentTime :uint64)
  (presentMargin :uint64))

(cffi:defcstruct VkPhysicalDeviceDiscardRectanglePropertiesEXT
  (sType VkStructureType)#|MUST-BE :PHYSICAL-DEVICE-DISCARD-RECTANGLE-PROPERTIES-EXT|#
  (pNext (:pointer :void))
  (maxDiscardRectangles :uint32))

(cffi:defcstruct VkPhysicalDeviceExternalBufferInfoKHX
  (sType VkStructureType)#|MUST-BE :PHYSICAL-DEVICE-EXTERNAL-BUFFER-INFO-KHX|#
  (pNext (:pointer :void))
  (flags VkBufferCreateFlags)#|OPTIONAL (:true)|#
  (usage VkBufferUsageFlags)
  (handleType VkExternalMemoryHandleTypeFlagBitsKHX))

(cffi:defcstruct VkPhysicalDeviceExternalImageFormatInfoKHX
  (sType VkStructureType)#|MUST-BE :PHYSICAL-DEVICE-EXTERNAL-IMAGE-FORMAT-INFO-KHX|#
  (pNext (:pointer :void))
  (handleType VkExternalMemoryHandleTypeFlagBitsKHX)#|OPTIONAL (:true)|#)

(cffi:defcstruct VkPhysicalDeviceExternalSemaphoreInfoKHX
  (sType VkStructureType)#|MUST-BE :PHYSICAL-DEVICE-EXTERNAL-SEMAPHORE-INFO-KHX|#
  (pNext (:pointer :void))
  (handleType VkExternalSemaphoreHandleTypeFlagBitsKHX))

(cffi:defcstruct VkPhysicalDeviceFeatures2KHR
  (sType VkStructureType)#|MUST-BE :PHYSICAL-DEVICE-FEATURES-2-KHR|#
  (pNext (:pointer :void))
  (features (:struct VkPhysicalDeviceFeatures)))

(cffi:defcstruct VkPhysicalDeviceGroupPropertiesKHX
  (sType VkStructureType)#|MUST-BE :PHYSICAL-DEVICE-GROUP-PROPERTIES-KHX|#
  (pNext (:pointer :void))
  (physicalDeviceCount :uint32)
  (physicalDevices VkPhysicalDevice :count 32)#|OPAQUE T|#
  (subsetAllocation VkBool32))

(cffi:defcstruct VkPhysicalDeviceIDPropertiesKHX
  (sType VkStructureType)#|MUST-BE :PHYSICAL-DEVICE-ID-PROPERTIES-KHX|#
  (pNext (:pointer :void))
  (deviceUUID :uint8 :count 16)
  (driverUUID :uint8 :count 16)
  (deviceLUID :uint8 :count 8)
  (deviceLUIDValid VkBool32))

(cffi:defcstruct VkPhysicalDeviceImageFormatInfo2KHR
  (sType VkStructureType)#|MUST-BE :PHYSICAL-DEVICE-IMAGE-FORMAT-INFO-2-KHR|#
  (pNext (:pointer :void))
  (format VkFormat)
  (type VkImageType)
  (tiling VkImageTiling)
  (usage VkImageUsageFlags)
  (flags VkImageCreateFlags)#|OPTIONAL (:true)|#)

(cffi:defcstruct VkPhysicalDeviceLimits
  (maxImageDimension1D :uint32)
  (maxImageDimension2D :uint32)
  (maxImageDimension3D :uint32)
  (maxImageDimensionCube :uint32)
  (maxImageArrayLayers :uint32)
  (maxTexelBufferElements :uint32)
  (maxUniformBufferRange :uint32)
  (maxStorageBufferRange :uint32)
  (maxPushConstantsSize :uint32)
  (maxMemoryAllocationCount :uint32)
  (maxSamplerAllocationCount :uint32)
  (bufferImageGranularity VkDeviceSize)
  (sparseAddressSpaceSize VkDeviceSize)
  (maxBoundDescriptorSets :uint32)
  (maxPerStageDescriptorSamplers :uint32)
  (maxPerStageDescriptorUniformBuffers :uint32)
  (maxPerStageDescriptorStorageBuffers :uint32)
  (maxPerStageDescriptorSampledImages :uint32)
  (maxPerStageDescriptorStorageImages :uint32)
  (maxPerStageDescriptorInputAttachments :uint32)
  (maxPerStageResources :uint32)
  (maxDescriptorSetSamplers :uint32)
  (maxDescriptorSetUniformBuffers :uint32)
  (maxDescriptorSetUniformBuffersDynamic :uint32)
  (maxDescriptorSetStorageBuffers :uint32)
  (maxDescriptorSetStorageBuffersDynamic :uint32)
  (maxDescriptorSetSampledImages :uint32)
  (maxDescriptorSetStorageImages :uint32)
  (maxDescriptorSetInputAttachments :uint32)
  (maxVertexInputAttributes :uint32)
  (maxVertexInputBindings :uint32)
  (maxVertexInputAttributeOffset :uint32)
  (maxVertexInputBindingStride :uint32)
  (maxVertexOutputComponents :uint32)
  (maxTessellationGenerationLevel :uint32)
  (maxTessellationPatchSize :uint32)
  (maxTessellationControlPerVertexInputComponents :uint32)
  (maxTessellationControlPerVertexOutputComponents :uint32)
  (maxTessellationControlPerPatchOutputComponents :uint32)
  (maxTessellationControlTotalOutputComponents :uint32)
  (maxTessellationEvaluationInputComponents :uint32)
  (maxTessellationEvaluationOutputComponents :uint32)
  (maxGeometryShaderInvocations :uint32)
  (maxGeometryInputComponents :uint32)
  (maxGeometryOutputComponents :uint32)
  (maxGeometryOutputVertices :uint32)
  (maxGeometryTotalOutputComponents :uint32)
  (maxFragmentInputComponents :uint32)
  (maxFragmentOutputAttachments :uint32)
  (maxFragmentDualSrcAttachments :uint32)
  (maxFragmentCombinedOutputResources :uint32)
  (maxComputeSharedMemorySize :uint32)
  (maxComputeWorkGroupCount :uint32 :count 3)
  (maxComputeWorkGroupInvocations :uint32)
  (maxComputeWorkGroupSize :uint32 :count 3)
  (subPixelPrecisionBits :uint32)
  (subTexelPrecisionBits :uint32)
  (mipmapPrecisionBits :uint32)
  (maxDrawIndexedIndexValue :uint32)
  (maxDrawIndirectCount :uint32)
  (maxSamplerLodBias :float)
  (maxSamplerAnisotropy :float)
  (maxViewports :uint32)
  (maxViewportDimensions :uint32 :count 2)
  (viewportBoundsRange :float :count 2)
  (viewportSubPixelBits :uint32)
  (minMemoryMapAlignment size-t)
  (minTexelBufferOffsetAlignment VkDeviceSize)
  (minUniformBufferOffsetAlignment VkDeviceSize)
  (minStorageBufferOffsetAlignment VkDeviceSize)
  (minTexelOffset :int32)
  (maxTexelOffset :uint32)
  (minTexelGatherOffset :int32)
  (maxTexelGatherOffset :uint32)
  (minInterpolationOffset :float)
  (maxInterpolationOffset :float)
  (subPixelInterpolationOffsetBits :uint32)
  (maxFramebufferWidth :uint32)
  (maxFramebufferHeight :uint32)
  (maxFramebufferLayers :uint32)
  (framebufferColorSampleCounts VkSampleCountFlags)#|OPTIONAL (:true)|#
  (framebufferDepthSampleCounts VkSampleCountFlags)#|OPTIONAL (:true)|#
  (framebufferStencilSampleCounts VkSampleCountFlags)#|OPTIONAL (:true)|#
  (framebufferNoAttachmentsSampleCounts VkSampleCountFlags)#|OPTIONAL (:true)|#
  (maxColorAttachments :uint32)
  (sampledImageColorSampleCounts VkSampleCountFlags)#|OPTIONAL (:true)|#
  (sampledImageIntegerSampleCounts VkSampleCountFlags)#|OPTIONAL (:true)|#
  (sampledImageDepthSampleCounts VkSampleCountFlags)#|OPTIONAL (:true)|#
  (sampledImageStencilSampleCounts VkSampleCountFlags)#|OPTIONAL (:true)|#
  (storageImageSampleCounts VkSampleCountFlags)#|OPTIONAL (:true)|#
  (maxSampleMaskWords :uint32)
  (timestampComputeAndGraphics VkBool32)
  (timestampPeriod :float)
  (maxClipDistances :uint32)
  (maxCullDistances :uint32)
  (maxCombinedClipAndCullDistances :uint32)
  (discreteQueuePriorities :uint32)
  (pointSizeRange :float :count 2)
  (lineWidthRange :float :count 2)
  (pointSizeGranularity :float)
  (lineWidthGranularity :float)
  (strictLines VkBool32)
  (standardSampleLocations VkBool32)
  (optimalBufferCopyOffsetAlignment VkDeviceSize)
  (optimalBufferCopyRowPitchAlignment VkDeviceSize)
  (nonCoherentAtomSize VkDeviceSize))

(cffi:defcstruct VkPhysicalDeviceMemoryProperties
  (memoryTypeCount :uint32)
  (memoryTypes (:struct VkMemoryType) :count 32)
  (memoryHeapCount :uint32)
  (memoryHeaps (:struct VkMemoryHeap) :count 16))

(cffi:defcstruct VkPhysicalDeviceMemoryProperties2KHR
  (sType VkStructureType)#|MUST-BE :PHYSICAL-DEVICE-MEMORY-PROPERTIES-2-KHR|#
  (pNext (:pointer :void))
  (memoryProperties (:struct VkPhysicalDeviceMemoryProperties)))

(cffi:defcstruct VkPhysicalDeviceMultiviewFeaturesKHX
  (sType VkStructureType)#|MUST-BE :PHYSICAL-DEVICE-MULTIVIEW-FEATURES-KHX|#
  (pNext (:pointer :void))
  (multiview VkBool32)
  (multiviewGeometryShader VkBool32)
  (multiviewTessellationShader VkBool32))

(cffi:defcstruct VkPhysicalDeviceMultiviewPerViewAttributesPropertiesNVX
  (sType VkStructureType)#|MUST-BE :PHYSICAL-DEVICE-MULTIVIEW-PER-VIEW-ATTRIBUTES-PROPERTIES-NVX|#
  (pNext (:pointer :void))
  (perViewPositionAllComponents VkBool32))

(cffi:defcstruct VkPhysicalDeviceMultiviewPropertiesKHX
  (sType VkStructureType)#|MUST-BE :PHYSICAL-DEVICE-MULTIVIEW-PROPERTIES-KHX|#
  (pNext (:pointer :void))
  (maxMultiviewViewCount :uint32)
  (maxMultiviewInstanceIndex :uint32))

(cffi:defcstruct VkPhysicalDeviceSparseProperties
  (residencyStandard2DBlockShape VkBool32)
  (residencyStandard2DMultisampleBlockShape VkBool32)
  (residencyStandard3DBlockShape VkBool32)
  (residencyAlignedMipSize VkBool32)
  (residencyNonResidentStrict VkBool32))

(cffi:defcstruct VkPhysicalDeviceProperties
  (apiVersion :uint32)
  (driverVersion :uint32)
  (vendorID :uint32)
  (deviceID :uint32)
  (deviceType VkPhysicalDeviceType)
  (deviceName :char :count 256)
  (pipelineCacheUUID :uint8 :count 16)
  (limits (:struct VkPhysicalDeviceLimits))
  (sparseProperties (:struct VkPhysicalDeviceSparseProperties)))

(cffi:defcstruct VkPhysicalDeviceProperties2KHR
  (sType VkStructureType)#|MUST-BE :PHYSICAL-DEVICE-PROPERTIES-2-KHR|#
  (pNext (:pointer :void))
  (properties (:struct VkPhysicalDeviceProperties)))

(cffi:defcstruct VkPhysicalDevicePushDescriptorPropertiesKHR
  (sType VkStructureType)#|MUST-BE :PHYSICAL-DEVICE-PUSH-DESCRIPTOR-PROPERTIES-KHR|#
  (pNext (:pointer :void))
  (maxPushDescriptors :uint32))

(cffi:defcstruct VkPhysicalDeviceSparseImageFormatInfo2KHR
  (sType VkStructureType)#|MUST-BE :PHYSICAL-DEVICE-SPARSE-IMAGE-FORMAT-INFO-2-KHR|#
  (pNext (:pointer :void))
  (format VkFormat)
  (type VkImageType)
  (samples VkSampleCountFlagBits)
  (usage VkImageUsageFlags)
  (tiling VkImageTiling))

(cffi:defcstruct VkPhysicalDeviceSurfaceInfo2KHR
  (sType VkStructureType)#|MUST-BE :PHYSICAL-DEVICE-SURFACE-INFO-2-KHR|#
  (pNext (:pointer :void))
  (surface VkSurfaceKHR)#|OPAQUE T|#)

(cffi:defcstruct VkPipelineCacheCreateInfo
  (sType VkStructureType)#|MUST-BE :PIPELINE-CACHE-CREATE-INFO|#
  (pNext (:pointer :void))
  (flags VkPipelineCacheCreateFlags)#|OPTIONAL (:true)|#
  (initialDataSize size-t)#|OPTIONAL (:true)|#
  (pInitialData (:pointer :void))#|LEN (:initialDataSize)|#)

(cffi:defcstruct VkPipelineDiscardRectangleStateCreateInfoEXT
  (sType VkStructureType)#|MUST-BE :PIPELINE-DISCARD-RECTANGLE-STATE-CREATE-INFO-EXT|#
  (pNext (:pointer :void))
  (flags VkPipelineDiscardRectangleStateCreateFlagsEXT)#|OPTIONAL (:true)|#
  (discardRectangleMode VkDiscardRectangleModeEXT)
  (discardRectangleCount :uint32)#|OPTIONAL (:true)|#
  (pDiscardRectangles (:pointer (:struct VkRect2D)))#|OPTIONAL (:true) LEN (:discardRectangleCount)|#)

(cffi:defcstruct VkPushConstantRange
  (stageFlags VkShaderStageFlags)
  (offset :uint32)
  (size :uint32))

(cffi:defcstruct VkPipelineLayoutCreateInfo
  (sType VkStructureType)#|MUST-BE :PIPELINE-LAYOUT-CREATE-INFO|#
  (pNext (:pointer :void))
  (flags VkPipelineLayoutCreateFlags)#|OPTIONAL (:true)|#
  (setLayoutCount :uint32)#|OPTIONAL (:true)|#
  (pSetLayouts (:pointer VkDescriptorSetLayout))#|LEN (:setLayoutCount) OPAQUE T|#
  (pushConstantRangeCount :uint32)#|OPTIONAL (:true)|#
  (pPushConstantRanges (:pointer (:struct VkPushConstantRange)))#|LEN (:pushConstantRangeCount)|#)

(cffi:defcstruct VkPipelineRasterizationStateRasterizationOrderAMD
  (sType VkStructureType)#|MUST-BE :PIPELINE-RASTERIZATION-STATE-RASTERIZATION-ORDER-AMD|#
  (pNext (:pointer :void))
  (rasterizationOrder VkRasterizationOrderAMD))

(cffi:defcstruct VkViewportSwizzleNV
  (x VkViewportCoordinateSwizzleNV)
  (y VkViewportCoordinateSwizzleNV)
  (z VkViewportCoordinateSwizzleNV)
  (w VkViewportCoordinateSwizzleNV))

(cffi:defcstruct VkPipelineViewportSwizzleStateCreateInfoNV
  (sType VkStructureType)#|MUST-BE :PIPELINE-VIEWPORT-SWIZZLE-STATE-CREATE-INFO-NV|#
  (pNext (:pointer :void))
  (flags VkPipelineViewportSwizzleStateCreateFlagsNV)#|OPTIONAL (:true)|#
  (viewportCount :uint32)
  (pViewportSwizzles (:pointer (:struct VkViewportSwizzleNV)))#|OPTIONAL (:true) LEN (:viewportCount)|#)

(cffi:defcstruct VkViewportWScalingNV
  (xcoeff :float)
  (ycoeff :float))

(cffi:defcstruct VkPipelineViewportWScalingStateCreateInfoNV
  (sType VkStructureType)#|MUST-BE :PIPELINE-VIEWPORT-W-SCALING-STATE-CREATE-INFO-NV|#
  (pNext (:pointer :void))
  (viewportWScalingEnable VkBool32)
  (viewportCount :uint32)
  (pViewportWScalings (:pointer (:struct VkViewportWScalingNV)))#|LEN (:viewportCount)|#)

(cffi:defcstruct VkPresentInfoKHR
  (sType VkStructureType)#|MUST-BE :PRESENT-INFO-KHR|#
  (pNext (:pointer :void))
  (waitSemaphoreCount :uint32)#|OPTIONAL (:true)|#
  (pWaitSemaphores (:pointer VkSemaphore))#|OPTIONAL (:true) LEN (:waitSemaphoreCount) OPAQUE T|#
  (swapchainCount :uint32)
  (pSwapchains (:pointer VkSwapchainKHR))#|LEN (:swapchainCount) OPAQUE T|#
  (pImageIndices (:pointer :uint32))#|LEN (:swapchainCount)|#
  (pResults (:pointer VkResult))#|OPTIONAL (:true) LEN (:swapchainCount)|#)

(cffi:defcstruct VkRectLayerKHR
  (offset (:struct VkOffset2D))
  (extent (:struct VkExtent2D))
  (layer :uint32))

(cffi:defcstruct VkPresentRegionKHR
  (rectangleCount :uint32)#|OPTIONAL (:true)|#
  (pRectangles (:pointer (:struct VkRectLayerKHR)))#|OPTIONAL (:true) LEN (:rectangleCount)|#)

(cffi:defcstruct VkPresentRegionsKHR
  (sType VkStructureType)#|MUST-BE :PRESENT-REGIONS-KHR|#
  (pNext (:pointer :void))
  (swapchainCount :uint32)
  (pRegions (:pointer (:struct VkPresentRegionKHR)))#|OPTIONAL (:true) LEN (:swapchainCount)|#)

(cffi:defcstruct VkPresentTimeGOOGLE
  (presentID :uint32)
  (desiredPresentTime :uint64))

(cffi:defcstruct VkPresentTimesInfoGOOGLE
  (sType VkStructureType)#|MUST-BE :PRESENT-TIMES-INFO-GOOGLE|#
  (pNext (:pointer :void))
  (swapchainCount :uint32)
  (pTimes (:pointer (:struct VkPresentTimeGOOGLE)))#|OPTIONAL (:true) LEN (:swapchainCount)|#)

(cffi:defcstruct VkQueryPoolCreateInfo
  (sType VkStructureType)#|MUST-BE :QUERY-POOL-CREATE-INFO|#
  (pNext (:pointer :void))
  (flags VkQueryPoolCreateFlags)#|OPTIONAL (:true)|#
  (queryType VkQueryType)
  (queryCount :uint32)
  (pipelineStatistics VkQueryPipelineStatisticFlags)#|OPTIONAL (:true)|#)

(cffi:defcstruct VkQueueFamilyProperties
  (queueFlags VkQueueFlags)#|OPTIONAL (:true)|#
  (queueCount :uint32)
  (timestampValidBits :uint32)
  (minImageTransferGranularity (:struct VkExtent3D)))

(cffi:defcstruct VkQueueFamilyProperties2KHR
  (sType VkStructureType)#|MUST-BE :QUEUE-FAMILY-PROPERTIES-2-KHR|#
  (pNext (:pointer :void))
  (queueFamilyProperties (:struct VkQueueFamilyProperties)))

(cffi:defcstruct VkRect3D
  (offset (:struct VkOffset3D))
  (extent (:struct VkExtent3D)))

(cffi:defcstruct VkRefreshCycleDurationGOOGLE
  (refreshDuration :uint64))

(cffi:defcstruct VkRenderPassBeginInfo
  (sType VkStructureType)#|MUST-BE :RENDER-PASS-BEGIN-INFO|#
  (pNext (:pointer :void))
  (renderPass VkRenderPass)#|OPAQUE T|#
  (framebuffer VkFramebuffer)#|OPAQUE T|#
  (renderArea (:struct VkRect2D))
  (clearValueCount :uint32)#|OPTIONAL (:true)|#
  (pClearValues (:pointer (:union VkClearValue)))#|LEN (:clearValueCount)|#)

(cffi:defcstruct VkSubpassDescription
  (flags VkSubpassDescriptionFlags)#|OPTIONAL (:true)|#
  (pipelineBindPoint VkPipelineBindPoint)
  (inputAttachmentCount :uint32)#|OPTIONAL (:true)|#
  (pInputAttachments (:pointer (:struct VkAttachmentReference)))#|LEN (:inputAttachmentCount)|#
  (colorAttachmentCount :uint32)#|OPTIONAL (:true)|#
  (pColorAttachments (:pointer (:struct VkAttachmentReference)))#|LEN (:colorAttachmentCount)|#
  (pResolveAttachments (:pointer (:struct VkAttachmentReference)))#|OPTIONAL (:true) LEN (:colorAttachmentCount)|#
  (pDepthStencilAttachment (:pointer (:struct VkAttachmentReference)))#|OPTIONAL (:true)|#
  (preserveAttachmentCount :uint32)#|OPTIONAL (:true)|#
  (pPreserveAttachments (:pointer :uint32))#|LEN (:preserveAttachmentCount)|#)

(cffi:defcstruct VkSubpassDependency
  (srcSubpass :uint32)
  (dstSubpass :uint32)
  (srcStageMask VkPipelineStageFlags)
  (dstStageMask VkPipelineStageFlags)
  (srcAccessMask VkAccessFlags)#|OPTIONAL (:true)|#
  (dstAccessMask VkAccessFlags)#|OPTIONAL (:true)|#
  (dependencyFlags VkDependencyFlags)#|OPTIONAL (:true)|#)

(cffi:defcstruct VkRenderPassCreateInfo
  (sType VkStructureType)#|MUST-BE :RENDER-PASS-CREATE-INFO|#
  (pNext (:pointer :void))
  (flags VkRenderPassCreateFlags)#|OPTIONAL (:true)|#
  (attachmentCount :uint32)#|OPTIONAL (:true)|#
  (pAttachments (:pointer (:struct VkAttachmentDescription)))#|LEN (:attachmentCount)|#
  (subpassCount :uint32)
  (pSubpasses (:pointer (:struct VkSubpassDescription)))#|LEN (:subpassCount)|#
  (dependencyCount :uint32)#|OPTIONAL (:true)|#
  (pDependencies (:pointer (:struct VkSubpassDependency)))#|LEN (:dependencyCount)|#)

(cffi:defcstruct VkRenderPassMultiviewCreateInfoKHX
  (sType VkStructureType)#|MUST-BE :RENDER-PASS-MULTIVIEW-CREATE-INFO-KHX|#
  (pNext (:pointer :void))
  (subpassCount :uint32)#|OPTIONAL (:true)|#
  (pViewMasks (:pointer :uint32))#|LEN (:subpassCount)|#
  (dependencyCount :uint32)#|OPTIONAL (:true)|#
  (pViewOffsets (:pointer :int32))#|LEN (:dependencyCount)|#
  (correlationMaskCount :uint32)#|OPTIONAL (:true)|#
  (pCorrelationMasks (:pointer :uint32))#|LEN (:correlationMaskCount)|#)

(cffi:defcstruct VkSamplerCreateInfo
  (sType VkStructureType)#|MUST-BE :SAMPLER-CREATE-INFO|#
  (pNext (:pointer :void))
  (flags VkSamplerCreateFlags)#|OPTIONAL (:true)|#
  (magFilter VkFilter)
  (minFilter VkFilter)
  (mipmapMode VkSamplerMipmapMode)
  (addressModeU VkSamplerAddressMode)
  (addressModeV VkSamplerAddressMode)
  (addressModeW VkSamplerAddressMode)
  (mipLodBias :float)
  (anisotropyEnable VkBool32)
  (maxAnisotropy :float)
  (compareEnable VkBool32)
  (compareOp VkCompareOp)
  (minLod :float)
  (maxLod :float)
  (borderColor VkBorderColor)
  (unnormalizedCoordinates VkBool32))

(cffi:defcstruct VkSemaphoreCreateInfo
  (sType VkStructureType)#|MUST-BE :SEMAPHORE-CREATE-INFO|#
  (pNext (:pointer :void))
  (flags VkSemaphoreCreateFlags)#|OPTIONAL (:true)|#)

(cffi:defcstruct VkShaderModuleCreateInfo
  (sType VkStructureType)#|MUST-BE :SHADER-MODULE-CREATE-INFO|#
  (pNext (:pointer :void))
  (flags VkShaderModuleCreateFlags)#|OPTIONAL (:true)|#
  (codeSize size-t)
  (pCode (:pointer :uint32))#|LEN (latexmath:[codeSize \over 4])|#)

(cffi:defcstruct VkSharedPresentSurfaceCapabilitiesKHR
  (sType VkStructureType)#|MUST-BE :SHARED-PRESENT-SURFACE-CAPABILITIES-KHR|#
  (pNext (:pointer :void))
  (sharedPresentSupportedUsageFlags VkImageUsageFlags)#|OPTIONAL (:true)|#)

(cffi:defcstruct VkSparseImageFormatProperties
  (aspectMask VkImageAspectFlags)#|OPTIONAL (:true)|#
  (imageGranularity (:struct VkExtent3D))
  (flags VkSparseImageFormatFlags)#|OPTIONAL (:true)|#)

(cffi:defcstruct VkSparseImageFormatProperties2KHR
  (sType VkStructureType)#|MUST-BE :SPARSE-IMAGE-FORMAT-PROPERTIES-2-KHR|#
  (pNext (:pointer :void))
  (properties (:struct VkSparseImageFormatProperties)))

(cffi:defcstruct VkSparseImageMemoryRequirements
  (formatProperties (:struct VkSparseImageFormatProperties))
  (imageMipTailFirstLod :uint32)
  (imageMipTailSize VkDeviceSize)
  (imageMipTailOffset VkDeviceSize)
  (imageMipTailStride VkDeviceSize))

(cffi:defcstruct VkSubmitInfo
  (sType VkStructureType)#|MUST-BE :SUBMIT-INFO|#
  (pNext (:pointer :void))
  (waitSemaphoreCount :uint32)#|OPTIONAL (:true)|#
  (pWaitSemaphores (:pointer VkSemaphore))#|LEN (:waitSemaphoreCount) OPAQUE T|#
  (pWaitDstStageMask (:pointer VkPipelineStageFlags))#|LEN (:waitSemaphoreCount)|#
  (commandBufferCount :uint32)#|OPTIONAL (:true)|#
  (pCommandBuffers (:pointer VkCommandBuffer))#|LEN (:commandBufferCount) OPAQUE T|#
  (signalSemaphoreCount :uint32)#|OPTIONAL (:true)|#
  (pSignalSemaphores (:pointer VkSemaphore))#|LEN (:signalSemaphoreCount) OPAQUE T|#)

(cffi:defcstruct VkSubresourceLayout
  (offset VkDeviceSize)
  (size VkDeviceSize)
  (rowPitch VkDeviceSize)
  (arrayPitch VkDeviceSize)
  (depthPitch VkDeviceSize))

(cffi:defcstruct VkSurfaceCapabilities2EXT
  (sType VkStructureType)#|MUST-BE :SURFACE-CAPABILITIES2-EXT|#
  (pNext (:pointer :void))
  (minImageCount :uint32)
  (maxImageCount :uint32)
  (currentExtent (:struct VkExtent2D))
  (minImageExtent (:struct VkExtent2D))
  (maxImageExtent (:struct VkExtent2D))
  (maxImageArrayLayers :uint32)
  (supportedTransforms VkSurfaceTransformFlagsKHR)#|OPTIONAL (:true)|#
  (currentTransform VkSurfaceTransformFlagBitsKHR)
  (supportedCompositeAlpha VkCompositeAlphaFlagsKHR)#|OPTIONAL (:true)|#
  (supportedUsageFlags VkImageUsageFlags)#|OPTIONAL (:true)|#
  (supportedSurfaceCounters VkSurfaceCounterFlagsEXT)#|OPTIONAL (:true)|#)

(cffi:defcstruct VkSurfaceCapabilitiesKHR
  (minImageCount :uint32)
  (maxImageCount :uint32)
  (currentExtent (:struct VkExtent2D))
  (minImageExtent (:struct VkExtent2D))
  (maxImageExtent (:struct VkExtent2D))
  (maxImageArrayLayers :uint32)
  (supportedTransforms VkSurfaceTransformFlagsKHR)#|OPTIONAL (:true)|#
  (currentTransform VkSurfaceTransformFlagBitsKHR)
  (supportedCompositeAlpha VkCompositeAlphaFlagsKHR)#|OPTIONAL (:true)|#
  (supportedUsageFlags VkImageUsageFlags)#|OPTIONAL (:true)|#)

(cffi:defcstruct VkSurfaceCapabilities2KHR
  (sType VkStructureType)#|MUST-BE :SURFACE-CAPABILITIES-2-KHR|#
  (pNext (:pointer :void))
  (surfaceCapabilities (:struct VkSurfaceCapabilitiesKHR)))

(cffi:defcstruct VkSurfaceFormatKHR
  (format VkFormat)
  (colorSpace VkColorSpaceKHR))

(cffi:defcstruct VkSurfaceFormat2KHR
  (sType VkStructureType)#|MUST-BE :SURFACE-FORMAT-2-KHR|#
  (pNext (:pointer :void))
  (surfaceFormat (:struct VkSurfaceFormatKHR)))

(cffi:defcstruct VkSwapchainCounterCreateInfoEXT
  (sType VkStructureType)#|MUST-BE :SWAPCHAIN-COUNTER-CREATE-INFO-EXT|#
  (pNext (:pointer :void))
  (surfaceCounters VkSurfaceCounterFlagsEXT)#|OPTIONAL (:true)|#)

(cffi:defcstruct VkSwapchainCreateInfoKHR
  (sType VkStructureType)#|MUST-BE :SWAPCHAIN-CREATE-INFO-KHR|#
  (pNext (:pointer :void))
  (flags VkSwapchainCreateFlagsKHR)#|OPTIONAL (:true)|#
  (surface VkSurfaceKHR)#|OPAQUE T|#
  (minImageCount :uint32)
  (imageFormat VkFormat)
  (imageColorSpace VkColorSpaceKHR)
  (imageExtent (:struct VkExtent2D))
  (imageArrayLayers :uint32)
  (imageUsage VkImageUsageFlags)
  (imageSharingMode VkSharingMode)
  (queueFamilyIndexCount :uint32)#|OPTIONAL (:true)|#
  (pQueueFamilyIndices (:pointer :uint32))#|LEN (:queueFamilyIndexCount)|#
  (preTransform VkSurfaceTransformFlagBitsKHR)
  (compositeAlpha VkCompositeAlphaFlagBitsKHR)
  (presentMode VkPresentModeKHR)
  (clipped VkBool32)
  (oldSwapchain VkSwapchainKHR)#|OPTIONAL (:true) OPAQUE T|#)

(cffi:defcstruct VkTextureLODGatherFormatPropertiesAMD
  (sType VkStructureType)#|MUST-BE :TEXTURE-LOD-GATHER-FORMAT-PROPERTIES-AMD|#
  (pNext (:pointer :void))
  (supportsTextureGatherLODBiasAMD VkBool32))

(cffi:defcstruct VkValidationFlagsEXT
  (sType VkStructureType)#|MUST-BE :VALIDATION-FLAGS-EXT|#
  (pNext (:pointer :void))
  (disabledValidationCheckCount :uint32)
  (pDisabledValidationChecks (:pointer VkValidationCheckEXT))#|LEN (:disabledValidationCheckCount)|#)

(cffi:defcstruct VkViSurfaceCreateInfoNN
  (sType VkStructureType)#|MUST-BE :VI-SURFACE-CREATE-INFO-NN|#
  (pNext (:pointer :void))
  (flags VkViSurfaceCreateFlagsNN)#|OPTIONAL (:true)|#
  (window (:pointer :void)))

(cffi:defcstruct VkWaylandSurfaceCreateInfoKHR
  (sType VkStructureType)#|MUST-BE :WAYLAND-SURFACE-CREATE-INFO-KHR|#
  (pNext (:pointer :void))
  (flags VkWaylandSurfaceCreateFlagsKHR)#|OPTIONAL (:true)|#
  (display (:pointer (:struct wl_display)))#|OPAQUE T|#
  (surface (:pointer (:struct wl_surface)))#|OPAQUE T|#)

(cffi:defcstruct VkWin32KeyedMutexAcquireReleaseInfoKHX
  (sType VkStructureType)#|MUST-BE :WIN32-KEYED-MUTEX-ACQUIRE-RELEASE-INFO-KHX|#
  (pNext (:pointer :void))
  (acquireCount :uint32)#|OPTIONAL (:true)|#
  (pAcquireSyncs (:pointer VkDeviceMemory))#|LEN (:acquireCount) OPAQUE T|#
  (pAcquireKeys (:pointer :uint64))#|LEN (:acquireCount)|#
  (pAcquireTimeouts (:pointer :uint32))#|LEN (:acquireCount)|#
  (releaseCount :uint32)#|OPTIONAL (:true)|#
  (pReleaseSyncs (:pointer VkDeviceMemory))#|LEN (:releaseCount) OPAQUE T|#
  (pReleaseKeys (:pointer :uint64))#|LEN (:releaseCount)|#)

(cffi:defcstruct VkWin32KeyedMutexAcquireReleaseInfoNV
  (sType VkStructureType)#|MUST-BE :WIN32-KEYED-MUTEX-ACQUIRE-RELEASE-INFO-NV|#
  (pNext (:pointer :void))
  (acquireCount :uint32)#|OPTIONAL (:true)|#
  (pAcquireSyncs (:pointer VkDeviceMemory))#|LEN (:acquireCount) OPAQUE T|#
  (pAcquireKeys (:pointer :uint64))#|LEN (:acquireCount)|#
  (pAcquireTimeoutMilliseconds (:pointer :uint32))#|LEN (:acquireCount)|#
  (releaseCount :uint32)#|OPTIONAL (:true)|#
  (pReleaseSyncs (:pointer VkDeviceMemory))#|LEN (:releaseCount) OPAQUE T|#
  (pReleaseKeys (:pointer :uint64))#|LEN (:releaseCount)|#)

(cffi:defcstruct VkWin32SurfaceCreateInfoKHR
  (sType VkStructureType)#|MUST-BE :WIN32-SURFACE-CREATE-INFO-KHR|#
  (pNext (:pointer :void))
  (flags VkWin32SurfaceCreateFlagsKHR)#|OPTIONAL (:true)|#
  (hinstance HINSTANCE)
  (hwnd HWND))

(cffi:defcstruct VkWriteDescriptorSet
  (sType VkStructureType)#|MUST-BE :WRITE-DESCRIPTOR-SET|#
  (pNext (:pointer :void))
  (dstSet VkDescriptorSet)#|OPAQUE T|#
  (dstBinding :uint32)
  (dstArrayElement :uint32)
  (descriptorCount :uint32)
  (descriptorType VkDescriptorType)
  (pImageInfo (:pointer (:struct VkDescriptorImageInfo)))#|LEN (:descriptorCount)|#
  (pBufferInfo (:pointer (:struct VkDescriptorBufferInfo)))#|LEN (:descriptorCount)|#
  (pTexelBufferView (:pointer VkBufferView))#|LEN (:descriptorCount) OPAQUE T|#)

(cffi:defcstruct VkXcbSurfaceCreateInfoKHR
  (sType VkStructureType)#|MUST-BE :XCB-SURFACE-CREATE-INFO-KHR|#
  (pNext (:pointer :void))
  (flags VkXcbSurfaceCreateFlagsKHR)#|OPTIONAL (:true)|#
  (connection (:pointer xcb_connection_t))#|OPAQUE T|#
  (window xcb_window_t))

(cffi:defcstruct VkXlibSurfaceCreateInfoKHR
  (sType VkStructureType)#|MUST-BE :XLIB-SURFACE-CREATE-INFO-KHR|#
  (pNext (:pointer :void))
  (flags VkXlibSurfaceCreateFlagsKHR)#|OPTIONAL (:true)|#
  (dpy (:pointer Display))#|OPAQUE T|#
  (window Window))

